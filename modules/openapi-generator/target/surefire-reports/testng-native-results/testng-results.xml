<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="17" failed="0" ignored="18" total="1991" passed="1956">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="55017" started-at="2023-04-09T10:14:25 UTC" finished-at="2023-04-09T10:15:20 UTC">
    <groups>
      <group name="typescript-node">
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest@2dc39a7c]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest@2dc39a7c]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.convertVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="convertVarName" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.defaultApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultApiFilenameTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.defaultApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultApiImportTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.defaultModelFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultModelFilenameTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.defaultModelImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultModelImportTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.emptyApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="emptyApiFilenameTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.emptyApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="emptyApiImportTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.mappedApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="mappedApiFilenameTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.mappedApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="mappedApiImportTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.modelFilenameWithMappingTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="modelFilenameWithMappingTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.modelImportWithMappingTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="modelImportWithMappingTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.postProcessOperationsWithModelsTestWithImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithImportMapping" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.postProcessOperationsWithModelsTestWithModelNamePrefix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithModelNamePrefix" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.postProcessOperationsWithModelsTestWithModelNameSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithModelNameSuffix" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.postProcessOperationsWithModelsTestWithoutImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithoutImportMapping" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="testSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="testWithoutSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeModelTest.arrayModelAdditionalPropertiesArrayTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesArrayTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.arrayModelAdditionalPropertiesComplexTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesComplexTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.arrayModelAdditionalPropertiesStringTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesStringTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="complexListPropertyTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="complexPropertyTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.defaultFromModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="defaultFromModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="listPropertyTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="mapModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.mappedFromModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="mappedFromModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="simpleModelDefaultValuesTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="simpleModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
      </group> <!-- typescript-node -->
      <group name="typescript-nestjs">
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientOptionsTest@90b779d]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientOptionsTest@90b779d]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testModelFileSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testModelFileSuffix" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testOperationIdParser()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testOperationIdParser" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testRemovePrefixSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testRemovePrefixSuffix" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testSchema()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testSchema" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testWithoutSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsModelTest.arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="arrayModelTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.beginDecimalNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="beginDecimalNameTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="complexListPropertyTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="complexPropertyTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="listPropertyTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="mapModelTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="simpleModelTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypescriptNestjsApiVersionTest.testWithApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithApiVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest"/>
        <method signature="TypescriptNestjsApiVersionTest.testWithNpmVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithNpmVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest"/>
        <method signature="TypescriptNestjsApiVersionTest.testWithoutApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithoutApiVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest"/>
      </group> <!-- typescript-nestjs -->
      <group name="typescript-angular">
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest@3e158f3b]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest@3e158f3b]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testCorrectlyProducesImportsWithImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testCorrectlyProducesImportsWithImportMapping" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testKebabCasedModelFilenames()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testKebabCasedModelFilenames" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testModelFileSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testModelFileSuffix" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testModelSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testModelSuffix" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testOperationIdParser()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testOperationIdParser" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testRemovePrefixSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testRemovePrefixSuffix" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testSchema()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testSchema" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testTaggedUnionImports()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testTaggedUnionImports" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testToEnumName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testToEnumName" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testToParamNaming()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testToParamNaming" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testWithoutSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.toEnumVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="toEnumVarName" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.toVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="toVarName" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularModelTest.arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="arrayModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.arrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="arrayOneOfModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.beginDecimalNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="beginDecimalNameTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="complexListPropertyTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="complexPropertyTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.importTypeMappingModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="importTypeMappingModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.inlineModelWithUnderscoreNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="inlineModelWithUnderscoreNameTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="listPropertyTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="mapModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.objectPropertyAnyOfWithArrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="objectPropertyAnyOfWithArrayOneOfModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="simpleModelDefaultValuesTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="simpleModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypescriptAngularApiVersionTest.testWithApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithApiVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest"/>
        <method signature="TypescriptAngularApiVersionTest.testWithNpmVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithNpmVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest"/>
        <method signature="TypescriptAngularApiVersionTest.testWithoutApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithoutApiVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest"/>
      </group> <!-- typescript-angular -->
      <group name="typescript-axios">
        <method signature="TypeScriptAxiosClientCodegenTest.containsESMTSConfigFileInCaseOfES6AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="containsESMTSConfigFileInCaseOfES6AndNPM" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.doesNotContainESMTSConfigFileInCaseOfES5AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="doesNotContainESMTSConfigFileInCaseOfES5AndNPM" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNameCamelCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameCamelCaseNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNameOriginalNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameOriginalNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNamePascalCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNamePascalCaseNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNameSnakeCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameSnakeCaseNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNameUpperCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameUpperCaseNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
      </group> <!-- typescript-axios -->
      <group name="typescript-fetch">
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest@286fcc09]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest@286fcc09]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.containsESMTSConfigFileInCaseOfES6AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="containsESMTSConfigFileInCaseOfES6AndNPM" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.doesNotContainESMTSConfigFileInCaseOfES5AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="doesNotContainESMTSConfigFileInCaseOfES5AndNPM" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.getTypeDeclarationTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="getTypeDeclarationTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="testSnapshotVersion" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="testWithoutSnapshotVersion" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.toVarName()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="toVarName" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchModelTest.arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="arrayModelTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="complexListPropertyTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="complexPropertyTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.enumArrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="enumArrayModelTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.enumModelValueTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="enumModelValueTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="listPropertyTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="mapModelTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelDefaultValuesTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.simpleModelWithStringDateTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelWithStringDateTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.testNestedNullableSchemas()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNestedNullableSchemas" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.testNestedReadonlySchemas()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNestedReadonlySchemas" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.testNullSafeAdditionalProps()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNullSafeAdditionalProps" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.testWithoutNullSafeAdditionalProps()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testWithoutNullSafeAdditionalProps" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
      </group> <!-- typescript-fetch -->
      <group name="typescript-aurelia">
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.aurelia.TypeScriptAureliaClientOptionsTest@2889a7ae]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.aurelia.TypeScriptAureliaClientOptionsTest@2889a7ae]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
      </group> <!-- typescript-aurelia -->
      <group name="typescript">
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.aurelia.TypeScriptAureliaClientOptionsTest@2889a7ae]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest@286fcc09]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest@3e158f3b]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientOptionsTest@90b779d]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest@2dc39a7c]" name="checkOptionsHelp" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.aurelia.TypeScriptAureliaClientOptionsTest@2889a7ae]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest@286fcc09]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest@3e158f3b]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientOptionsTest@90b779d]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="AbstractOptionsTest.checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest@2dc39a7c]" name="checkOptionsProcessing" class="org.openapitools.codegen.AbstractOptionsTest"/>
        <method signature="SharedTypeScriptTest.oldImportsStillPresentTest()[pri:0, instance:org.openapitools.codegen.typescript.SharedTypeScriptTest@3c5c64d6]" name="oldImportsStillPresentTest" class="org.openapitools.codegen.typescript.SharedTypeScriptTest"/>
        <method signature="SharedTypeScriptTest.toModelImportMapTest()[pri:0, instance:org.openapitools.codegen.typescript.SharedTypeScriptTest@3c5c64d6]" name="toModelImportMapTest" class="org.openapitools.codegen.typescript.SharedTypeScriptTest"/>
        <method signature="SharedTypeScriptTest.typesInImportsAreSplitTest()[pri:0, instance:org.openapitools.codegen.typescript.SharedTypeScriptTest@3c5c64d6]" name="typesInImportsAreSplitTest" class="org.openapitools.codegen.typescript.SharedTypeScriptTest"/>
        <method signature="TypeScriptClientCodegenTest.defaultModelImportTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="defaultModelImportTest" class="org.openapitools.codegen.typescript.TypeScriptClientCodegenTest"/>
        <method signature="TypeScriptClientCodegenTest.getTypeDeclarationTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="getTypeDeclarationTest" class="org.openapitools.codegen.typescript.TypeScriptClientCodegenTest"/>
        <method signature="TypeScriptClientCodegenTest.modelImportWithMappingTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="modelImportWithMappingTest" class="org.openapitools.codegen.typescript.TypeScriptClientCodegenTest"/>
        <method signature="TypeScriptClientCodegenTest.testArrayWithUniqueItems()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="testArrayWithUniqueItems" class="org.openapitools.codegen.typescript.TypeScriptClientCodegenTest"/>
        <method signature="TypeScriptClientCodegenTest.testCompilePattern()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="testCompilePattern" class="org.openapitools.codegen.typescript.TypeScriptClientCodegenTest"/>
        <method signature="TypeScriptClientCodegenTest.testComposedSchemasImportTypesIndividually()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="testComposedSchemasImportTypesIndividually" class="org.openapitools.codegen.typescript.TypeScriptClientCodegenTest"/>
        <method signature="TypeScriptClientCodegenTest.testWithAdditionalProperties()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="testWithAdditionalProperties" class="org.openapitools.codegen.typescript.TypeScriptClientCodegenTest"/>
        <method signature="TypeScriptClientModelTest.arrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientModelTest@10504bc7]" name="arrayOneOfModelTest" class="org.openapitools.codegen.typescript.TypeScriptClientModelTest"/>
        <method signature="TypeScriptClientModelTest.objectPropertyAnyOfWithArrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientModelTest@10504bc7]" name="objectPropertyAnyOfWithArrayOneOfModelTest" class="org.openapitools.codegen.typescript.TypeScriptClientModelTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.containsESMTSConfigFileInCaseOfES6AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="containsESMTSConfigFileInCaseOfES6AndNPM" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.doesNotContainESMTSConfigFileInCaseOfES5AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="doesNotContainESMTSConfigFileInCaseOfES5AndNPM" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNameCamelCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameCamelCaseNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNameOriginalNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameOriginalNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNamePascalCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNamePascalCaseNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNameSnakeCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameSnakeCaseNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptAxiosClientCodegenTest.testToEnumVarNameUpperCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameUpperCaseNamingType" class="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.containsESMTSConfigFileInCaseOfES6AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="containsESMTSConfigFileInCaseOfES6AndNPM" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.doesNotContainESMTSConfigFileInCaseOfES5AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="doesNotContainESMTSConfigFileInCaseOfES5AndNPM" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.getTypeDeclarationTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="getTypeDeclarationTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="testSnapshotVersion" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="testWithoutSnapshotVersion" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchClientCodegenTest.toVarName()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="toVarName" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest"/>
        <method signature="TypeScriptFetchModelTest.arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="arrayModelTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="complexListPropertyTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="complexPropertyTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.enumArrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="enumArrayModelTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.enumModelValueTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="enumModelValueTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="listPropertyTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="mapModelTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelDefaultValuesTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.simpleModelWithStringDateTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelWithStringDateTest" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.testNestedNullableSchemas()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNestedNullableSchemas" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.testNestedReadonlySchemas()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNestedReadonlySchemas" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.testNullSafeAdditionalProps()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNullSafeAdditionalProps" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptFetchModelTest.testWithoutNullSafeAdditionalProps()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testWithoutNullSafeAdditionalProps" class="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testCorrectlyProducesImportsWithImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testCorrectlyProducesImportsWithImportMapping" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testKebabCasedModelFilenames()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testKebabCasedModelFilenames" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testModelFileSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testModelFileSuffix" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testModelSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testModelSuffix" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testOperationIdParser()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testOperationIdParser" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testRemovePrefixSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testRemovePrefixSuffix" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testSchema()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testSchema" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testTaggedUnionImports()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testTaggedUnionImports" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testToEnumName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testToEnumName" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testToParamNaming()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testToParamNaming" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testWithoutSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.toEnumVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="toEnumVarName" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularClientCodegenTest.toVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="toVarName" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest"/>
        <method signature="TypeScriptAngularModelTest.arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="arrayModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.arrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="arrayOneOfModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.beginDecimalNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="beginDecimalNameTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="complexListPropertyTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="complexPropertyTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.importTypeMappingModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="importTypeMappingModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.inlineModelWithUnderscoreNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="inlineModelWithUnderscoreNameTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="listPropertyTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="mapModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.objectPropertyAnyOfWithArrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="objectPropertyAnyOfWithArrayOneOfModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="simpleModelDefaultValuesTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypeScriptAngularModelTest.simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="simpleModelTest" class="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest"/>
        <method signature="TypescriptAngularApiVersionTest.testWithApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithApiVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest"/>
        <method signature="TypescriptAngularApiVersionTest.testWithNpmVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithNpmVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest"/>
        <method signature="TypescriptAngularApiVersionTest.testWithoutApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithoutApiVersion" class="org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testModelFileSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testModelFileSuffix" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testOperationIdParser()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testOperationIdParser" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testRemovePrefixSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testRemovePrefixSuffix" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testSchema()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testSchema" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsClientCodegenTest.testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testWithoutSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest"/>
        <method signature="TypeScriptNestjsModelTest.arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="arrayModelTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.beginDecimalNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="beginDecimalNameTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="complexListPropertyTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="complexPropertyTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="listPropertyTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="mapModelTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypeScriptNestjsModelTest.simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="simpleModelTest" class="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest"/>
        <method signature="TypescriptNestjsApiVersionTest.testWithApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithApiVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest"/>
        <method signature="TypescriptNestjsApiVersionTest.testWithNpmVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithNpmVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest"/>
        <method signature="TypescriptNestjsApiVersionTest.testWithoutApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithoutApiVersion" class="org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.convertVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="convertVarName" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.defaultApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultApiFilenameTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.defaultApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultApiImportTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.defaultModelFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultModelFilenameTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.defaultModelImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultModelImportTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.emptyApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="emptyApiFilenameTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.emptyApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="emptyApiImportTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.mappedApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="mappedApiFilenameTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.mappedApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="mappedApiImportTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.modelFilenameWithMappingTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="modelFilenameWithMappingTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.modelImportWithMappingTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="modelImportWithMappingTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.postProcessOperationsWithModelsTestWithImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithImportMapping" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.postProcessOperationsWithModelsTestWithModelNamePrefix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithModelNamePrefix" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.postProcessOperationsWithModelsTestWithModelNameSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithModelNameSuffix" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.postProcessOperationsWithModelsTestWithoutImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithoutImportMapping" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="testSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeClientCodegenTest.testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="testWithoutSnapshotVersion" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest"/>
        <method signature="TypeScriptNodeModelTest.arrayModelAdditionalPropertiesArrayTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesArrayTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.arrayModelAdditionalPropertiesComplexTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesComplexTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.arrayModelAdditionalPropertiesStringTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesStringTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="complexListPropertyTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="complexPropertyTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.defaultFromModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="defaultFromModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="listPropertyTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="mapModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.mappedFromModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="mappedFromModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="simpleModelDefaultValuesTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
        <method signature="TypeScriptNodeModelTest.simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="simpleModelTest" class="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest"/>
      </group> <!-- typescript -->
    </groups>
    <test name="Surefire test" duration-ms="55017" started-at="2023-04-09T10:14:25 UTC" finished-at="2023-04-09T10:15:20 UTC">
      <class name="org.openapitools.codegen.rust.AbstractRustCodegenTest">
        <test-method status="PASS" signature="testBestFittingIntegerType()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testBestFittingIntegerType" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBestFittingIntegerType -->
        <test-method status="PASS" signature="testCanFitIntoUnsigned()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testCanFitIntoUnsigned" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCanFitIntoUnsigned -->
        <test-method status="PASS" signature="testSanitizeIdentifier()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testSanitizeIdentifier" duration-ms="2" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSanitizeIdentifier -->
        <test-method status="PASS" signature="testIsReservedWord()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testIsReservedWord" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsReservedWord -->
        <test-method status="PASS" signature="testToApiFilename()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToApiFilename" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToApiFilename -->
        <test-method status="PASS" signature="testToApiName()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToApiName" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToApiName -->
        <test-method status="PASS" signature="testToEnumName()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToEnumName" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumName -->
        <test-method status="PASS" signature="testToEnumVarName()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToEnumVarName" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumVarName -->
        <test-method status="PASS" signature="testToEnumValue()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToEnumValue" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumValue -->
        <test-method status="PASS" signature="testToVarName()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToVarName" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToVarName -->
        <test-method status="PASS" signature="testToOperationId()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToOperationId" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToOperationId -->
        <test-method status="PASS" signature="testToParamName()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToParamName" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToParamName -->
        <test-method status="PASS" signature="testToModelName()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToModelName" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModelName -->
        <test-method status="PASS" signature="testToModelFileName()[pri:0, instance:org.openapitools.codegen.rust.AbstractRustCodegenTest@64138b0c]" name="testToModelFileName" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModelFileName -->
      </class> <!-- org.openapitools.codegen.rust.AbstractRustCodegenTest -->
      <class name="org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSEClientTest">
        <test-method status="SKIP" signature="buildPetstore()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSEClientTest@325bb9a6]" name="buildPetstore" duration-ms="24" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:129)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonClientBase.buildPetstore(FunctionalHelidonClientBase.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPetstore -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSEClientTest@325bb9a6]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="buildPetstoreNoMultipart()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSEClientTest@325bb9a6]" name="buildPetstoreNoMultipart" duration-ms="26" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:129)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonClientBase.buildPetstoreNoMultipart(FunctionalHelidonClientBase.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPetstoreNoMultipart -->
        <test-method status="SKIP" signature="buildPetstoreWithFakeEndpoints()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSEClientTest@325bb9a6]" name="buildPetstoreWithFakeEndpoints" duration-ms="64" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:129)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonClientBase.buildPetstoreWithFakeEndpoints(FunctionalHelidonClientBase.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPetstoreWithFakeEndpoints -->
        <test-method status="SKIP" signature="verifyFullProjectSemantics()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSEClientTest@325bb9a6]" name="verifyFullProjectSemantics" duration-ms="23" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonClientBase.verifyFullProjectSemantics(FunctionalHelidonClientBase.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFullProjectSemantics -->
      </class> <!-- org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSEClientTest -->
      <class name="org.openapitools.codegen.confluencewiki.ConfluenceWikiTest">
        <test-method status="PASS" signature="converterInArrayInArrayTest()[pri:0, instance:org.openapitools.codegen.confluencewiki.ConfluenceWikiTest@2415e4c7]" name="converterInArrayInArrayTest" duration-ms="2" started-at="2023-04-09T10:15:00 UTC" description="convert a model with an enum inside a list" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- converterInArrayInArrayTest -->
        <test-method status="PASS" signature="converterInArrayTest()[pri:0, instance:org.openapitools.codegen.confluencewiki.ConfluenceWikiTest@2415e4c7]" name="converterInArrayTest" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" description="convert a model with an enum inside a list" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- converterInArrayTest -->
        <test-method status="PASS" signature="converterTest()[pri:0, instance:org.openapitools.codegen.confluencewiki.ConfluenceWikiTest@2415e4c7]" name="converterTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="convert a model with an enum" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- converterTest -->
        <test-method status="PASS" signature="overrideEnumTest()[pri:0, instance:org.openapitools.codegen.confluencewiki.ConfluenceWikiTest@2415e4c7]" name="overrideEnumTest" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" description="not override identical parent enums" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overrideEnumTest -->
        <test-method status="PASS" signature="testEnumTestSchema()[pri:0, instance:org.openapitools.codegen.confluencewiki.ConfluenceWikiTest@2415e4c7]" name="testEnumTestSchema" duration-ms="57" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumTestSchema -->
      </class> <!-- org.openapitools.codegen.confluencewiki.ConfluenceWikiTest -->
      <class name="org.openapitools.codegen.java.jaxrs.AbstractJavaJAXRSServerCodegenTest">
        <test-method status="PASS" signature="convertApiName()[pri:0, instance:org.openapitools.codegen.java.jaxrs.AbstractJavaJAXRSServerCodegenTest@2b4c3c29]" name="convertApiName" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertApiName -->
        <test-method status="PASS" signature="testCommonPath()[pri:0, instance:org.openapitools.codegen.java.jaxrs.AbstractJavaJAXRSServerCodegenTest@2b4c3c29]" name="testCommonPath" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCommonPath -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.AbstractJavaJAXRSServerCodegenTest@2b4c3c29]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.AbstractJavaJAXRSServerCodegenTest@2b4c3c29]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.AbstractJavaJAXRSServerCodegenTest@2b4c3c29]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.java.jaxrs.AbstractJavaJAXRSServerCodegenTest -->
      <class name="org.openapitools.codegen.asciidoc.AsciidocGeneratorTest">
        <test-method status="PASS" signature="testAdditionalDirectoriesGeneratedIntoHeaderAttributes()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocGeneratorTest@9ce4845]" name="testAdditionalDirectoriesGeneratedIntoHeaderAttributes" duration-ms="9" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalDirectoriesGeneratedIntoHeaderAttributes -->
        <test-method status="PASS" signature="testGenerateIndexAsciidocMarkupContent()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocGeneratorTest@9ce4845]" name="testGenerateIndexAsciidocMarkupContent" duration-ms="6" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIndexAsciidocMarkupContent -->
        <test-method status="PASS" signature="testGenerateIndexAsciidocMarkupFileWithAsciidocGenerator()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocGeneratorTest@9ce4845]" name="testGenerateIndexAsciidocMarkupFileWithAsciidocGenerator" duration-ms="7" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIndexAsciidocMarkupFileWithAsciidocGenerator -->
        <test-method status="PASS" signature="testHeaderAttributesFlagRemovesAttributesFromMarkupHeaderSection()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocGeneratorTest@9ce4845]" name="testHeaderAttributesFlagRemovesAttributesFromMarkupHeaderSection" duration-ms="7" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeaderAttributesFlagRemovesAttributesFromMarkupHeaderSection -->
        <test-method status="PASS" signature="testPingSpecTitle()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocGeneratorTest@9ce4845]" name="testPingSpecTitle" duration-ms="2" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPingSpecTitle -->
      </class> <!-- org.openapitools.codegen.asciidoc.AsciidocGeneratorTest -->
      <class name="org.openapitools.codegen.scala.SttpPackagePropertyTest">
        <test-method status="PASS" signature="shouldUseDefaultPackageNameIfAdditionalPropertiesAreEmpty()[pri:0, instance:org.openapitools.codegen.scala.SttpPackagePropertyTest@279ab15e]" name="shouldUseDefaultPackageNameIfAdditionalPropertiesAreEmpty" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseDefaultPackageNameIfAdditionalPropertiesAreEmpty -->
        <test-method status="PASS" signature="shouldAllowToMixCustomPackages()[pri:0, instance:org.openapitools.codegen.scala.SttpPackagePropertyTest@279ab15e]" name="shouldAllowToMixCustomPackages" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAllowToMixCustomPackages -->
        <test-method status="PASS" signature="shouldUseCustomMainPackageNameIfProvided()[pri:0, instance:org.openapitools.codegen.scala.SttpPackagePropertyTest@279ab15e]" name="shouldUseCustomMainPackageNameIfProvided" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseCustomMainPackageNameIfProvided -->
      </class> <!-- org.openapitools.codegen.scala.SttpPackagePropertyTest -->
      <class name="org.openapitools.codegen.csharp.CSharpModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert an array model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="arrayPropertyCollectionOptionTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="arrayPropertyCollectionOptionTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a model with array property to Collection&lt;T&gt;" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPropertyCollectionOptionTest -->
        <test-method status="PASS" signature="arrayPropertyICollectionOptionTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="arrayPropertyICollectionOptionTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a model with array property to Collection&lt;T&gt;" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPropertyICollectionOptionTest -->
        <test-method status="PASS" signature="assertOuterEnumIsString()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="assertOuterEnumIsString" duration-ms="224" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertOuterEnumIsString -->
        <test-method status="PASS" signature="arrayPropertyTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="arrayPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="convert a model with array property to default List&lt;T&gt;" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPropertyTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="complexListPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="complexMapPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="listPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="mapPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="nonNullablePropertyTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="nonNullablePropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a non-nullable property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonNullablePropertyTest -->
        <test-method status="PASS" signature="nullablePropertyTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="nullablePropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a nullable property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullablePropertyTest -->
        <test-method status="PASS" signature="nullablePropertyWithNullableReferenceTypesTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="nullablePropertyWithNullableReferenceTypesTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a nullable property using nullable annotation" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullablePropertyWithNullableReferenceTypesTest -->
        <test-method status="PASS" signature="nullablePropertyWithoutNullableReferenceTypesTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="nullablePropertyWithoutNullableReferenceTypesTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a nullable property without nullable annotation" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullablePropertyWithoutNullableReferenceTypesTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.csharp.CSharpModelTest@4b4a3114]" name="simpleModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a simple model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- org.openapitools.codegen.csharp.CSharpModelTest -->
      <class name="org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest">
        <test-method status="PASS" signature="clientOptsUnicity()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="clientOptsUnicity" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clientOptsUnicity -->
        <test-method status="PASS" signature="doConfigureAuthParam()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doConfigureAuthParam" duration-ms="83" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doConfigureAuthParam -->
        <test-method status="PASS" signature="doGenerateForGradle()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doGenerateForGradle" duration-ms="16" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateForGradle -->
        <test-method status="PASS" signature="doGenerateForMaven()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doGenerateForMaven" duration-ms="27" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateForMaven -->
        <test-method status="PASS" signature="doGenerateForTestJUnit()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doGenerateForTestJUnit" duration-ms="106" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateForTestJUnit -->
        <test-method status="PASS" signature="doGenerateForTestSpock()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doGenerateForTestSpock" duration-ms="104" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateForTestSpock -->
        <test-method status="PASS" signature="doGenerateMultipleContentTypes()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doGenerateMultipleContentTypes" duration-ms="10" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateMultipleContentTypes -->
        <test-method status="PASS" signature="doGenerateOauth2InApplicationConfig()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doGenerateOauth2InApplicationConfig" duration-ms="29" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateOauth2InApplicationConfig -->
        <test-method status="PASS" signature="doGenerateRequiredPropertiesInConstructor()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doGenerateRequiredPropertiesInConstructor" duration-ms="92" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateRequiredPropertiesInConstructor -->
        <test-method status="PASS" signature="doNotConfigureAuthParam()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doNotConfigureAuthParam" duration-ms="51" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotConfigureAuthParam -->
        <test-method status="PASS" signature="doNotGenerateRequiredPropertiesInConstructor()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doNotGenerateRequiredPropertiesInConstructor" duration-ms="72" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateRequiredPropertiesInConstructor -->
        <test-method status="PASS" signature="doNotUseValidationParam()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doNotUseValidationParam" duration-ms="35" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotUseValidationParam -->
        <test-method status="PASS" signature="doUseValidationParam()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="doUseValidationParam" duration-ms="36" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doUseValidationParam -->
        <test-method status="PASS" signature="testAdditionalClientTypeAnnotations()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testAdditionalClientTypeAnnotations" duration-ms="59" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalClientTypeAnnotations -->
        <test-method status="PASS" signature="testApiAndModelFilesPresent()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testApiAndModelFilesPresent" duration-ms="81" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApiAndModelFilesPresent -->
        <test-method status="PASS" signature="testAuthorizationFilterPattern()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testAuthorizationFilterPattern" duration-ms="45" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAuthorizationFilterPattern -->
        <test-method status="PASS" signature="testConfigureClientId()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testConfigureClientId" duration-ms="35" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigureClientId -->
        <test-method status="PASS" signature="testConfigurePathSeparator()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testConfigurePathSeparator" duration-ms="34" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigurePathSeparator -->
        <test-method status="PASS" signature="testDefaultAuthorizationFilterPattern()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testDefaultAuthorizationFilterPattern" duration-ms="43" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultAuthorizationFilterPattern -->
        <test-method status="PASS" signature="testDefaultPathSeparator()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testDefaultPathSeparator" duration-ms="36" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultPathSeparator -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testNoConfigureClientId()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest@c27d163]" name="testNoConfigureClientId" duration-ms="35" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoConfigureClientId -->
      </class> <!-- org.openapitools.codegen.java.micronaut.MicronautClientCodegenTest -->
      <class name="org.openapitools.codegen.swift5.Swift5ClientCodegenTest">
        <test-method status="PASS" signature="binaryDataTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="binaryDataTest" duration-ms="4" started-at="2023-04-09T10:14:54 UTC" description="returns Data when response format is binary" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- binaryDataTest -->
        <test-method status="PASS" signature="crashSwift5ExampleCodeGenerationStackOverflowBug_2Test()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="crashSwift5ExampleCodeGenerationStackOverflowBug_2Test" duration-ms="130" started-at="2023-04-09T10:14:54 UTC" description="Bug example code generation 2" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- crashSwift5ExampleCodeGenerationStackOverflowBug_2Test -->
        <test-method status="PASS" signature="crashSwift5ExampleCodeGenerationStackOverflowTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="crashSwift5ExampleCodeGenerationStackOverflowTest" duration-ms="43" started-at="2023-04-09T10:14:54 UTC" description="Bug example code generation" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- crashSwift5ExampleCodeGenerationStackOverflowTest -->
        <test-method status="PASS" signature="dateDefaultTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="dateDefaultTest" duration-ms="3" started-at="2023-04-09T10:14:54 UTC" description="returns Date when response format is date per default" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateDefaultTest -->
        <test-method status="PASS" signature="dateDisabledCLITest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="dateDisabledCLITest" duration-ms="2" started-at="2023-04-09T10:14:54 UTC" description="returns Date when response format is date and cli option is disabled" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateDisabledCLITest -->
        <test-method status="PASS" signature="dateWithoutTimeTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="dateWithoutTimeTest" duration-ms="3" started-at="2023-04-09T10:14:54 UTC" description="returns OpenAPIDateWithoutTime when response format is date and cli option is enabled" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateWithoutTimeTest -->
        <test-method status="PASS" signature="prefixExceptionTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="prefixExceptionTest" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" description="type from languageSpecificPrimitives should not be prefixed" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prefixExceptionTest -->
        <test-method status="PASS" signature="prefixTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="prefixTest" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" description="Other types should be prefixed" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prefixTest -->
        <test-method status="PASS" signature="suffixExceptionTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="suffixExceptionTest" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" description="type from languageSpecificPrimitives should not be suffixed" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suffixExceptionTest -->
        <test-method status="PASS" signature="shouldNotBreakCorrectName()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="shouldNotBreakCorrectName" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotBreakCorrectName -->
        <test-method status="PASS" signature="shouldNotBreakNonReservedWord()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="shouldNotBreakNonReservedWord" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotBreakNonReservedWord -->
        <test-method status="PASS" signature="suffixTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="suffixTest" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" description="Other types should be suffixed" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suffixTest -->
        <test-method status="PASS" signature="testCapitalizedReservedWord()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testCapitalizedReservedWord" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCapitalizedReservedWord -->
        <test-method status="PASS" signature="testCapitalsWithDash()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testCapitalsWithDash" duration-ms="1" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCapitalsWithDash -->
        <test-method status="PASS" signature="testCapitalsWithSpace()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testCapitalsWithSpace" duration-ms="1" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCapitalsWithSpace -->
        <test-method status="PASS" signature="testPodAuthors()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testPodAuthors" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPodAuthors -->
        <test-method status="PASS" signature="testCapitalsWithUnderscore()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testCapitalsWithUnderscore" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCapitalsWithUnderscore -->
        <test-method status="PASS" signature="testLowercaseWithUnderscore()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testLowercaseWithUnderscore" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLowercaseWithUnderscore -->
        <test-method status="PASS" signature="testDefaultPodAuthors()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testDefaultPodAuthors" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultPodAuthors -->
        <test-method status="PASS" signature="testSpecialCharacters()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testSpecialCharacters" duration-ms="1" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSpecialCharacters -->
        <test-method status="PASS" signature="testReservedWord()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testReservedWord" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWord -->
        <test-method status="PASS" signature="testSingleWordAllCaps()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testSingleWordAllCaps" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleWordAllCaps -->
        <test-method status="PASS" signature="testSingleWordLowercase()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testSingleWordLowercase" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleWordLowercase -->
        <test-method status="PASS" signature="testStartingWithNumber()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ClientCodegenTest@229365f4]" name="testStartingWithNumber" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStartingWithNumber -->
      </class> <!-- org.openapitools.codegen.swift5.Swift5ClientCodegenTest -->
      <class name="org.openapitools.codegen.java.JavaCXFClientCodegenTest">
        <test-method status="PASS" signature="responseWithoutContent()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="responseWithoutContent" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- responseWithoutContent -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testOpenApiNullableAdditionalProperty()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testOpenApiNullableAdditionalProperty" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenApiNullableAdditionalProperty -->
        <test-method status="PASS" signature="testPostProcessNullableModelPropertyWithOpenApiNullableEnabled()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testPostProcessNullableModelPropertyWithOpenApiNullableEnabled" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostProcessNullableModelPropertyWithOpenApiNullableEnabled -->
        <test-method status="PASS" signature="testPostProcessNotNullableModelPropertyWithOpenApiNullableEnabled()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testPostProcessNotNullableModelPropertyWithOpenApiNullableEnabled" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostProcessNotNullableModelPropertyWithOpenApiNullableEnabled -->
        <test-method status="PASS" signature="testPostProcessNullableModelPropertyWithOpenApiNullableDisabled()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testPostProcessNullableModelPropertyWithOpenApiNullableDisabled" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostProcessNullableModelPropertyWithOpenApiNullableDisabled -->
        <test-method status="PASS" signature="testPostProcessNullableModelPropertyWithOpenApiNullableEnabledForRequiredProperties()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testPostProcessNullableModelPropertyWithOpenApiNullableEnabledForRequiredProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostProcessNullableModelPropertyWithOpenApiNullableEnabledForRequiredProperties -->
        <test-method status="PASS" signature="testUseAbstractionForFiles()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testUseAbstractionForFiles" duration-ms="21" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseAbstractionForFiles -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testPostProcessNullableModelPropertyWithOpenApiNullableEnabledButJacksonDisabled()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testPostProcessNullableModelPropertyWithOpenApiNullableEnabledButJacksonDisabled" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostProcessNullableModelPropertyWithOpenApiNullableEnabledButJacksonDisabled -->
        <test-method status="PASS" signature="testUseBeanValidationAdditionalProperty()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testUseBeanValidationAdditionalProperty" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseBeanValidationAdditionalProperty -->
        <test-method status="PASS" signature="testUseGenericResponseAdditionalProperty()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testUseGenericResponseAdditionalProperty" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseGenericResponseAdditionalProperty -->
        <test-method status="PASS" signature="testUseGzipFeatureForTestsAdditionalProperty()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testUseGzipFeatureForTestsAdditionalProperty" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseGzipFeatureForTestsAdditionalProperty -->
        <test-method status="PASS" signature="testUseLoggingFeatureForTestsAdditionalProperty()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testUseLoggingFeatureForTestsAdditionalProperty" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseLoggingFeatureForTestsAdditionalProperty -->
        <test-method status="PASS" signature="testUseJackson()[pri:0, instance:org.openapitools.codegen.java.JavaCXFClientCodegenTest@55b8dbda]" name="testUseJackson" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseJackson -->
      </class> <!-- org.openapitools.codegen.java.JavaCXFClientCodegenTest -->
      <class name="org.openapitools.codegen.templating.HandlebarsEngineAdapterTest">
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.hbs]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support hbs extension]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[model.hbs]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support hbs extension]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.handlebars]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support handlebars extension]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[model.handlebars]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support handlebars extension]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[model.mustache]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support inferring handlebars extension from a mustache input]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[libraries/some/model.mustache]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support inferring handlebars extension from a mustache input for libraries]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[.handlebars]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Should not consider .handlebars a valid file to process]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[.hbs]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Should not consider .hbs a valid file to process]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="1" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[.gitignore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Should not attempt to handle .gitignore]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.mustache]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support inferring handlebars extension from a mustache input]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[libraries/some/api.mustache]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support inferring handlebars extension from a mustache input for libraries]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[libraries/some/api.handlebars]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support handlebars extension for libraries]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[libraries/some/api.hbs]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Expected to support hbs extension for libraries]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
        <test-method status="PASS" signature="checkHandleFiles(java.lang.String,boolean,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.HandlebarsEngineAdapterTest@248deced]" name="checkHandleFiles" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" data-provider="handlesFileExpectations" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[README.md]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Should not attempt to handle non-handlebars extensions (other than mustache)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHandleFiles -->
      </class> <!-- org.openapitools.codegen.templating.HandlebarsEngineAdapterTest -->
      <class name="org.openapitools.codegen.mysql.MysqlSchemaCodegenTest">
        <test-method status="PASS" signature="testEscapeMysqlUnquotedIdentifier()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testEscapeMysqlUnquotedIdentifier" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeMysqlUnquotedIdentifier -->
        <test-method status="PASS" signature="testEscapeMysqlQuotedIdentifier()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testEscapeMysqlQuotedIdentifier" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeMysqlQuotedIdentifier -->
        <test-method status="PASS" signature="testGetJsonDataTypeEnabled()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testGetJsonDataTypeEnabled" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJsonDataTypeEnabled -->
        <test-method status="PASS" signature="testGetIdentifierNamingConvention()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testGetIdentifierNamingConvention" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIdentifierNamingConvention -->
        <test-method status="PASS" signature="testGetMysqlMatchedStringDataType()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testGetMysqlMatchedStringDataType" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMysqlMatchedStringDataType -->
        <test-method status="PASS" signature="testGetMysqlMatchedIntegerDataType()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testGetMysqlMatchedIntegerDataType" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMysqlMatchedIntegerDataType -->
        <test-method status="PASS" signature="testGetDefaultDatabaseName()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testGetDefaultDatabaseName" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDefaultDatabaseName -->
        <test-method status="PASS" signature="testGetNamedParametersEnabled()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testGetNamedParametersEnabled" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNamedParametersEnabled -->
        <test-method status="PASS" signature="testIsMysqlDataType()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testIsMysqlDataType" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsMysqlDataType -->
        <test-method status="PASS" signature="testIsReservedWord()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testIsReservedWord" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsReservedWord -->
        <test-method status="PASS" signature="testSetNamedParametersEnabled()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testSetNamedParametersEnabled" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetNamedParametersEnabled -->
        <test-method status="PASS" signature="testSetDefaultDatabaseName()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testSetDefaultDatabaseName" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDefaultDatabaseName -->
        <test-method status="PASS" signature="testSetIdentifierNamingConvention()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testSetIdentifierNamingConvention" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetIdentifierNamingConvention -->
        <test-method status="PASS" signature="testSetJsonDataTypeEnabled()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testSetJsonDataTypeEnabled" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetJsonDataTypeEnabled -->
        <test-method status="PASS" signature="testToCodegenMysqlDataTypeDefaultWithExceptionalColumnType()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testToCodegenMysqlDataTypeDefaultWithExceptionalColumnType" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[The BLOB, TEXT, GEOMETRY, and JSON data types cannot be assigned a default value]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: The BLOB, TEXT, GEOMETRY, and JSON data types cannot be assigned a default value
at org.openapitools.codegen.languages.MysqlSchemaCodegen.toCodegenMysqlDataTypeDefault(MysqlSchemaCodegen.java:895)
at org.openapitools.codegen.mysql.MysqlSchemaCodegenTest.testToCodegenMysqlDataTypeDefaultWithExceptionalColumnType(MysqlSchemaCodegenTest.java:168)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCodegenMysqlDataTypeDefaultWithExceptionalColumnType -->
        <test-method status="PASS" signature="testToCodegenMysqlDataTypeDefault()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testToCodegenMysqlDataTypeDefault" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCodegenMysqlDataTypeDefault -->
        <test-method status="PASS" signature="testToCodegenMysqlDataTypeArgument()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testToCodegenMysqlDataTypeArgument" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCodegenMysqlDataTypeArgument -->
        <test-method status="PASS" signature="testToMysqlIdentifierWithEmptyString()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testToMysqlIdentifierWithEmptyString" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Empty database/table/column name for property '   ' not allowed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Empty database/table/column name for property '   ' not allowed
at org.openapitools.codegen.languages.MysqlSchemaCodegen.toMysqlIdentifier(MysqlSchemaCodegen.java:1079)
at org.openapitools.codegen.mysql.MysqlSchemaCodegenTest.testToMysqlIdentifierWithEmptyString(MysqlSchemaCodegenTest.java:201)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToMysqlIdentifierWithEmptyString -->
        <test-method status="PASS" signature="testToMysqlIdentifier()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaCodegenTest@78b3f926]" name="testToMysqlIdentifier" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToMysqlIdentifier -->
      </class> <!-- org.openapitools.codegen.mysql.MysqlSchemaCodegenTest -->
      <class name="org.openapitools.codegen.java.JavaInheritanceTest">
        <test-method status="PASS" signature="javaInheritanceTest()[pri:0, instance:org.openapitools.codegen.java.JavaInheritanceTest@3b569985]" name="javaInheritanceTest" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" description="convert a composed model with parent" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javaInheritanceTest -->
        <test-method status="PASS" signature="javaInheritanceWithDiscriminatorTest()[pri:0, instance:org.openapitools.codegen.java.JavaInheritanceTest@3b569985]" name="javaInheritanceWithDiscriminatorTest" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" description="convert a composed model with discriminator" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javaInheritanceWithDiscriminatorTest -->
        <test-method status="PASS" signature="javaInheritanceWithRequiredAttributesOnAllOfObject()[pri:0, instance:org.openapitools.codegen.java.JavaInheritanceTest@3b569985]" name="javaInheritanceWithRequiredAttributesOnAllOfObject" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" description="composed model has the required attributes on the child" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javaInheritanceWithRequiredAttributesOnAllOfObject -->
        <test-method status="PASS" signature="javaInheritanceWithRequiredAttributesOnComposedObject()[pri:0, instance:org.openapitools.codegen.java.JavaInheritanceTest@3b569985]" name="javaInheritanceWithRequiredAttributesOnComposedObject" duration-ms="0" started-at="2023-04-09T10:15:08 UTC" description="composed model has the required attributes for both parent &amp; child" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javaInheritanceWithRequiredAttributesOnComposedObject -->
      </class> <!-- org.openapitools.codegen.java.JavaInheritanceTest -->
      <class name="org.openapitools.codegen.templating.mustache.IndentedLambdaTest">
        <test-method status="PASS" signature="defaultIndentTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.IndentedLambdaTest@2227a6c1]" name="defaultIndentTest" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultIndentTest -->
        <test-method status="PASS" signature="indentedCountTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.IndentedLambdaTest@2227a6c1]" name="indentedCountTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- indentedCountTest -->
      </class> <!-- org.openapitools.codegen.templating.mustache.IndentedLambdaTest -->
      <class name="org.openapitools.codegen.templating.mustache.UppercaseLambdaTest">
        <test-method status="PASS" signature="uppercaseTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.UppercaseLambdaTest@4d74c3ba]" name="uppercaseTest" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uppercaseTest -->
      </class> <!-- org.openapitools.codegen.templating.mustache.UppercaseLambdaTest -->
      <class name="org.openapitools.codegen.java.JavaModelEnumTest">
        <test-method status="PASS" signature="converterInArrayInArrayTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelEnumTest@3a022576]" name="converterInArrayInArrayTest" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" description="convert a java model with an enum inside a list" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- converterInArrayInArrayTest -->
        <test-method status="PASS" signature="converterInArrayTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelEnumTest@3a022576]" name="converterInArrayTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="convert a java model with an enum inside a list" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- converterInArrayTest -->
        <test-method status="PASS" signature="overrideEnumTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelEnumTest@3a022576]" name="overrideEnumTest" duration-ms="2" started-at="2023-04-09T10:15:00 UTC" description="not override identical parent enums" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overrideEnumTest -->
        <test-method status="PASS" signature="converterTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelEnumTest@3a022576]" name="converterTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="convert a java model with an enum" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- converterTest -->
        <test-method status="PASS" signature="testEnumTestSchema()[pri:0, instance:org.openapitools.codegen.java.JavaModelEnumTest@3a022576]" name="testEnumTestSchema" duration-ms="73" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumTestSchema -->
      </class> <!-- org.openapitools.codegen.java.JavaModelEnumTest -->
      <class name="org.openapitools.codegen.python.PythonLegacyClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientOptionsTest@4c601c3f]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientOptionsTest@4c601c3f]" name="checkOptionsProcessing" duration-ms="3" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.python.PythonLegacyClientOptionsTest -->
      <class name="org.openapitools.codegen.swift5.Swift5OptionsTest">
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.swift5.Swift5OptionsTest@71671559]" name="checkOptionsProcessing" duration-ms="10" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.swift5.Swift5OptionsTest@71671559]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
      </class> <!-- org.openapitools.codegen.swift5.Swift5OptionsTest -->
      <class name="org.openapitools.codegen.csharp.CSharpOperationTest">
        <test-method status="PASS" signature="assertMethodOptionalParameterDataType()[pri:0, instance:org.openapitools.codegen.csharp.CSharpOperationTest@a8177f6]" name="assertMethodOptionalParameterDataType" duration-ms="382" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertMethodOptionalParameterDataType -->
      </class> <!-- org.openapitools.codegen.csharp.CSharpOperationTest -->
      <class name="org.openapitools.codegen.r.RClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.r.RClientCodegenTest@1653ae9d]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.r.RClientCodegenTest@1653ae9d]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.r.RClientCodegenTest@1653ae9d]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.r.RClientCodegenTest -->
      <class name="org.openapitools.codegen.utils.StringUtilsTest">
        <test-method status="PASS" signature="testDashize()[pri:0, instance:org.openapitools.codegen.utils.StringUtilsTest@7034355c]" name="testDashize" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDashize -->
        <test-method status="PASS" signature="testUnderscore()[pri:0, instance:org.openapitools.codegen.utils.StringUtilsTest@7034355c]" name="testUnderscore" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnderscore -->
        <test-method status="PASS" signature="testCamelize()[pri:0, instance:org.openapitools.codegen.utils.StringUtilsTest@7034355c]" name="testCamelize" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCamelize -->
      </class> <!-- org.openapitools.codegen.utils.StringUtilsTest -->
      <class name="org.openapitools.codegen.SpecValidationExceptionTest">
        <test-method status="PASS" signature="shouldGetDefaultMessage()[pri:0, instance:org.openapitools.codegen.SpecValidationExceptionTest@7cad6289]" name="shouldGetDefaultMessage" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetDefaultMessage -->
      </class> <!-- org.openapitools.codegen.SpecValidationExceptionTest -->
      <class name="org.openapitools.codegen.csharpnetcore.CSharpNetCoreClientDeepObjectTest">
        <test-method status="PASS" signature="deepObject()[pri:0, instance:org.openapitools.codegen.csharpnetcore.CSharpNetCoreClientDeepObjectTest@79bec433]" name="deepObject" duration-ms="118" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deepObject -->
      </class> <!-- org.openapitools.codegen.csharpnetcore.CSharpNetCoreClientDeepObjectTest -->
      <class name="org.openapitools.codegen.dart.DartClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.dart.DartClientOptionsTest@3bdb3f28]" name="checkOptionsProcessing" duration-ms="4" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.dart.DartClientOptionsTest@3bdb3f28]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
      </class> <!-- org.openapitools.codegen.dart.DartClientOptionsTest -->
      <class name="org.openapitools.codegen.plantuml.PlantumlDocumentationCodegenTest">
        <test-method status="PASS" signature="aggregatedEntitiesTest()[pri:0, instance:org.openapitools.codegen.plantuml.PlantumlDocumentationCodegenTest@bc6655d]" name="aggregatedEntitiesTest" duration-ms="7" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aggregatedEntitiesTest -->
        <test-method status="PASS" signature="inheritedEntitiesTest()[pri:0, instance:org.openapitools.codegen.plantuml.PlantumlDocumentationCodegenTest@bc6655d]" name="inheritedEntitiesTest" duration-ms="9" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inheritedEntitiesTest -->
        <test-method status="PASS" signature="listFieldTest()[pri:0, instance:org.openapitools.codegen.plantuml.PlantumlDocumentationCodegenTest@bc6655d]" name="listFieldTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listFieldTest -->
        <test-method status="PASS" signature="sharedIdenticalInlineAllOfTest()[pri:0, instance:org.openapitools.codegen.plantuml.PlantumlDocumentationCodegenTest@bc6655d]" name="sharedIdenticalInlineAllOfTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sharedIdenticalInlineAllOfTest -->
        <test-method status="PASS" signature="simpleEntityTest()[pri:0, instance:org.openapitools.codegen.plantuml.PlantumlDocumentationCodegenTest@bc6655d]" name="simpleEntityTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleEntityTest -->
      </class> <!-- org.openapitools.codegen.plantuml.PlantumlDocumentationCodegenTest -->
      <class name="org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest">
        <test-method status="PASS" signature="beanQualifiers()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="beanQualifiers" duration-ms="14" started-at="2023-04-09T10:14:49 UTC" description="test bean qualifiers" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beanQualifiers -->
        <test-method status="PASS" signature="delegateReactiveWithTags()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="delegateReactiveWithTags" duration-ms="35" started-at="2023-04-09T10:14:49 UTC" description="test delegate reactive with tags" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delegateReactiveWithTags -->
        <test-method status="PASS" signature="delegateWithTags()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="delegateWithTags" duration-ms="23" started-at="2023-04-09T10:14:49 UTC" description="test delegate with tags" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delegateWithTags -->
        <test-method status="PASS" signature="doGenerateRequestParamForSimpleParam()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="doGenerateRequestParamForSimpleParam" duration-ms="62" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateRequestParamForSimpleParam -->
        <test-method status="PASS" signature="doNotGenerateRequestParamForObjectQueryParam()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="doNotGenerateRequestParamForObjectQueryParam" duration-ms="16" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateRequestParamForObjectQueryParam -->
        <test-method status="PASS" signature="embeddedEnumArrayTest()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="embeddedEnumArrayTest" duration-ms="4225" started-at="2023-04-09T10:14:49 UTC" description="test embedded enum array" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- embeddedEnumArrayTest -->
        <test-method status="PASS" signature="generateFormatForDateAndDateTimeQueryParam()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="generateFormatForDateAndDateTimeQueryParam" duration-ms="25" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateFormatForDateAndDateTimeQueryParam -->
        <test-method status="PASS" signature="multiLineOperationDescription()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="multiLineOperationDescription" duration-ms="16" started-at="2023-04-09T10:14:54 UTC" description="multi-line descriptions should be supported for operations" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiLineOperationDescription -->
        <test-method status="PASS" signature="multiLineOperationDescriptionInterfaceOnly()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="multiLineOperationDescriptionInterfaceOnly" duration-ms="11" started-at="2023-04-09T10:14:54 UTC" description="multi-line descriptions should be supported for operations (interface-only)" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiLineOperationDescriptionInterfaceOnly -->
        <test-method status="PASS" signature="skipDefaultInterface()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="skipDefaultInterface" duration-ms="12" started-at="2023-04-09T10:14:54 UTC" description="test skip default interface" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipDefaultInterface -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testDelegatePattern()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="testDelegatePattern" duration-ms="1" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelegatePattern -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="useSpringBoot3()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="useSpringBoot3" duration-ms="17" started-at="2023-04-09T10:14:54 UTC" description="use Spring boot 3 &amp; jakarta extension" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useSpringBoot3 -->
        <test-method status="PASS" signature="testSettingInvokerPackageToBasePackage()[pri:0, instance:org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest@397411e1]" name="testSettingInvokerPackageToBasePackage" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettingInvokerPackageToBasePackage -->
      </class> <!-- org.openapitools.codegen.kotlin.spring.KotlinSpringServerCodegenTest -->
      <class name="org.openapitools.codegen.java.play.JavaPlayFrameworkCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.play.JavaPlayFrameworkCodegenTest@31ddd4a4]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.play.JavaPlayFrameworkCodegenTest@31ddd4a4]" name="testExtraAnnotations" duration-ms="72" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.play.JavaPlayFrameworkCodegenTest@31ddd4a4]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.play.JavaPlayFrameworkCodegenTest@31ddd4a4]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.java.play.JavaPlayFrameworkCodegenTest -->
      <class name="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="convertVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="defaultApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultApiImportTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="appends api suffix to api import" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultApiImportTest -->
        <test-method status="PASS" signature="defaultModelFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultModelFilenameTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="prepend model filename with ./ by default" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultModelFilenameTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="defaultApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultApiFilenameTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="appends api suffix to api filename" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultApiFilenameTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="emptyApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="emptyApiFilenameTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="append api suffix to default api filename" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyApiFilenameTest -->
        <test-method status="PASS" signature="mappedApiFilenameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="mappedApiFilenameTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="appends api suffix to mapped api filename" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mappedApiFilenameTest -->
        <test-method status="PASS" signature="emptyApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="emptyApiImportTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="append api suffix to default api import" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyApiImportTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="defaultModelImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="defaultModelImportTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="prepend model import with ../model by default" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultModelImportTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="modelImportWithMappingTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="modelImportWithMappingTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="use mapped name for model import when provided" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelImportWithMappingTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="modelFilenameWithMappingTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="modelFilenameWithMappingTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="use mapped name for model filename when provided" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFilenameWithMappingTest -->
        <test-method status="PASS" signature="mappedApiImportTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="mappedApiImportTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="appends api suffix to mapped api filename" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mappedApiImportTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postProcessOperationsWithModelsTestWithImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithImportMapping" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" description="correctly produces imports with import mapping" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProcessOperationsWithModelsTestWithImportMapping -->
        <test-method status="PASS" signature="postProcessOperationsWithModelsTestWithModelNamePrefix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithModelNamePrefix" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" description="correctly produces imports with model name prefix" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProcessOperationsWithModelsTestWithModelNamePrefix -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postProcessOperationsWithModelsTestWithModelNameSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithModelNameSuffix" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="correctly produces imports with model name suffix" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProcessOperationsWithModelsTestWithModelNameSuffix -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="testSnapshotVersion" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSnapshotVersion -->
        <test-method status="PASS" signature="postProcessOperationsWithModelsTestWithoutImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="postProcessOperationsWithModelsTestWithoutImportMapping" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="correctly produces imports without import mapping" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProcessOperationsWithModelsTestWithoutImportMapping -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="testWithoutSnapshotVersion" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutSnapshotVersion -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest@78e88bd7]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientCodegenTest -->
      <class name="org.openapitools.codegen.cpprestbed.CppRestbedServerTest">
        <test-method status="PASS" signature="testPathProcessing(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.cpprestbed.CppRestbedServerTest@72b6fa98]" name="testPathProcessing" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" data-provider="providedPaths" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[/abc/{id}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/abc/{id: .*}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPathProcessing -->
        <test-method status="PASS" signature="testPathProcessing(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.cpprestbed.CppRestbedServerTest@72b6fa98]" name="testPathProcessing" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" data-provider="providedPaths" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[xyz/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xyz/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPathProcessing -->
        <test-method status="PASS" signature="testPathProcessing(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.cpprestbed.CppRestbedServerTest@72b6fa98]" name="testPathProcessing" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="providedPaths" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[/{Foo}/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/{Foo: .*}/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPathProcessing -->
      </class> <!-- org.openapitools.codegen.cpprestbed.CppRestbedServerTest -->
      <class name="org.openapitools.codegen.scala.ScalaGatlingCodegenTest">
        <test-method status="PASS" signature="happyPath()[pri:0, instance:org.openapitools.codegen.scala.ScalaGatlingCodegenTest@aa794a3]" name="happyPath" duration-ms="27" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- happyPath -->
      </class> <!-- org.openapitools.codegen.scala.ScalaGatlingCodegenTest -->
      <class name="org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest">
        <test-method status="PASS" signature="beforeClassGenerateTestMarkup()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="beforeClassGenerateTestMarkup" is-config="true" duration-ms="64" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassGenerateTestMarkup -->
        <test-method status="PASS" signature="testMarkupExistence()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="testMarkupExistence" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkupExistence -->
        <test-method status="PASS" signature="testSampleAsciidocMarkupGenerationParameterNameUnchanged()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="testSampleAsciidocMarkupGenerationParameterNameUnchanged" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSampleAsciidocMarkupGenerationParameterNameUnchanged -->
        <test-method status="PASS" signature="testSampleAsciidocMarkupGenerationFromJsonWithIncludes()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="testSampleAsciidocMarkupGenerationFromJsonWithIncludes" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSampleAsciidocMarkupGenerationFromJsonWithIncludes -->
        <test-method status="PASS" signature="testSampleAsciidocMarkupGenerationFromJsonWithAttributes()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="testSampleAsciidocMarkupGenerationFromJsonWithAttributes" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSampleAsciidocMarkupGenerationFromJsonWithAttributes -->
        <test-method status="PASS" signature="testSampleAsciidocMarkupGenerationAccessApiKey()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="testSampleAsciidocMarkupGenerationAccessApiKey" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSampleAsciidocMarkupGenerationAccessApiKey -->
        <test-method status="PASS" signature="testSampleAsciidocMarkupGenerationFromJsonWithContent()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="testSampleAsciidocMarkupGenerationFromJsonWithContent" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSampleAsciidocMarkupGenerationFromJsonWithContent -->
        <test-method status="PASS" signature="testSampleAsciidocMarkupGenerationWithoutFormParameter()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="testSampleAsciidocMarkupGenerationWithoutFormParameter" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSampleAsciidocMarkupGenerationWithoutFormParameter -->
        <test-method status="PASS" signature="afterClassCleanUpTestMarkup()[pri:0, instance:org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest@1af3fb00]" name="afterClassCleanUpTestMarkup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassCleanUpTestMarkup -->
      </class> <!-- org.openapitools.codegen.asciidoc.AsciidocSampleGeneratorTest -->
      <class name="org.openapitools.codegen.utils.OneOfImplementorAdditionalDataTest">
        <test-method status="PASS" signature="testGeneralUsage()[pri:0, instance:org.openapitools.codegen.utils.OneOfImplementorAdditionalDataTest@5ee19733]" name="testGeneralUsage" duration-ms="4" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneralUsage -->
      </class> <!-- org.openapitools.codegen.utils.OneOfImplementorAdditionalDataTest -->
      <class name="org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest">
        <test-method status="PASS" signature="bothEqualsVersionTest()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="bothEqualsVersionTest" duration-ms="128" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bothEqualsVersionTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="bothNotEqualsVersionTest()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="bothNotEqualsVersionTest" duration-ms="34" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bothNotEqualsVersionTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="customHelidonVersionOnlyTest()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="customHelidonVersionOnlyTest" duration-ms="128" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customHelidonVersionOnlyTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="customParentVersionOnlyTest()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="customParentVersionOnlyTest" duration-ms="123" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customParentVersionOnlyTest -->
        <test-method status="PASS" signature="defaultVersionTest()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="defaultVersionTest" duration-ms="96" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultVersionTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest@61799544]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenTest -->
      <class name="org.openapitools.codegen.ExampleGeneratorTest">
        <test-method status="PASS" signature="generateFromResponseSchemaWithArrayOfModel()[pri:0, instance:org.openapitools.codegen.ExampleGeneratorTest@72ce812e]" name="generateFromResponseSchemaWithArrayOfModel" duration-ms="5" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateFromResponseSchemaWithArrayOfModel -->
        <test-method status="PASS" signature="generateFromResponseSchemaWithArrayOfPrimitiveTypes()[pri:0, instance:org.openapitools.codegen.ExampleGeneratorTest@72ce812e]" name="generateFromResponseSchemaWithArrayOfPrimitiveTypes" duration-ms="3" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateFromResponseSchemaWithArrayOfPrimitiveTypes -->
        <test-method status="PASS" signature="generateFromResponseSchemaWithModel()[pri:0, instance:org.openapitools.codegen.ExampleGeneratorTest@72ce812e]" name="generateFromResponseSchemaWithModel" duration-ms="3" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateFromResponseSchemaWithModel -->
        <test-method status="PASS" signature="generateFromResponseSchemaWithNoExample()[pri:0, instance:org.openapitools.codegen.ExampleGeneratorTest@72ce812e]" name="generateFromResponseSchemaWithNoExample" duration-ms="3" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateFromResponseSchemaWithNoExample -->
        <test-method status="PASS" signature="generateFromResponseSchemaWithPrimitiveType()[pri:0, instance:org.openapitools.codegen.ExampleGeneratorTest@72ce812e]" name="generateFromResponseSchemaWithPrimitiveType" duration-ms="3" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateFromResponseSchemaWithPrimitiveType -->
      </class> <!-- org.openapitools.codegen.ExampleGeneratorTest -->
      <class name="org.openapitools.codegen.go.AbstractGoCodegenTest">
        <test-method status="PASS" signature="getTypeDeclarationTest()[pri:0, instance:org.openapitools.codegen.go.AbstractGoCodegenTest@6eae3730]" name="getTypeDeclarationTest" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTypeDeclarationTest -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.go.AbstractGoCodegenTest@6eae3730]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.go.AbstractGoCodegenTest@6eae3730]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.go.AbstractGoCodegenTest@6eae3730]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.go.AbstractGoCodegenTest -->
      <class name="org.openapitools.codegen.python.PythonClientTest">
        <test-method status="PASS" signature="testApiTestsNotGenerated()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testApiTestsNotGenerated" duration-ms="6038" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:17 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApiTestsNotGenerated -->
        <test-method status="PASS" signature="testApisNotGenerated()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testApisNotGenerated" duration-ms="690" started-at="2023-04-09T10:15:17 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApisNotGenerated -->
        <test-method status="PASS" signature="testEnumNames()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testEnumNames" duration-ms="7" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumNames -->
        <test-method status="PASS" signature="testImportWithQualifiedPackageName()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testImportWithQualifiedPackageName" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="format imports of models using a package containing dots" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportWithQualifiedPackageName -->
        <test-method status="PASS" signature="testIdenticalSchemasHaveDifferentBasenames()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testIdenticalSchemasHaveDifferentBasenames" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdenticalSchemasHaveDifferentBasenames -->
        <test-method status="PASS" signature="testRecursiveExampleValueWithCycle()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testRecursiveExampleValueWithCycle" duration-ms="3" started-at="2023-04-09T10:15:18 UTC" description="tests RecursiveExampleValueWithCycle" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecursiveExampleValueWithCycle -->
        <test-method status="PASS" signature="testRecursiveGeoJsonExampleWhenTypeIsGeoJsonGeometry()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testRecursiveGeoJsonExampleWhenTypeIsGeoJsonGeometry" duration-ms="4" started-at="2023-04-09T10:15:18 UTC" description="tests GeoJson Example for GeoJsonGeometry" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecursiveGeoJsonExampleWhenTypeIsGeoJsonGeometry -->
        <test-method status="PASS" signature="testRecursiveGeoJsonExampleWhenTypeIsGeometryCollection()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testRecursiveGeoJsonExampleWhenTypeIsGeometryCollection" duration-ms="2" started-at="2023-04-09T10:15:18 UTC" description="tests GeoJson Example for GeometryCollection" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecursiveGeoJsonExampleWhenTypeIsGeometryCollection -->
        <test-method status="PASS" signature="testRegexWithMultipleFlagsWorks()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testRegexWithMultipleFlagsWorks" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegexWithMultipleFlagsWorks -->
        <test-method status="PASS" signature="testRegexWithoutTrailingSlashWorks()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testRegexWithoutTrailingSlashWorks" duration-ms="2" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegexWithoutTrailingSlashWorks -->
        <test-method status="PASS" signature="testSpecWithAcceptableVersion()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testSpecWithAcceptableVersion" duration-ms="11" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSpecWithAcceptableVersion -->
        <test-method status="PASS" signature="testSpecWithAcceptableVersionAndExtension()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testSpecWithAcceptableVersionAndExtension" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSpecWithAcceptableVersionAndExtension -->
        <test-method status="PASS" signature="testSpecWithTooLowVersionThrowsException()[pri:0, instance:org.openapitools.codegen.python.PythonClientTest@3d8e1a73]" name="testSpecWithTooLowVersionThrowsException" duration-ms="8" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Your spec version of 2.0 is too low. python only works with specs with version >= 3.X.X. Please use a tool like Swagger Editor or Swagger Converter to convert your spec to v3]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Your spec version of 2.0 is too low. python only works with specs with version >= 3.X.X. Please use a tool like Swagger Editor or Swagger Converter to convert your spec to v3
at org.openapitools.codegen.languages.PythonClientCodegen.preprocessOpenAPI(PythonClientCodegen.java:2773)
at org.openapitools.codegen.python.PythonClientTest.testSpecWithTooLowVersionThrowsException(PythonClientTest.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSpecWithTooLowVersionThrowsException -->
      </class> <!-- org.openapitools.codegen.python.PythonClientTest -->
      <class name="org.openapitools.codegen.rubysinatra.RubySinatraServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.rubysinatra.RubySinatraServerOptionsTest@3dde5f38]" name="checkOptionsProcessing" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.rubysinatra.RubySinatraServerOptionsTest@3dde5f38]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
      </class> <!-- org.openapitools.codegen.rubysinatra.RubySinatraServerOptionsTest -->
      <class name="org.openapitools.codegen.ruby.RubyClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientOptionsTest@413eaf5d]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientOptionsTest@413eaf5d]" name="checkOptionsProcessing" duration-ms="5" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.ruby.RubyClientOptionsTest -->
      <class name="org.openapitools.codegen.utils.ModelUtilsTest">
        <test-method status="PASS" signature="testComposedSchemasAreNotUnaliased()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testComposedSchemasAreNotUnaliased" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemasAreNotUnaliased -->
        <test-method status="PASS" signature="testAliasedTypeIsNotUnaliasedIfUsedForImportMapping()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testAliasedTypeIsNotUnaliasedIfUsedForImportMapping" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAliasedTypeIsNotUnaliasedIfUsedForImportMapping -->
        <test-method status="PASS" signature="testGetAllUsedSchemas()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testGetAllUsedSchemas" duration-ms="31" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllUsedSchemas -->
        <test-method status="PASS" signature="testGetUnusedSchemas()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testGetUnusedSchemas" duration-ms="28" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUnusedSchemas -->
        <test-method status="PASS" signature="testGlobalProducesConsumes()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testGlobalProducesConsumes" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGlobalProducesConsumes -->
        <test-method status="PASS" signature="testIsFreeFormObject()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testIsFreeFormObject" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsFreeFormObject -->
        <test-method status="PASS" signature="testIsModelAllowsEmptyBaseModel()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testIsModelAllowsEmptyBaseModel" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsModelAllowsEmptyBaseModel -->
        <test-method status="PASS" signature="testNoComponentsSection()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testNoComponentsSection" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoComponentsSection -->
        <test-method status="PASS" signature="testIsSetFailsForNullSchema()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testIsSetFailsForNullSchema" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsSetFailsForNullSchema -->
        <test-method status="PASS" signature="testIsSetForValidSet()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testIsSetForValidSet" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsSetForValidSet -->
        <test-method status="PASS" signature="testIsSetFalseForInvalidSet()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testIsSetFalseForInvalidSet" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsSetFalseForInvalidSet -->
        <test-method status="PASS" signature="testReferencedRequestBody()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testReferencedRequestBody" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferencedRequestBody -->
        <test-method status="PASS" signature="testReferencedApiResponse()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testReferencedApiResponse" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferencedApiResponse -->
        <test-method status="PASS" signature="testReferencedParameter()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testReferencedParameter" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferencedParameter -->
        <test-method status="PASS" signature="testSchemasUsedOnlyInFormParam()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testSchemasUsedOnlyInFormParam" duration-ms="24" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSchemasUsedOnlyInFormParam -->
        <test-method status="PASS" signature="testReferencedSchema()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testReferencedSchema" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferencedSchema -->
        <test-method status="PASS" signature="testSimpleRefDecoding()[pri:0, instance:org.openapitools.codegen.utils.ModelUtilsTest@74330758]" name="testSimpleRefDecoding" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleRefDecoding -->
      </class> <!-- org.openapitools.codegen.utils.ModelUtilsTest -->
      <class name="org.openapitools.codegen.typescript.SharedTypeScriptTest">
        <test-method status="PASS" signature="oldImportsStillPresentTest()[pri:0, instance:org.openapitools.codegen.typescript.SharedTypeScriptTest@3c5c64d6]" name="oldImportsStillPresentTest" duration-ms="68" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oldImportsStillPresentTest -->
        <test-method status="PASS" signature="toModelImportMapTest()[pri:0, instance:org.openapitools.codegen.typescript.SharedTypeScriptTest@3c5c64d6]" name="toModelImportMapTest" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toModelImportMapTest -->
        <test-method status="PASS" signature="typesInImportsAreSplitTest()[pri:0, instance:org.openapitools.codegen.typescript.SharedTypeScriptTest@3c5c64d6]" name="typesInImportsAreSplitTest" duration-ms="71" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typesInImportsAreSplitTest -->
      </class> <!-- org.openapitools.codegen.typescript.SharedTypeScriptTest -->
      <class name="org.openapitools.codegen.rust.RustClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.rust.RustClientCodegenTest@49dbaaf3]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testLowercaseParameterName()[pri:0, instance:org.openapitools.codegen.rust.RustClientCodegenTest@49dbaaf3]" name="testLowercaseParameterName" duration-ms="2" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLowercaseParameterName -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.rust.RustClientCodegenTest@49dbaaf3]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.rust.RustClientCodegenTest@49dbaaf3]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testWithIntegerDefaults()[pri:0, instance:org.openapitools.codegen.rust.RustClientCodegenTest@49dbaaf3]" name="testWithIntegerDefaults" duration-ms="2" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithIntegerDefaults -->
        <test-method status="PASS" signature="testWithIntegerFitting()[pri:0, instance:org.openapitools.codegen.rust.RustClientCodegenTest@49dbaaf3]" name="testWithIntegerFitting" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithIntegerFitting -->
        <test-method status="PASS" signature="testWithIntegerFittingAndPreferUnsigned()[pri:0, instance:org.openapitools.codegen.rust.RustClientCodegenTest@49dbaaf3]" name="testWithIntegerFittingAndPreferUnsigned" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithIntegerFittingAndPreferUnsigned -->
        <test-method status="PASS" signature="testWithPreferUnsigned()[pri:0, instance:org.openapitools.codegen.rust.RustClientCodegenTest@49dbaaf3]" name="testWithPreferUnsigned" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithPreferUnsigned -->
      </class> <!-- org.openapitools.codegen.rust.RustClientCodegenTest -->
      <class name="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest">
        <test-method status="PASS" signature="testCorrectlyProducesImportsWithImportMapping()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testCorrectlyProducesImportsWithImportMapping" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCorrectlyProducesImportsWithImportMapping -->
        <test-method status="PASS" signature="testKebabCasedModelFilenames()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testKebabCasedModelFilenames" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKebabCasedModelFilenames -->
        <test-method status="PASS" signature="testModelFileSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testModelFileSuffix" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelFileSuffix -->
        <test-method status="PASS" signature="testOperationIdParser()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testOperationIdParser" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOperationIdParser -->
        <test-method status="PASS" signature="testModelSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testModelSuffix" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelSuffix -->
        <test-method status="PASS" signature="testRemovePrefixSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testRemovePrefixSuffix" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemovePrefixSuffix -->
        <test-method status="PASS" signature="testSchema()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testSchema" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSchema -->
        <test-method status="PASS" signature="testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testSnapshotVersion" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSnapshotVersion -->
        <test-method status="PASS" signature="testTaggedUnionImports()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testTaggedUnionImports" duration-ms="41" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTaggedUnionImports -->
        <test-method status="PASS" signature="testToEnumName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testToEnumName" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumName -->
        <test-method status="PASS" signature="testToParamNaming()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testToParamNaming" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToParamNaming -->
        <test-method status="PASS" signature="toEnumVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="toEnumVarName" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toEnumVarName -->
        <test-method status="PASS" signature="testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="testWithoutSnapshotVersion" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutSnapshotVersion -->
        <test-method status="PASS" signature="toVarName()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest@32223f56]" name="toVarName" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVarName -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientCodegenTest -->
      <class name="org.openapitools.codegen.java.JavaClientDeepObjectTest">
        <test-method status="PASS" signature="deepObject()[pri:0, instance:org.openapitools.codegen.java.JavaClientDeepObjectTest@72fe8a4f]" name="deepObject" duration-ms="55" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deepObject -->
      </class> <!-- org.openapitools.codegen.java.JavaClientDeepObjectTest -->
      <class name="org.openapitools.codegen.scala.SttpBooleanPropertyTest">
        <test-method status="PASS" signature="shouldUseDefaultValueIfAdditionalPropertiesAreEmpty()[pri:0, instance:org.openapitools.codegen.scala.SttpBooleanPropertyTest@476a2819]" name="shouldUseDefaultValueIfAdditionalPropertiesAreEmpty" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseDefaultValueIfAdditionalPropertiesAreEmpty -->
        <test-method status="PASS" signature="shouldUseGivenValueIfProvided()[pri:0, instance:org.openapitools.codegen.scala.SttpBooleanPropertyTest@476a2819]" name="shouldUseGivenValueIfProvided" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseGivenValueIfProvided -->
      </class> <!-- org.openapitools.codegen.scala.SttpBooleanPropertyTest -->
      <class name="org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="6" started-at="2023-04-09T10:14:25 UTC" finished-at="2023-04-09T10:14:25 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addDefaultValueDocumentationForNonContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="addDefaultValueDocumentationForNonContainers" duration-ms="260" started-at="2023-04-09T10:14:25 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDefaultValueDocumentationForNonContainers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="doNotAddDefaultValueDocumentationForContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="doNotAddDefaultValueDocumentationForContainers" duration-ms="48" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotAddDefaultValueDocumentationForContainers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude" duration-ms="213" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="generateJsonAnnotationForPolymorphism()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="generateJsonAnnotationForPolymorphism" duration-ms="111" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateJsonAnnotationForPolymorphism -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsFalse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="testAddOperationToGroupUseTagsFalse" duration-ms="61" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsFalse -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsTrue()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="testAddOperationToGroupUseTagsTrue" duration-ms="42" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsTrue -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="23" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:26 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="testExtraAnnotations" duration-ms="1060" started-at="2023-04-09T10:14:26 UTC" finished-at="2023-04-09T10:14:27 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:27 UTC" finished-at="2023-04-09T10:14:27 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGenerateOperationBodyWithCodedTestData()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="testGenerateOperationBodyWithCodedTestData" duration-ms="382" started-at="2023-04-09T10:14:27 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateOperationBodyWithCodedTestData -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGenerateOperationBodyWithJsonTestData()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="testGenerateOperationBodyWithJsonTestData" duration-ms="245" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateOperationBodyWithJsonTestData -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest@22d1886d]" name="testSettersForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFExtServerCodegenTest -->
      <class name="org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest">
        <test-method status="PASS" signature="arrayAsSetModelTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="arrayAsSetModelTest" duration-ms="2" started-at="2023-04-09T10:14:39 UTC" description="convert an array model with unique items to set" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayAsSetModelTest -->
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert an array model" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="codeGenerationJava8Test()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="codeGenerationJava8Test" duration-ms="156" started-at="2023-04-09T10:14:39 UTC" description="validate codegen java8 output" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- codeGenerationJava8Test -->
        <test-method status="PASS" signature="codeGenerationTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="codeGenerationTest" duration-ms="34" started-at="2023-04-09T10:14:39 UTC" description="validate codegen joda output" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- codeGenerationTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="complexListPropertyTest" duration-ms="4" started-at="2023-04-09T10:14:39 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="complexMapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="complexPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a model with complex properties" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="complexSetPropertyTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="complexSetPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a model with set (unique array) property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexSetPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="listPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mainPackageTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="mainPackageTest" duration-ms="41" started-at="2023-04-09T10:14:39 UTC" description="override only mainPackage" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainPackageTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a map model" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="mapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="overridePackagesTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="overridePackagesTest" duration-ms="36" started-at="2023-04-09T10:14:39 UTC" description="override api packages" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overridePackagesTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a simple scala model" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="stripModelNameTest()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest@5b9ed77b]" name="stripModelNameTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="strip model name" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stripModelNameTest -->
      </class> <!-- org.openapitools.codegen.scalaakka.ScalaAkkaClientCodegenTest -->
      <class name="org.openapitools.codegen.DefaultCodegenTest$FromParameter">
        <test-method status="PASS" signature="setShouldExplode()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest$FromParameter@462af4cf]" name="setShouldExplode" duration-ms="3" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setShouldExplode -->
        <test-method status="PASS" signature="setStyle()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest$FromParameter@462af4cf]" name="setStyle" duration-ms="2" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setStyle -->
        <test-method status="PASS" signature="testConvertPropertyToBooleanAndWriteBack_Boolean_true()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest$FromParameter@462af4cf]" name="testConvertPropertyToBooleanAndWriteBack_Boolean_true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertPropertyToBooleanAndWriteBack_Boolean_true -->
        <test-method status="PASS" signature="testConvertPropertyToBooleanAndWriteBack_String_true()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest$FromParameter@462af4cf]" name="testConvertPropertyToBooleanAndWriteBack_String_true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertPropertyToBooleanAndWriteBack_String_true -->
        <test-method status="PASS" signature="testConvertPropertyToBooleanAndWriteBack_String_false()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest$FromParameter@462af4cf]" name="testConvertPropertyToBooleanAndWriteBack_String_false" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertPropertyToBooleanAndWriteBack_String_false -->
        <test-method status="PASS" signature="testConvertPropertyToBooleanAndWriteBack_Boolean_false()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest$FromParameter@462af4cf]" name="testConvertPropertyToBooleanAndWriteBack_Boolean_false" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertPropertyToBooleanAndWriteBack_Boolean_false -->
        <test-method status="PASS" signature="testConvertPropertyToBooleanAndWriteBack_String_blibb()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest$FromParameter@462af4cf]" name="testConvertPropertyToBooleanAndWriteBack_String_blibb" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertPropertyToBooleanAndWriteBack_String_blibb -->
      </class> <!-- org.openapitools.codegen.DefaultCodegenTest$FromParameter -->
      <class name="org.openapitools.codegen.haskellyesod.HaskellYesodServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.haskellyesod.HaskellYesodServerOptionsTest@3e4e4c1]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.haskellyesod.HaskellYesodServerOptionsTest@3e4e4c1]" name="checkOptionsProcessing" duration-ms="2" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.haskellyesod.HaskellYesodServerOptionsTest -->
      <class name="org.openapitools.codegen.php.PhpModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="arrayModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert an array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListProperty()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="complexListProperty" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListProperty -->
        <test-method status="PASS" signature="complexMapSchema()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="complexMapSchema" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapSchema -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="dateTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="dateTest" duration-ms="3" started-at="2023-04-09T10:14:42 UTC" description="returns DateTime when using `--model-name-prefix`" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateTest -->
        <test-method status="PASS" signature="enumArrayModelTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="enumArrayModelTest" duration-ms="41" started-at="2023-04-09T10:14:42 UTC" description="test enum array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumArrayModelTest -->
        <test-method status="PASS" signature="enumModelValueTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="enumModelValueTest" duration-ms="38" started-at="2023-04-09T10:14:42 UTC" description="test enum model for values (numeric, string, etc)" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumModelValueTest -->
        <test-method status="PASS" signature="hydraModelTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="hydraModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test @ character replacements used in Hydra" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hydraModelTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="listPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="mapPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample__name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[/sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[\sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[\Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a simple php model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="testReservedWord()[pri:0, instance:org.openapitools.codegen.php.PhpModelTest@568945a9]" name="testReservedWord" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum variable names for reserved words" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWord -->
      </class> <!-- org.openapitools.codegen.php.PhpModelTest -->
      <class name="org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest@70abf9b0]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="buildPetstoreWithAbstractClasses()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest@70abf9b0]" name="buildPetstoreWithAbstractClasses" duration-ms="23" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest.buildPetstoreWithAbstractClasses(FunctionalHelidonSeServerTest.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPetstoreWithAbstractClasses -->
        <test-method status="SKIP" signature="buildPetstoreWithDefaultOptions()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest@70abf9b0]" name="buildPetstoreWithDefaultOptions" duration-ms="24" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:129)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest.buildPetstoreWithDefaultOptions(FunctionalHelidonSeServerTest.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPetstoreWithDefaultOptions -->
        <test-method status="SKIP" signature="verifyFullProject()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest@70abf9b0]" name="verifyFullProject" duration-ms="24" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest.verifyFullProject(FunctionalHelidonSeServerTest.java:56)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFullProject -->
      </class> <!-- org.openapitools.codegen.java.helidon.functional.FunctionalHelidonSeServerTest -->
      <class name="org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest">
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="addDefaultValueDocumentationForNonContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="addDefaultValueDocumentationForNonContainers" duration-ms="25" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDefaultValueDocumentationForNonContainers -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="addsImportForSetArgument()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="addsImportForSetArgument" duration-ms="25" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addsImportForSetArgument -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="addsImportForSetResponse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="addsImportForSetResponse" duration-ms="40" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addsImportForSetResponse -->
        <test-method status="PASS" signature="arrayNullableDefaultValueTests()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="arrayNullableDefaultValueTests" duration-ms="90" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayNullableDefaultValueTests -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="doNotAddDefaultValueDocumentationForContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="doNotAddDefaultValueDocumentationForContainers" duration-ms="19" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotAddDefaultValueDocumentationForContainers -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude" duration-ms="52" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude -->
        <test-method status="PASS" signature="generateApiForQuarkusWithGzipFeature()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="generateApiForQuarkusWithGzipFeature" duration-ms="18" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateApiForQuarkusWithGzipFeature -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="generateApiWithAsyncSupport()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="generateApiWithAsyncSupport" duration-ms="21" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateApiWithAsyncSupport -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="generateApiWithAsyncSupportAndInterfaceOnly()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="generateApiWithAsyncSupportAndInterfaceOnly" duration-ms="15" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateApiWithAsyncSupportAndInterfaceOnly -->
        <test-method status="PASS" signature="generateApiWithAsyncSupportAndInterfaceOnlyAndResponse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="generateApiWithAsyncSupportAndInterfaceOnlyAndResponse" duration-ms="17" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateApiWithAsyncSupportAndInterfaceOnlyAndResponse -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="generateDeepObjectArrayWithPattern()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="generateDeepObjectArrayWithPattern" duration-ms="40" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateDeepObjectArrayWithPattern -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="generateJsonAnnotationForPolymorphism()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="generateJsonAnnotationForPolymorphism" duration-ms="58" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateJsonAnnotationForPolymorphism -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="generatePetstoreAPIWithAsyncSupport()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="generatePetstoreAPIWithAsyncSupport" duration-ms="217" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generatePetstoreAPIWithAsyncSupport -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="generatePingWithAsyncSupportPrimitiveType()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="generatePingWithAsyncSupportPrimitiveType" duration-ms="20" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generatePingWithAsyncSupportPrimitiveType -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAddOperationToGroupForRootResourceAndUseTagsFalse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testAddOperationToGroupForRootResourceAndUseTagsFalse" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupForRootResourceAndUseTagsFalse -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAddOperationToGroupForRootResourceAndUseTagsTrue()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testAddOperationToGroupForRootResourceAndUseTagsTrue" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupForRootResourceAndUseTagsTrue -->
        <test-method status="PASS" signature="testAddOperationToGroupForRootResourcePathParamAndUseTagsTrue()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testAddOperationToGroupForRootResourcePathParamAndUseTagsTrue" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupForRootResourcePathParamAndUseTagsTrue -->
        <test-method status="PASS" signature="testAddOperationToGroupForRootResourcePathParamAndUseTagsFalse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testAddOperationToGroupForRootResourcePathParamAndUseTagsFalse" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupForRootResourcePathParamAndUseTagsFalse -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAddOperationToGroupForSubresource()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testAddOperationToGroupForSubresource" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupForSubresource -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsFalse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testAddOperationToGroupUseTagsFalse" duration-ms="21" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsFalse -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsTrue()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testAddOperationToGroupUseTagsTrue" duration-ms="20" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsTrue -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testExtraAnnotations" duration-ms="134" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testGenerateApiWithCookieParameter_issue2908()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testGenerateApiWithCookieParameter_issue2908" duration-ms="232" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateApiWithCookieParameter_issue2908 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testGenerateApiWithPrecedingPathParameter_issue1347()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testGenerateApiWithPrecedingPathParameter_issue1347" duration-ms="37" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateApiWithPrecedingPathParameter_issue1347 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:30 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testGeneratePingAlternativeLocation1()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testGeneratePingAlternativeLocation1" duration-ms="34" started-at="2023-04-09T10:14:30 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePingAlternativeLocation1 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testGeneratePingAlternativeLocation2()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testGeneratePingAlternativeLocation2" duration-ms="31" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePingAlternativeLocation2 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testGeneratePingDefaultLocation()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testGeneratePingDefaultLocation" duration-ms="32" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePingDefaultLocation -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testGeneratePingNoSpecFile()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testGeneratePingNoSpecFile" duration-ms="23" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePingNoSpecFile -->
        <test-method status="PASS" signature="testHandleDefaultValue_issue8535()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testHandleDefaultValue_issue8535" duration-ms="49" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandleDefaultValue_issue8535 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testHandleRequiredAndReadOnlyPropertiesCorrectly()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testHandleRequiredAndReadOnlyPropertiesCorrectly" duration-ms="35" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandleRequiredAndReadOnlyPropertiesCorrectly -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testToApiNameForSubresource()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest@293cde83]" name="testToApiNameForSubresource" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToApiNameForSubresource -->
      </class> <!-- org.openapitools.codegen.java.jaxrs.JavaJAXRSSpecServerCodegenTest -->
      <class name="org.openapitools.codegen.kotlin.KotlinReservedWordsTest">
        <test-method status="PASS" signature="reservedWordsInGeneratedCode()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="reservedWordsInGeneratedCode" duration-ms="13" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reservedWordsInGeneratedCode -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[as]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[break]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[do]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[continue]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[else]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[for]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[if]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[fun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[is]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[package]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[object]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[return]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[throw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[this]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[super]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[val]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[typeof]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[typealias]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[try]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[var]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[when]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[internal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[while]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[open]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[value]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsModels(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsModels" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[external]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsModels -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[as]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[break]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[do]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[else]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[continue]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[is]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[for]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[fun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[if]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[object]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[package]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[super]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[return]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[this]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[try]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[typealias]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[typeof]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[throw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[open]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[when]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[var]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[val]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[while]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[external]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[internal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsParameters(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsParameters" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[value]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsParameters -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[as]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[break]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[continue]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[for]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[do]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[else]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[if]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[fun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[package]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[is]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[object]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[this]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[super]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[typealias]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[try]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[return]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[throw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[open]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[var]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[val]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[when]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[while]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[typeof]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[internal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[value]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
        <test-method status="PASS" signature="testReservedWordsAsProperties(java.lang.String)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinReservedWordsTest@5b19b5d5]" name="testReservedWordsAsProperties" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="reservedWords" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[external]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWordsAsProperties -->
      </class> <!-- org.openapitools.codegen.kotlin.KotlinReservedWordsTest -->
      <class name="org.openapitools.codegen.typescript.TypeScriptClientModelTest">
        <test-method status="PASS" signature="arrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientModelTest@10504bc7]" name="arrayOneOfModelTest" duration-ms="8" started-at="2023-04-09T10:14:43 UTC" description="convert an array oneof model" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayOneOfModelTest -->
        <test-method status="PASS" signature="objectPropertyAnyOfWithArrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientModelTest@10504bc7]" name="objectPropertyAnyOfWithArrayOneOfModelTest" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="convert an any of with array oneof model" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectPropertyAnyOfWithArrayOneOfModelTest -->
      </class> <!-- org.openapitools.codegen.typescript.TypeScriptClientModelTest -->
      <class name="org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="26" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateBodyParams()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateBodyParams" duration-ms="102" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBodyParams -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="26" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateCookiesParams()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateCookiesParams" duration-ms="102" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateCookiesParams -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="26" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateFormParams()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateFormParams" duration-ms="99" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateFormParams -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="30" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateFullProject()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateFullProject" duration-ms="54" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateFullProject -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="34" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateGradleProject()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateGradleProject" duration-ms="76" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateGradleProject -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="25" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateHeaderParams()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateHeaderParams" duration-ms="94" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateHeaderParams -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="32" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateParamsValidation()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateParamsValidation" duration-ms="123" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateParamsValidation -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="29" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGeneratePathParams()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGeneratePathParams" duration-ms="97" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePathParams -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="28" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateProjectByDefault()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateProjectByDefault" duration-ms="53" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:19 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateProjectByDefault -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="setup" is-config="true" duration-ms="27" started-at="2023-04-09T10:15:19 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateQueryParams()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest@5e39850]" name="testGenerateQueryParams" duration-ms="100" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateQueryParams -->
      </class> <!-- org.openapitools.codegen.java.helidon.JavaHelidonSeServerCodegenTest -->
      <class name="org.openapitools.codegen.java.helidon.JavaHelidonMpClientCodegenTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpClientCodegenTest@37fdfb05]" name="setup" is-config="true" duration-ms="115" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testPetApi()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpClientCodegenTest@37fdfb05]" name="testPetApi" duration-ms="2" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPetApi -->
        <test-method status="PASS" signature="testPom()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpClientCodegenTest@37fdfb05]" name="testPom" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPom -->
        <test-method status="PASS" signature="testStoreApi()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpClientCodegenTest@37fdfb05]" name="testStoreApi" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreApi -->
        <test-method status="PASS" signature="testUserApi()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpClientCodegenTest@37fdfb05]" name="testUserApi" duration-ms="2" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserApi -->
      </class> <!-- org.openapitools.codegen.java.helidon.JavaHelidonMpClientCodegenTest -->
      <class name="org.openapitools.codegen.bash.BashClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.bash.BashClientOptionsTest@2d6e09f0]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.bash.BashClientOptionsTest@2d6e09f0]" name="checkOptionsProcessing" duration-ms="4" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.bash.BashClientOptionsTest -->
      <class name="org.openapitools.codegen.json.JsonGeneratorTest">
        <test-method status="PASS" signature="testGeneratePing()[pri:0, instance:org.openapitools.codegen.json.JsonGeneratorTest@15465d05]" name="testGeneratePing" duration-ms="18" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePing -->
        <test-method status="PASS" signature="testGeneratePingOtherOutputFile()[pri:0, instance:org.openapitools.codegen.json.JsonGeneratorTest@15465d05]" name="testGeneratePingOtherOutputFile" duration-ms="18" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePingOtherOutputFile -->
      </class> <!-- org.openapitools.codegen.json.JsonGeneratorTest -->
      <class name="org.openapitools.codegen.java.spring.SpringCodegenTest">
        <test-method status="PASS" signature="apiFirstShouldNotGenerateApiOrModel()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="apiFirstShouldNotGenerateApiOrModel" duration-ms="6" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFirstShouldNotGenerateApiOrModel -->
        <test-method status="PASS" signature="clientOptsUnicity()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="clientOptsUnicity" duration-ms="2" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clientOptsUnicity -->
        <test-method status="PASS" signature="contractWithEnumContainsEnumConverter()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="contractWithEnumContainsEnumConverter" duration-ms="53" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contractWithEnumContainsEnumConverter -->
        <test-method status="PASS" signature="contractWithoutEnumDoesNotContainsEnumConverter()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="contractWithoutEnumDoesNotContainsEnumConverter" duration-ms="92" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contractWithoutEnumDoesNotContainsEnumConverter -->
        <test-method status="PASS" signature="doAnnotateDatesOnModelParameters()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="doAnnotateDatesOnModelParameters" duration-ms="57" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAnnotateDatesOnModelParameters -->
        <test-method status="PASS" signature="doGenerateCookieParams()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="doGenerateCookieParams" duration-ms="50" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateCookieParams -->
        <test-method status="PASS" signature="doGeneratePathVariableForSimpleParam()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="doGeneratePathVariableForSimpleParam" duration-ms="52" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGeneratePathVariableForSimpleParam -->
        <test-method status="PASS" signature="doGenerateRequestParamForSimpleParam()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="doGenerateRequestParamForSimpleParam" duration-ms="118" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateRequestParamForSimpleParam -->
        <test-method status="PASS" signature="doNotGenerateRequestParamForObjectQueryParam()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="doNotGenerateRequestParamForObjectQueryParam" duration-ms="25" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateRequestParamForObjectQueryParam -->
        <test-method status="PASS" signature="generateFormatForDateAndDateTimeQueryParam()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="generateFormatForDateAndDateTimeQueryParam" duration-ms="45" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateFormatForDateAndDateTimeQueryParam -->
        <test-method status="PASS" signature="interfaceDefaultImplDisableWithResponseWrapper()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="interfaceDefaultImplDisableWithResponseWrapper" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- interfaceDefaultImplDisableWithResponseWrapper -->
        <test-method status="PASS" signature="nonRequiredFieldShouldNotIncludeNotNullAnnotation_issue13365()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="nonRequiredFieldShouldNotIncludeNotNullAnnotation_issue13365" duration-ms="58" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonRequiredFieldShouldNotIncludeNotNullAnnotation_issue13365 -->
        <test-method status="PASS" signature="paramObjectImportForDifferentSpringBootVersions_issue14077()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="paramObjectImportForDifferentSpringBootVersions_issue14077" duration-ms="339" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramObjectImportForDifferentSpringBootVersions_issue14077 -->
        <test-method status="PASS" signature="reactiveMapTypeRequestMonoTest()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="reactiveMapTypeRequestMonoTest" duration-ms="28" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reactiveMapTypeRequestMonoTest -->
        <test-method status="PASS" signature="reactiveRequiredSpringBoot()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="reactiveRequiredSpringBoot" duration-ms="0" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Currently, reactive option doesn't supported by Spring Cloud]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Currently, reactive option doesn't supported by Spring Cloud
at org.openapitools.codegen.languages.SpringCodegen.processOpts(SpringCodegen.java:432)
at org.openapitools.codegen.java.spring.SpringCodegenTest.reactiveRequiredSpringBoot(SpringCodegenTest.java:315)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reactiveRequiredSpringBoot -->
        <test-method status="PASS" signature="requiredFieldShouldIncludeNotNullAnnotationJakarta_issue13365_issue13885()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="requiredFieldShouldIncludeNotNullAnnotationJakarta_issue13365_issue13885" duration-ms="40" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requiredFieldShouldIncludeNotNullAnnotationJakarta_issue13365_issue13885 -->
        <test-method status="PASS" signature="requiredFieldShouldIncludeNotNullAnnotationWithBeanValidationTrue_issue13365()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="requiredFieldShouldIncludeNotNullAnnotationWithBeanValidationTrue_issue13365" duration-ms="48" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requiredFieldShouldIncludeNotNullAnnotationWithBeanValidationTrue_issue13365 -->
        <test-method status="PASS" signature="requiredFieldShouldIncludeNotNullAnnotationWithBeanValidationTrue_issue14252()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="requiredFieldShouldIncludeNotNullAnnotationWithBeanValidationTrue_issue14252" duration-ms="31" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requiredFieldShouldIncludeNotNullAnnotationWithBeanValidationTrue_issue14252 -->
        <test-method status="PASS" signature="requiredFieldShouldIncludeNotNullAnnotation_issue13365()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="requiredFieldShouldIncludeNotNullAnnotation_issue13365" duration-ms="38" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requiredFieldShouldIncludeNotNullAnnotation_issue13365 -->
        <test-method status="PASS" signature="shouldAddNotNullOnRequiredAttributes()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldAddNotNullOnRequiredAttributes" duration-ms="17" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAddNotNullOnRequiredAttributes -->
        <test-method status="PASS" signature="shouldAddParameterWithInHeaderWhenImplicitHeadersIsTrue_issue14418()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldAddParameterWithInHeaderWhenImplicitHeadersIsTrue_issue14418" duration-ms="31" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAddParameterWithInHeaderWhenImplicitHeadersIsTrue_issue14418 -->
        <test-method status="PASS" signature="shouldAddValidAnnotationIntoCollectionWhenBeanValidationIsEnabled_issue14723()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldAddValidAnnotationIntoCollectionWhenBeanValidationIsEnabled_issue14723" duration-ms="65" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAddValidAnnotationIntoCollectionWhenBeanValidationIsEnabled_issue14723 -->
        <test-method status="PASS" signature="shouldEscapeReservedKeyWordsForRequestParameters_7506_Regression()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldEscapeReservedKeyWordsForRequestParameters_7506_Regression" duration-ms="27" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldEscapeReservedKeyWordsForRequestParameters_7506_Regression -->
        <test-method status="PASS" signature="shouldGenerateBeanValidationOnHeaderParams()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateBeanValidationOnHeaderParams" duration-ms="69" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateBeanValidationOnHeaderParams -->
        <test-method status="PASS" signature="shouldGenerateConstructorWithOnlyRequiredParameters()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateConstructorWithOnlyRequiredParameters" duration-ms="80" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateConstructorWithOnlyRequiredParameters -->
        <test-method status="PASS" signature="shouldGenerateDefaultValueForEnumRequestParameter()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateDefaultValueForEnumRequestParameter" duration-ms="32" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateDefaultValueForEnumRequestParameter -->
        <test-method status="PASS" signature="shouldGenerateDiscriminatorFromAllOfWhenUsingLegacyDiscriminatorBehaviour_issue12692()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateDiscriminatorFromAllOfWhenUsingLegacyDiscriminatorBehaviour_issue12692" duration-ms="64" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateDiscriminatorFromAllOfWhenUsingLegacyDiscriminatorBehaviour_issue12692 -->
        <test-method status="PASS" signature="shouldGenerateExternalDocs()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateExternalDocs" duration-ms="138" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateExternalDocs -->
        <test-method status="PASS" signature="shouldGenerateJsonPropertyAnnotationLocatedInGetters_issue5705()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateJsonPropertyAnnotationLocatedInGetters_issue5705" duration-ms="615" started-at="2023-04-09T10:14:35 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateJsonPropertyAnnotationLocatedInGetters_issue5705 -->
        <test-method status="PASS" signature="shouldGenerateMethodsWithoutUsingResponseEntityAndDelegation_issue11537()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateMethodsWithoutUsingResponseEntityAndDelegation_issue11537" duration-ms="25" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateMethodsWithoutUsingResponseEntityAndDelegation_issue11537 -->
        <test-method status="PASS" signature="shouldGenerateMethodsWithoutUsingResponseEntityAndWithoutDelegation_issue11537()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateMethodsWithoutUsingResponseEntityAndWithoutDelegation_issue11537" duration-ms="19" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateMethodsWithoutUsingResponseEntityAndWithoutDelegation_issue11537 -->
        <test-method status="PASS" signature="shouldGenerateOneTagAttributeForMultipleTags_Regression11464(java.lang.String,java.util.function.Consumer)[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateOneTagAttributeForMultipleTags_Regression11464" duration-ms="27" started-at="2023-04-09T10:14:36 UTC" data-provider="issue11464TestCases" finished-at="2023-04-09T10:14:36 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[SPRINGDOC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.openapitools.codegen.java.spring.SpringCodegenTest$$Lambda$846/2037161223@16d798ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateOneTagAttributeForMultipleTags_Regression11464 -->
        <test-method status="PASS" signature="shouldGenerateOneTagAttributeForMultipleTags_Regression11464(java.lang.String,java.util.function.Consumer)[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateOneTagAttributeForMultipleTags_Regression11464" duration-ms="27" started-at="2023-04-09T10:14:36 UTC" data-provider="issue11464TestCases" finished-at="2023-04-09T10:14:36 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[SPRINGFOX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.openapitools.codegen.java.spring.SpringCodegenTest$$Lambda$847/1543821620@52f4002b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateOneTagAttributeForMultipleTags_Regression11464 -->
        <test-method status="PASS" signature="shouldGenerateRequestParamForRefParams_3248_Regression()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateRequestParamForRefParams_3248_Regression" duration-ms="24" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateRequestParamForRefParams_3248_Regression -->
        <test-method status="PASS" signature="shouldGenerateRequestParamForRefParams_3248_RegressionDates()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateRequestParamForRefParams_3248_RegressionDates" duration-ms="23" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateRequestParamForRefParams_3248_RegressionDates -->
        <test-method status="PASS" signature="shouldGenerateValidCodeForReactiveControllerWithoutParams_issue14907()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldGenerateValidCodeForReactiveControllerWithoutParams_issue14907" duration-ms="44" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateValidCodeForReactiveControllerWithoutParams_issue14907 -->
        <test-method status="PASS" signature="shouldHandleContentTypeWithSecondWildcardSubtype_issue12457()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldHandleContentTypeWithSecondWildcardSubtype_issue12457" duration-ms="31" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldHandleContentTypeWithSecondWildcardSubtype_issue12457 -->
        <test-method status="PASS" signature="shouldHandleCustomResponseType_issue11731()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldHandleCustomResponseType_issue11731" duration-ms="42" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldHandleCustomResponseType_issue11731 -->
        <test-method status="PASS" signature="shouldHandleSeparatelyInterfaceAndModelAdditionalAnnotations()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldHandleSeparatelyInterfaceAndModelAdditionalAnnotations" duration-ms="60" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldHandleSeparatelyInterfaceAndModelAdditionalAnnotations -->
        <test-method status="PASS" signature="shouldNotAddNotNullOnReadOnlyAttributes()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldNotAddNotNullOnReadOnlyAttributes" duration-ms="19" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotAddNotNullOnReadOnlyAttributes -->
        <test-method status="PASS" signature="shouldNotUseEqualsNullableForArrayWhenNotSetInConfig_issue13385()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldNotUseEqualsNullableForArrayWhenNotSetInConfig_issue13385" duration-ms="32" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotUseEqualsNullableForArrayWhenNotSetInConfig_issue13385 -->
        <test-method status="PASS" signature="shouldPurAdditionalModelTypesOverAllModels()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldPurAdditionalModelTypesOverAllModels" duration-ms="126" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldPurAdditionalModelTypesOverAllModels -->
        <test-method status="PASS" signature="shouldSetDefaultValueForMultipleArrayItems()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldSetDefaultValueForMultipleArrayItems" duration-ms="30" started-at="2023-04-09T10:14:36 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetDefaultValueForMultipleArrayItems -->
        <test-method status="PASS" signature="shouldUseTheSameTagNameForTheInterfaceAndTheMethod_issue11570()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="shouldUseTheSameTagNameForTheInterfaceAndTheMethod_issue11570" duration-ms="41" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseTheSameTagNameForTheInterfaceAndTheMethod_issue11570 -->
        <test-method status="PASS" signature="springcloudWithAsyncAndJava8HasResponseWrapperCompletableFuture()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="springcloudWithAsyncAndJava8HasResponseWrapperCompletableFuture" duration-ms="0" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springcloudWithAsyncAndJava8HasResponseWrapperCompletableFuture -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="springcloudWithJava8DisableJdk8()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="springcloudWithJava8DisableJdk8" duration-ms="0" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springcloudWithJava8DisableJdk8 -->
        <test-method status="PASS" signature="testConfigFileGeneration_springdoc()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testConfigFileGeneration_springdoc" duration-ms="0" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigFileGeneration_springdoc -->
        <test-method status="PASS" signature="testConfigFileGeneration_springfox()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testConfigFileGeneration_springfox" duration-ms="0" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigFileGeneration_springfox -->
        <test-method status="PASS" signature="testDefaultValuesFixed()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testDefaultValuesFixed" duration-ms="9" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultValuesFixed -->
        <test-method status="PASS" signature="testDiscriminatorWithMappingIssue14731()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testDiscriminatorWithMappingIssue14731" duration-ms="93" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiscriminatorWithMappingIssue14731 -->
        <test-method status="PASS" signature="testDiscriminatorWithoutMappingIssue14731()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testDiscriminatorWithoutMappingIssue14731" duration-ms="121" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiscriminatorWithoutMappingIssue14731 -->
        <test-method status="PASS" signature="testDoGenerateRequestBodyRequiredAttribute_3134_Regression()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testDoGenerateRequestBodyRequiredAttribute_3134_Regression" duration-ms="21" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoGenerateRequestBodyRequiredAttribute_3134_Regression -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testExtraAnnotations" duration-ms="106" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="testHandleDefaultValue_issue8535()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testHandleDefaultValue_issue8535" duration-ms="52" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandleDefaultValue_issue8535 -->
        <test-method status="PASS" signature="testImportMappings()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testImportMappings" duration-ms="0" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportMappings -->
        <test-method status="PASS" signature="testIssue11323()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testIssue11323" duration-ms="28" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue11323 -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testMappingSubtypesIssue13150()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testMappingSubtypesIssue13150" duration-ms="40" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMappingSubtypesIssue13150 -->
        <test-method status="PASS" signature="testMultipartBoot()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testMultipartBoot" duration-ms="52" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipartBoot -->
        <test-method status="PASS" signature="testNoRequestMappingAnnotation()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testNoRequestMappingAnnotation" duration-ms="159" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoRequestMappingAnnotation -->
        <test-method status="PASS" signature="testNoRequestMappingAnnotation_spring_cloud_default()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testNoRequestMappingAnnotation_spring_cloud_default" duration-ms="139" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoRequestMappingAnnotation_spring_cloud_default -->
        <test-method status="PASS" signature="testOneOf5381()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testOneOf5381" duration-ms="62" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOf5381 -->
        <test-method status="PASS" signature="testOneOfAndAllOf()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testOneOfAndAllOf" duration-ms="125" started-at="2023-04-09T10:14:37 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfAndAllOf -->
        <test-method status="PASS" signature="testPutItemsMethodContainsKeyInSuperClassMethodCall_issue12494()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testPutItemsMethodContainsKeyInSuperClassMethodCall_issue12494" duration-ms="50" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutItemsMethodContainsKeyInSuperClassMethodCall_issue12494 -->
        <test-method status="PASS" signature="testRequestMappingAnnotation()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testRequestMappingAnnotation" duration-ms="136" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestMappingAnnotation -->
        <test-method status="PASS" signature="testResponseWithArray_issue11897()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testResponseWithArray_issue11897" duration-ms="33" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseWithArray_issue11897 -->
        <test-method status="PASS" signature="testResponseWithArray_issue12524()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testResponseWithArray_issue12524" duration-ms="65" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseWithArray_issue12524 -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testSettersForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testTypeMappings()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="testTypeMappings" duration-ms="0" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeMappings -->
        <test-method status="PASS" signature="useBeanValidationGenerateAnnotationsForRequestBody_issue13932()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="useBeanValidationGenerateAnnotationsForRequestBody_issue13932" duration-ms="23" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useBeanValidationGenerateAnnotationsForRequestBody_issue13932 -->
        <test-method status="PASS" signature="useBeanValidationTruePerformBeanValidationFalseJava8TrueForFormatEmail()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="useBeanValidationTruePerformBeanValidationFalseJava8TrueForFormatEmail" duration-ms="24" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useBeanValidationTruePerformBeanValidationFalseJava8TrueForFormatEmail -->
        <test-method status="PASS" signature="useBeanValidationTruePerformBeanValidationFalseJava8TrueJakartaeeTrueForFormatEmail()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="useBeanValidationTruePerformBeanValidationFalseJava8TrueJakartaeeTrueForFormatEmail" duration-ms="18" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useBeanValidationTruePerformBeanValidationFalseJava8TrueJakartaeeTrueForFormatEmail -->
        <test-method status="PASS" signature="useBeanValidationTruePerformBeanValidationTrueJava8FalseForFormatEmail()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="useBeanValidationTruePerformBeanValidationTrueJava8FalseForFormatEmail" duration-ms="20" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useBeanValidationTruePerformBeanValidationTrueJava8FalseForFormatEmail -->
        <test-method status="PASS" signature="useBeanValidationTruePerformBeanValidationTrueJava8TrueForFormatEmail()[pri:0, instance:org.openapitools.codegen.java.spring.SpringCodegenTest@3e48e859]" name="useBeanValidationTruePerformBeanValidationTrueJava8TrueForFormatEmail" duration-ms="20" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useBeanValidationTruePerformBeanValidationTrueJava8TrueForFormatEmail -->
      </class> <!-- org.openapitools.codegen.java.spring.SpringCodegenTest -->
      <class name="org.openapitools.codegen.cpptiny.CppTinyServiceServiceTest">
        <test-method status="PASS" signature="exampleOfATest()[pri:0, instance:org.openapitools.codegen.cpptiny.CppTinyServiceServiceTest@aeb555e]" name="exampleOfATest" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" description="An example of testing the code model before it is rendered" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleOfATest -->
        <test-method status="PASS" signature="intTypeIsLong()[pri:0, instance:org.openapitools.codegen.cpptiny.CppTinyServiceServiceTest@aeb555e]" name="intTypeIsLong" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" description="sets example value" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intTypeIsLong -->
      </class> <!-- org.openapitools.codegen.cpptiny.CppTinyServiceServiceTest -->
      <class name="org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest">
        <test-method status="PASS" signature="containsESMTSConfigFileInCaseOfES6AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="containsESMTSConfigFileInCaseOfES6AndNPM" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containsESMTSConfigFileInCaseOfES6AndNPM -->
        <test-method status="PASS" signature="testToEnumVarNameCamelCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameCamelCaseNamingType" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumVarNameCamelCaseNamingType -->
        <test-method status="PASS" signature="doesNotContainESMTSConfigFileInCaseOfES5AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="doesNotContainESMTSConfigFileInCaseOfES5AndNPM" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doesNotContainESMTSConfigFileInCaseOfES5AndNPM -->
        <test-method status="PASS" signature="testToEnumVarNamePascalCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNamePascalCaseNamingType" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumVarNamePascalCaseNamingType -->
        <test-method status="PASS" signature="testToEnumVarNameSnakeCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameSnakeCaseNamingType" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumVarNameSnakeCaseNamingType -->
        <test-method status="PASS" signature="testToEnumVarNameUpperCaseNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameUpperCaseNamingType" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumVarNameUpperCaseNamingType -->
        <test-method status="PASS" signature="testToEnumVarNameOriginalNamingType()[pri:0, instance:org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest@4077b71e]" name="testToEnumVarNameOriginalNamingType" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumVarNameOriginalNamingType -->
      </class> <!-- org.openapitools.codegen.typescript.axios.TypeScriptAxiosClientCodegenTest -->
      <class name="org.openapitools.codegen.ruby.RubyClientCodegenTest">
        <test-method status="PASS" signature="allOfCompositionTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="allOfCompositionTest" duration-ms="10" started-at="2023-04-09T10:14:33 UTC" description="test allOf composition" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allOfCompositionTest -->
        <test-method status="PASS" signature="allOfDuplicatedPropertiesTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="allOfDuplicatedPropertiesTest" duration-ms="6" started-at="2023-04-09T10:14:33 UTC" description="test allOf with only allOf and duplicated properties(OAS3)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allOfDuplicatedPropertiesTest -->
        <test-method status="PASS" signature="allOfMappingDuplicatedPropertiesTestForAdult()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="allOfMappingDuplicatedPropertiesTestForAdult" duration-ms="10" started-at="2023-04-09T10:14:33 UTC" description="test allOf with discriminator and duplicated properties(OAS3) for Adult model" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allOfMappingDuplicatedPropertiesTestForAdult -->
        <test-method status="PASS" signature="allOfMappingDuplicatedPropertiesTestForChild()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="allOfMappingDuplicatedPropertiesTestForChild" duration-ms="13" started-at="2023-04-09T10:14:33 UTC" description="test allOf with discriminator and duplicated properties(OAS3) for Child model" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allOfMappingDuplicatedPropertiesTestForChild -->
        <test-method status="PASS" signature="allOfTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="allOfTest" duration-ms="7" started-at="2023-04-09T10:14:33 UTC" description="test allOf (OAS3)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allOfTest -->
        <test-method status="PASS" signature="allOfTestLegacy()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="allOfTestLegacy" duration-ms="5" started-at="2023-04-09T10:14:33 UTC" description="test allOf (OAS3)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allOfTestLegacy -->
        <test-method status="PASS" signature="anyOfTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="anyOfTest" duration-ms="4" started-at="2023-04-09T10:14:33 UTC" description="test anyOf (OAS3)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- anyOfTest -->
        <test-method status="PASS" signature="bodyParameterTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="bodyParameterTest" duration-ms="74" started-at="2023-04-09T10:14:33 UTC" description="test example value for body parameter" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bodyParameterTest -->
        <test-method status="PASS" signature="enumParameterTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="enumParameterTest" duration-ms="85" started-at="2023-04-09T10:14:33 UTC" description="verify enum parameters (query, form, header)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumParameterTest -->
        <test-method status="PASS" signature="exampleRegexParameterValidationOAS3Test()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="exampleRegexParameterValidationOAS3Test" duration-ms="7" started-at="2023-04-09T10:14:33 UTC" description="test regex patterns" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleRegexParameterValidationOAS3Test -->
        <test-method status="PASS" signature="exampleStringFromExampleParameterOAS2Test()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="exampleStringFromExampleParameterOAS2Test" duration-ms="32" started-at="2023-04-09T10:14:33 UTC" description="test example string imported from x-example parameter (OAS2)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleStringFromExampleParameterOAS2Test -->
        <test-method status="PASS" signature="exampleStringFromXExampleParameterOAS3Test()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="exampleStringFromXExampleParameterOAS3Test" duration-ms="31" started-at="2023-04-09T10:14:33 UTC" description="test example string imported from example in schema (OAS3)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleStringFromXExampleParameterOAS3Test -->
        <test-method status="PASS" signature="nullableParameterOAS2Test()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="nullableParameterOAS2Test" duration-ms="26" started-at="2023-04-09T10:14:33 UTC" description="test nullable for parameters (OAS2)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullableParameterOAS2Test -->
        <test-method status="PASS" signature="nullableParameterOAS3Test()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="nullableParameterOAS3Test" duration-ms="33" started-at="2023-04-09T10:14:33 UTC" description="test nullable for parameters (OAS3)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullableParameterOAS3Test -->
        <test-method status="PASS" signature="nullablePropertyTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="nullablePropertyTest" duration-ms="34" started-at="2023-04-09T10:14:33 UTC" description="test nullable for properties" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullablePropertyTest -->
        <test-method status="PASS" signature="oneOfTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="oneOfTest" duration-ms="7" started-at="2023-04-09T10:14:33 UTC" description="test oneOf (OAS3)" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneOfTest -->
        <test-method status="PASS" signature="propertiesWithoutNullableTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="propertiesWithoutNullableTest" duration-ms="33" started-at="2023-04-09T10:14:33 UTC" description="test properties without nullable" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertiesWithoutNullableTest -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testBooleanDefaultValue()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="testBooleanDefaultValue" duration-ms="76" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanDefaultValue -->
        <test-method status="PASS" signature="testGenerateRubyClientWithHtmlEntity()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="testGenerateRubyClientWithHtmlEntity" duration-ms="62" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateRubyClientWithHtmlEntity -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="testSettersForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="typeMappingTest()[pri:0, instance:org.openapitools.codegen.ruby.RubyClientCodegenTest@79ad1774]" name="typeMappingTest" duration-ms="7" started-at="2023-04-09T10:14:33 UTC" description="test type mapping to handle special format, e.g. string+special" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeMappingTest -->
      </class> <!-- org.openapitools.codegen.ruby.RubyClientCodegenTest -->
      <class name="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientOptionsTest@90b779d]" name="checkOptionsHelp" duration-ms="4" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientOptionsTest@90b779d]" name="checkOptionsProcessing" duration-ms="16" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientOptionsTest -->
      <class name="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest">
        <test-method status="PASS" signature="arrayModelAdditionalPropertiesArrayTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesArrayTest" duration-ms="7" started-at="2023-04-09T10:14:41 UTC" description="convert an array additional properties model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelAdditionalPropertiesArrayTest -->
        <test-method status="PASS" signature="arrayModelAdditionalPropertiesComplexTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesComplexTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a complex additional properties model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelAdditionalPropertiesComplexTest -->
        <test-method status="PASS" signature="arrayModelAdditionalPropertiesStringTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelAdditionalPropertiesStringTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a string additional properties model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelAdditionalPropertiesStringTest -->
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert an array model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="defaultFromModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="defaultFromModelTest" duration-ms="25" started-at="2023-04-09T10:14:41 UTC" description="prepend imports with ./ by default" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultFromModelTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a map model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mappedFromModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="mappedFromModelTest" duration-ms="24" started-at="2023-04-09T10:14:41 UTC" description="use mapped imports for type" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mappedFromModelTest -->
        <test-method status="PASS" signature="simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="simpleModelDefaultValuesTest" duration-ms="6" started-at="2023-04-09T10:14:41 UTC" description="convert and check default values for a simple TypeScript Angular model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelDefaultValuesTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest@27cd312c]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a simple TypeScript Node model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeModelTest -->
      <class name="org.openapitools.codegen.python.PythonPriorClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientOptionsTest@2c11f4f6]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientOptionsTest@2c11f4f6]" name="checkOptionsProcessing" duration-ms="3" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.python.PythonPriorClientOptionsTest -->
      <class name="org.openapitools.codegen.TemplateManagerTest">
        <test-method status="PASS" signature="getTemplateReaderThrowsForEscapingTemplates()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="getTemplateReaderThrowsForEscapingTemplates" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Template location must be constrained to template directory.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Template location must be constrained to template directory.
at org.openapitools.codegen.TemplateManager.getInputStream(TemplateManager.java:143)
at org.openapitools.codegen.TemplateManager.getTemplateReader(TemplateManager.java:130)
at org.openapitools.codegen.TemplateManagerTest.getTemplateReaderThrowsForEscapingTemplates(TemplateManagerTest.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplateReaderThrowsForEscapingTemplates -->
        <test-method status="PASS" signature="getTemplateReader()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="getTemplateReader" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplateReader -->
        <test-method status="PASS" signature="loadTemplateContents()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="loadTemplateContents" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadTemplateContents -->
        <test-method status="PASS" signature="loadTemplateContentsThrowsForEscapingTemplates()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="loadTemplateContentsThrowsForEscapingTemplates" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Template location must be constrained to template directory.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Template location must be constrained to template directory.
at org.openapitools.codegen.TemplateManager.getFullTemplateFile(TemplateManager.java:58)
at org.openapitools.codegen.TemplateManager.getFullTemplateContents(TemplateManager.java:72)
at org.openapitools.codegen.TemplateManagerTest.loadTemplateContentsThrowsForEscapingTemplates(TemplateManagerTest.java:55)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadTemplateContentsThrowsForEscapingTemplates -->
        <test-method status="PASS" signature="minimalUpdateOnlyWritesChangedContents()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="minimalUpdateOnlyWritesChangedContents" duration-ms="1003" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minimalUpdateOnlyWritesChangedContents -->
        <test-method status="PASS" signature="loadTemplatePath()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="loadTemplatePath" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadTemplatePath -->
        <test-method status="PASS" signature="overwritesWhenSkipOverwriteFalse()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="overwritesWhenSkipOverwriteFalse" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overwritesWhenSkipOverwriteFalse -->
        <test-method status="PASS" signature="skipOverwriteViaOption()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="skipOverwriteViaOption" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipOverwriteViaOption -->
        <test-method status="PASS" signature="readTemplate()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="readTemplate" duration-ms="0" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readTemplate -->
        <test-method status="PASS" signature="writeViaHandlebarsAdapter()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="writeViaHandlebarsAdapter" duration-ms="2" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeViaHandlebarsAdapter -->
        <test-method status="PASS" signature="writeViaMustacheAdapter()[pri:0, instance:org.openapitools.codegen.TemplateManagerTest@782168b7]" name="writeViaMustacheAdapter" duration-ms="0" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeViaMustacheAdapter -->
      </class> <!-- org.openapitools.codegen.TemplateManagerTest -->
      <class name="org.openapitools.codegen.jetbrains.http.client.JetbrainsHttpClientClientCodegenTest">
        <test-method status="PASS" signature="shouldSucceed()[pri:0, instance:org.openapitools.codegen.jetbrains.http.client.JetbrainsHttpClientClientCodegenTest@571850c]" name="shouldSucceed" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSucceed -->
      </class> <!-- org.openapitools.codegen.jetbrains.http.client.JetbrainsHttpClientClientCodegenTest -->
      <class name="org.openapitools.codegen.crystal.CrystalClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.crystal.CrystalClientCodegenTest@460dc324]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testBooleanDefaultValue()[pri:0, instance:org.openapitools.codegen.crystal.CrystalClientCodegenTest@460dc324]" name="testBooleanDefaultValue" duration-ms="27" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanDefaultValue -->
        <test-method status="PASS" signature="testGenerateCrystalClientWithHtmlEntity()[pri:0, instance:org.openapitools.codegen.crystal.CrystalClientCodegenTest@460dc324]" name="testGenerateCrystalClientWithHtmlEntity" duration-ms="22" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateCrystalClientWithHtmlEntity -->
        <test-method status="PASS" signature="testSanitizeModelName()[pri:0, instance:org.openapitools.codegen.crystal.CrystalClientCodegenTest@460dc324]" name="testSanitizeModelName" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSanitizeModelName -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.crystal.CrystalClientCodegenTest@460dc324]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.crystal.CrystalClientCodegenTest@460dc324]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.crystal.CrystalClientCodegenTest -->
      <class name="org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPClientTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPClientTest@476ec9d0]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="buildPetstore()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPClientTest@476ec9d0]" name="buildPetstore" duration-ms="18" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:129)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonClientBase.buildPetstore(FunctionalHelidonClientBase.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPetstore -->
        <test-method status="SKIP" signature="buildPetstoreNoMultipart()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPClientTest@476ec9d0]" name="buildPetstoreNoMultipart" duration-ms="29" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:129)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonClientBase.buildPetstoreNoMultipart(FunctionalHelidonClientBase.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPetstoreNoMultipart -->
        <test-method status="SKIP" signature="buildPetstoreWithFakeEndpoints()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPClientTest@476ec9d0]" name="buildPetstoreWithFakeEndpoints" duration-ms="48" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:129)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonClientBase.buildPetstoreWithFakeEndpoints(FunctionalHelidonClientBase.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPetstoreWithFakeEndpoints -->
        <test-method status="SKIP" signature="verifyFullProjectSemantics()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPClientTest@476ec9d0]" name="verifyFullProjectSemantics" duration-ms="25" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonClientBase.verifyFullProjectSemantics(FunctionalHelidonClientBase.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFullProjectSemantics -->
      </class> <!-- org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPClientTest -->
      <class name="org.openapitools.codegen.serializer.SerializerUtilsTest">
        <test-method status="PASS" signature="testToJsonStringCompleteExample()[pri:0, instance:org.openapitools.codegen.serializer.SerializerUtilsTest@4947b8a7]" name="testToJsonStringCompleteExample" duration-ms="3" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToJsonStringCompleteExample -->
        <test-method status="PASS" signature="testToYamlStringCompleteExample()[pri:0, instance:org.openapitools.codegen.serializer.SerializerUtilsTest@4947b8a7]" name="testToYamlStringCompleteExample" duration-ms="2" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToYamlStringCompleteExample -->
        <test-method status="PASS" signature="testToJsonStringMinimalExample()[pri:0, instance:org.openapitools.codegen.serializer.SerializerUtilsTest@4947b8a7]" name="testToJsonStringMinimalExample" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToJsonStringMinimalExample -->
        <test-method status="PASS" signature="testToYamlStringMinimalExample()[pri:0, instance:org.openapitools.codegen.serializer.SerializerUtilsTest@4947b8a7]" name="testToYamlStringMinimalExample" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToYamlStringMinimalExample -->
      </class> <!-- org.openapitools.codegen.serializer.SerializerUtilsTest -->
      <class name="org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest@a64e035]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="pascalCaseEscapeParamTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest@a64e035]" name="pascalCaseEscapeParamTest" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pascalCaseEscapeParamTest -->
        <test-method status="PASS" signature="pascalCaseReservedWordTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest@a64e035]" name="pascalCaseReservedWordTest" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pascalCaseReservedWordTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest@a64e035]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest@a64e035]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="pascalCaseTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest@a64e035]" name="pascalCaseTest" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pascalCaseTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest@a64e035]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="pascalCaseSpaceTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest@a64e035]" name="pascalCaseSpaceTest" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pascalCaseSpaceTest -->
      </class> <!-- org.openapitools.codegen.templating.mustache.PascalCaseLambdaTest -->
      <class name="org.openapitools.codegen.bash.BashTest">
        <test-method status="PASS" signature="escapeTextTest()[pri:0, instance:org.openapitools.codegen.bash.BashTest@257da215]" name="escapeTextTest" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" description="test Bash client codegen escapeText method" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escapeTextTest -->
        <test-method status="PASS" signature="escapeReservedWordTest()[pri:0, instance:org.openapitools.codegen.bash.BashTest@257da215]" name="escapeReservedWordTest" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" description="test Bash client codegen escapeReservedWord method" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escapeReservedWordTest -->
        <test-method status="PASS" signature="escapeUnsafeCharactersTest()[pri:0, instance:org.openapitools.codegen.bash.BashTest@257da215]" name="escapeUnsafeCharactersTest" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" description="test Bash client codegen escapeUnsafeCharacters method" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escapeUnsafeCharactersTest -->
        <test-method status="PASS" signature="petstoreOperationTest()[pri:0, instance:org.openapitools.codegen.bash.BashTest@257da215]" name="petstoreOperationTest" duration-ms="9" started-at="2023-04-09T10:15:07 UTC" description="test basic petstore operation with Bash extensions" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- petstoreOperationTest -->
        <test-method status="PASS" signature="petstoreParameterExampleTest()[pri:0, instance:org.openapitools.codegen.bash.BashTest@257da215]" name="petstoreParameterExampleTest" duration-ms="7" started-at="2023-04-09T10:15:07 UTC" description="test basic petstore operation with example body" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- petstoreParameterExampleTest -->
      </class> <!-- org.openapitools.codegen.bash.BashTest -->
      <class name="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest">
        <test-method status="PASS" signature="testModelFileSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testModelFileSuffix" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelFileSuffix -->
        <test-method status="PASS" signature="testOperationIdParser()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testOperationIdParser" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOperationIdParser -->
        <test-method status="PASS" signature="testRemovePrefixSuffix()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testRemovePrefixSuffix" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemovePrefixSuffix -->
        <test-method status="PASS" signature="testSchema()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testSchema" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSchema -->
        <test-method status="PASS" signature="testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testWithoutSnapshotVersion" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutSnapshotVersion -->
        <test-method status="PASS" signature="testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest@d92dec3]" name="testSnapshotVersion" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSnapshotVersion -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsClientCodegenTest -->
      <class name="org.openapitools.codegen.scala.SttpStringPropertyTest">
        <test-method status="PASS" signature="shouldUseDefaultValueIfAdditionalPropertiesAreEmpty()[pri:0, instance:org.openapitools.codegen.scala.SttpStringPropertyTest@22cb8e5f]" name="shouldUseDefaultValueIfAdditionalPropertiesAreEmpty" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseDefaultValueIfAdditionalPropertiesAreEmpty -->
        <test-method status="PASS" signature="shouldUseGivenValueIfProvided()[pri:0, instance:org.openapitools.codegen.scala.SttpStringPropertyTest@22cb8e5f]" name="shouldUseGivenValueIfProvided" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseGivenValueIfProvided -->
      </class> <!-- org.openapitools.codegen.scala.SttpStringPropertyTest -->
      <class name="org.openapitools.codegen.python.PythonLegacyClientCodegenTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert an array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="complexMapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="complexPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="mapModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="mapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="modelTest" duration-ms="31" started-at="2023-04-09T10:14:42 UTC" description="convert a python model with dots" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a simple java model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="testEnumNull()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="testEnumNull" duration-ms="3" started-at="2023-04-09T10:14:42 UTC" description="test enum null/nullable patterns" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumNull -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testGeneratedExampleValues()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="testGeneratedExampleValues" duration-ms="7" started-at="2023-04-09T10:14:42 UTC" description="test generated example values for string properties" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedExampleValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testRegularExpressionOpenAPISchemaVersion3()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="testRegularExpressionOpenAPISchemaVersion3" duration-ms="6" started-at="2023-04-09T10:14:42 UTC" description="test regex patterns" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegularExpressionOpenAPISchemaVersion3 -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testSingleQuotes()[pri:0, instance:org.openapitools.codegen.python.PythonLegacyClientCodegenTest@37784745]" name="testSingleQuotes" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test single quotes escape" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleQuotes -->
      </class> <!-- org.openapitools.codegen.python.PythonLegacyClientCodegenTest -->
      <class name="org.openapitools.codegen.scala.SttpJsonLibraryPropertyTest">
        <test-method status="PASS" signature="shouldUseJson4sByDefault()[pri:0, instance:org.openapitools.codegen.scala.SttpJsonLibraryPropertyTest@45753c22]" name="shouldUseJson4sByDefault" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseJson4sByDefault -->
        <test-method status="PASS" signature="shouldUseCirceIfExplicitlyAskTo()[pri:0, instance:org.openapitools.codegen.scala.SttpJsonLibraryPropertyTest@45753c22]" name="shouldUseCirceIfExplicitlyAskTo" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseCirceIfExplicitlyAskTo -->
        <test-method status="PASS" signature="shouldUseJson4sIfExplicitlyAskTo()[pri:0, instance:org.openapitools.codegen.scala.SttpJsonLibraryPropertyTest@45753c22]" name="shouldUseJson4sIfExplicitlyAskTo" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldUseJson4sIfExplicitlyAskTo -->
      </class> <!-- org.openapitools.codegen.scala.SttpJsonLibraryPropertyTest -->
      <class name="org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="setUp" is-config="true" duration-ms="42" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFileGeneration()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testFileGeneration" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="Ensure that all files have been correctly generated" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileGeneration -->
        <test-method status="PASS" signature="testIfBindingOperationExists()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testIfBindingOperationExists" duration-ms="5" started-at="2023-04-09T10:15:18 UTC" description="Check if portType tag and portType operation has been generated" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfBindingOperationExists -->
        <test-method status="PASS" signature="testIfComplexTypeModelExists()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testIfComplexTypeModelExists" duration-ms="2" started-at="2023-04-09T10:15:18 UTC" description="Check if complexType model has been created for an openapi model schema" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfComplexTypeModelExists -->
        <test-method status="PASS" signature="testIfElementTagsExist()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testIfElementTagsExist" duration-ms="5" started-at="2023-04-09T10:15:18 UTC" description="Check if element tags has been created for an operation " finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfElementTagsExist -->
        <test-method status="PASS" signature="testIfInputAndResponseMessageExist()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testIfInputAndResponseMessageExist" duration-ms="5" started-at="2023-04-09T10:15:18 UTC" description="Check if complexType input- and output-message has been created for an operation " finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfInputAndResponseMessageExist -->
        <test-method status="PASS" signature="testIfMessageTagsAndContentExist()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testIfMessageTagsAndContentExist" duration-ms="3" started-at="2023-04-09T10:15:18 UTC" description="Check if message and part tags has been created for an operation " finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMessageTagsAndContentExist -->
        <test-method status="PASS" signature="testIfPortTypeOperationExists()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testIfPortTypeOperationExists" duration-ms="4" started-at="2023-04-09T10:15:18 UTC" description="Check if portType tag and portType operation has been generated" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfPortTypeOperationExists -->
        <test-method status="PASS" signature="testIfRequestMessageMinimumExists()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testIfRequestMessageMinimumExists" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="Check if complexType RequestMessage with minimum and maximum restriction has been created for an operation " finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfRequestMessageMinimumExists -->
        <test-method status="PASS" signature="testLowerCaseStringExceptFirstLetter()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testLowerCaseStringExceptFirstLetter" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="Ensure that passed strings are processed correctly by this method" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLowerCaseStringExceptFirstLetter -->
        <test-method status="PASS" signature="testOpenapiDescriptionWasNotProvided()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testOpenapiDescriptionWasNotProvided" duration-ms="4" started-at="2023-04-09T10:15:18 UTC" description="Ensure that default description is set if it doesn&#039;t exist" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenapiDescriptionWasNotProvided -->
        <test-method status="PASS" signature="testOperationIdGeneration()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="testOperationIdGeneration" duration-ms="2" started-at="2023-04-09T10:15:18 UTC" description="ensure that the operationid has been generated correctly" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOperationIdGeneration -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest@3e28af44]" name="cleanUp" is-config="true" duration-ms="3" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.openapitools.codegen.wsdl.WsdlSchemaCodegenTest -->
      <class name="org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="arrayModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert an array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="enumArrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="enumArrayModelTest" duration-ms="53" started-at="2023-04-09T10:14:42 UTC" description="test enum array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumArrayModelTest -->
        <test-method status="PASS" signature="enumModelValueTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="enumModelValueTest" duration-ms="53" started-at="2023-04-09T10:14:42 UTC" description="test enum model for values (numeric, string, etc)" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enumModelValueTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="mapModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelDefaultValuesTest" duration-ms="2" started-at="2023-04-09T10:14:42 UTC" description="convert and check default values for a simple TypeScript Angular model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelDefaultValuesTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a simple TypeScript Angular model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="simpleModelWithStringDateTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="simpleModelWithStringDateTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a simple TypeScript Angular model; overwrite date/DateTime type mapping" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelWithStringDateTest -->
        <test-method status="PASS" signature="testNestedNullableSchemas()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNestedNullableSchemas" duration-ms="4" started-at="2023-04-09T10:14:42 UTC" description="Don&#039;t generate new schemas for nullable references" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedNullableSchemas -->
        <test-method status="PASS" signature="testNestedReadonlySchemas()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNestedReadonlySchemas" duration-ms="4" started-at="2023-04-09T10:14:42 UTC" description="Don&#039;t generate new schemas for readonly references" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedReadonlySchemas -->
        <test-method status="PASS" signature="testNullSafeAdditionalProps()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testNullSafeAdditionalProps" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="Add null safe additional property indexer when enabled" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullSafeAdditionalProps -->
        <test-method status="PASS" signature="testWithoutNullSafeAdditionalProps()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest@4675f5b0]" name="testWithoutNullSafeAdditionalProps" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="Don&#039;t add null safe additional property indexer by default" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutNullSafeAdditionalProps -->
      </class> <!-- org.openapitools.codegen.typescript.fetch.TypeScriptFetchModelTest -->
      <class name="org.openapitools.codegen.java.JavaClientCodegenTest">
        <test-method status="PASS" signature="arraysInRequestBody()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="arraysInRequestBody" duration-ms="2" started-at="2023-04-09T10:14:43 UTC" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arraysInRequestBody -->
        <test-method status="PASS" signature="escapeName()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="escapeName" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escapeName -->
        <test-method status="PASS" signature="nullValuesInComposedSchema()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="nullValuesInComposedSchema" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullValuesInComposedSchema -->
        <test-method status="PASS" signature="shouldGenerateBlockingAndNoBlockingOperationsForWebClient()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="shouldGenerateBlockingAndNoBlockingOperationsForWebClient" duration-ms="668" started-at="2023-04-09T10:14:43 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGenerateBlockingAndNoBlockingOperationsForWebClient -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testAllowModelWithNoProperties()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testAllowModelWithNoProperties" duration-ms="148" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllowModelWithNoProperties -->
        <test-method status="PASS" signature="testAnyType()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testAnyType" duration-ms="6" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnyType -->
        <test-method status="PASS" signature="testAuthorizationScopeValues_Issue392()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testAuthorizationScopeValues_Issue392" duration-ms="6" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAuthorizationScopeValues_Issue392 -->
        <test-method status="PASS" signature="testAuthorizationScopeValues_Issue6733()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testAuthorizationScopeValues_Issue6733" duration-ms="33" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAuthorizationScopeValues_Issue6733 -->
        <test-method status="PASS" signature="testAuthorizationsMethodsSizeWhenFiltered()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testAuthorizationsMethodsSizeWhenFiltered" duration-ms="8" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAuthorizationsMethodsSizeWhenFiltered -->
        <test-method status="PASS" signature="testBearerAuth()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testBearerAuth" duration-ms="3" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBearerAuth -->
        <test-method status="PASS" signature="testCustomMethodParamsAreCamelizedWhenUsingFeign()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testCustomMethodParamsAreCamelizedWhenUsingFeign" duration-ms="55" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomMethodParamsAreCamelizedWhenUsingFeign -->
        <test-method status="PASS" signature="testDefaultMicroprofileRestClientVersion()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testDefaultMicroprofileRestClientVersion" duration-ms="139" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultMicroprofileRestClientVersion -->
        <test-method status="PASS" signature="testDiscriminatorWithMappingIssue14731()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testDiscriminatorWithMappingIssue14731" duration-ms="74" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:44 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiscriminatorWithMappingIssue14731 -->
        <test-method status="PASS" signature="testDiscriminatorWithoutMappingIssue14731()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testDiscriminatorWithoutMappingIssue14731" duration-ms="90" started-at="2023-04-09T10:14:44 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiscriminatorWithoutMappingIssue14731 -->
        <test-method status="PASS" signature="testExtraAnnotationsApache()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsApache" duration-ms="116" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsApache -->
        <test-method status="PASS" signature="testExtraAnnotationsFeign()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsFeign" duration-ms="108" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsFeign -->
        <test-method status="PASS" signature="testExtraAnnotationsGoogleApiClient()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsGoogleApiClient" duration-ms="108" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsGoogleApiClient -->
        <test-method status="PASS" signature="testExtraAnnotationsJersey1()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsJersey1" duration-ms="113" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsJersey1 -->
        <test-method status="PASS" signature="testExtraAnnotationsJersey2()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsJersey2" duration-ms="107" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsJersey2 -->
        <test-method status="PASS" signature="testExtraAnnotationsMicroprofile()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsMicroprofile" duration-ms="68" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsMicroprofile -->
        <test-method status="PASS" signature="testExtraAnnotationsNative()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsNative" duration-ms="155" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsNative -->
        <test-method status="PASS" signature="testExtraAnnotationsOKHttpGSON()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsOKHttpGSON" duration-ms="150" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsOKHttpGSON -->
        <test-method status="PASS" signature="testExtraAnnotationsRestAssured()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsRestAssured" duration-ms="104" started-at="2023-04-09T10:14:45 UTC" finished-at="2023-04-09T10:14:46 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsRestAssured -->
        <test-method status="PASS" signature="testExtraAnnotationsRestEasy()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsRestEasy" duration-ms="145" started-at="2023-04-09T10:14:46 UTC" finished-at="2023-04-09T10:14:46 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsRestEasy -->
        <test-method status="PASS" signature="testExtraAnnotationsRestTemplate()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsRestTemplate" duration-ms="147" started-at="2023-04-09T10:14:46 UTC" finished-at="2023-04-09T10:14:46 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsRestTemplate -->
        <test-method status="PASS" signature="testExtraAnnotationsRetrofit2()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsRetrofit2" duration-ms="125" started-at="2023-04-09T10:14:46 UTC" finished-at="2023-04-09T10:14:46 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsRetrofit2 -->
        <test-method status="PASS" signature="testExtraAnnotationsVertx()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsVertx" duration-ms="150" started-at="2023-04-09T10:14:46 UTC" finished-at="2023-04-09T10:14:46 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsVertx -->
        <test-method status="PASS" signature="testExtraAnnotationsWebClient()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testExtraAnnotationsWebClient" duration-ms="186" started-at="2023-04-09T10:14:46 UTC" finished-at="2023-04-09T10:14:46 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotationsWebClient -->
        <test-method status="PASS" signature="testForJavaApacheHttpClientJsonSubtype()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testForJavaApacheHttpClientJsonSubtype" duration-ms="123" started-at="2023-04-09T10:14:46 UTC" finished-at="2023-04-09T10:14:46 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForJavaApacheHttpClientJsonSubtype -->
        <test-method status="PASS" signature="testForJavaApacheHttpClientOverrideSetter()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testForJavaApacheHttpClientOverrideSetter" duration-ms="171" started-at="2023-04-09T10:14:46 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForJavaApacheHttpClientOverrideSetter -->
        <test-method status="PASS" signature="testForJavaNativeClientOverrideSetter()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testForJavaNativeClientOverrideSetter" duration-ms="137" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForJavaNativeClientOverrideSetter -->
        <test-method status="PASS" signature="testForJavaNativeJsonSubtype()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testForJavaNativeJsonSubtype" duration-ms="92" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForJavaNativeJsonSubtype -->
        <test-method status="PASS" signature="testFreeFormObjects()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testFreeFormObjects" duration-ms="4" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFreeFormObjects -->
        <test-method status="PASS" signature="testGeneratePing()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testGeneratePing" duration-ms="74" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePing -->
        <test-method status="PASS" signature="testGeneratePingSomeObj()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testGeneratePingSomeObj" duration-ms="119" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePingSomeObj -->
        <test-method status="PASS" signature="testGetSchemaTypeWithComposedSchemaWithAllOf()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testGetSchemaTypeWithComposedSchemaWithAllOf" duration-ms="3" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSchemaTypeWithComposedSchemaWithAllOf -->
        <test-method status="PASS" signature="testIsOverriddenProperty()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testIsOverriddenProperty" duration-ms="6" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsOverriddenProperty -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testJdkHttpAsyncClient()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testJdkHttpAsyncClient" duration-ms="84" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJdkHttpAsyncClient -->
        <test-method status="PASS" signature="testJdkHttpClient()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testJdkHttpClient" duration-ms="76" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJdkHttpClient -->
        <test-method status="PASS" signature="testJdkHttpClientWithAndWithoutDiscriminator()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testJdkHttpClientWithAndWithoutDiscriminator" duration-ms="841" started-at="2023-04-09T10:14:47 UTC" finished-at="2023-04-09T10:14:48 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJdkHttpClientWithAndWithoutDiscriminator -->
        <test-method status="PASS" signature="testJdkHttpClientWithAndWithoutParentExtension()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testJdkHttpClientWithAndWithoutParentExtension" duration-ms="129" started-at="2023-04-09T10:14:48 UTC" finished-at="2023-04-09T10:14:48 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJdkHttpClientWithAndWithoutParentExtension -->
        <test-method status="PASS" signature="testMicroprofileGenerateCorrectJsonbCreator_issue12622()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testMicroprofileGenerateCorrectJsonbCreator_issue12622" duration-ms="29" started-at="2023-04-09T10:14:48 UTC" finished-at="2023-04-09T10:14:48 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMicroprofileGenerateCorrectJsonbCreator_issue12622 -->
        <test-method status="PASS" signature="testMicroprofileRestClientIncorrectVersion()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testMicroprofileRestClientIncorrectVersion" duration-ms="22" started-at="2023-04-09T10:14:48 UTC" finished-at="2023-04-09T10:14:48 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Version incorrectVersion of MicroProfile Rest Client is not supported or incorrect. Supported versions are 1.4.1, 2.0, 3.0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Version incorrectVersion of MicroProfile Rest Client is not supported or incorrect. Supported versions are 1.4.1, 2.0, 3.0
at org.openapitools.codegen.languages.JavaClientCodegen.processOpts(JavaClientCodegen.java:352)
at org.openapitools.codegen.DefaultGenerator.configureGeneratorProperties(DefaultGenerator.java:256)
at org.openapitools.codegen.DefaultGenerator.generate(DefaultGenerator.java:915)
at org.openapitools.codegen.java.JavaClientCodegenTest.testMicroprofileRestClientIncorrectVersion(JavaClientCodegenTest.java:1510)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMicroprofileRestClientIncorrectVersion -->
        <test-method status="PASS" signature="testMicroprofileRestClientVersion_1_4_1()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testMicroprofileRestClientVersion_1_4_1" duration-ms="102" started-at="2023-04-09T10:14:48 UTC" finished-at="2023-04-09T10:14:48 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMicroprofileRestClientVersion_1_4_1 -->
        <test-method status="PASS" signature="testMicroprofileRestClientVersion_3_0()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testMicroprofileRestClientVersion_3_0" duration-ms="140" started-at="2023-04-09T10:14:48 UTC" finished-at="2023-04-09T10:14:48 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMicroprofileRestClientVersion_3_0 -->
        <test-method status="PASS" signature="testNativeClientExplodedQueryParamObject()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testNativeClientExplodedQueryParamObject" duration-ms="75" started-at="2023-04-09T10:14:48 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNativeClientExplodedQueryParamObject -->
        <test-method status="PASS" signature="testNativeClientExplodedQueryParamWithArrayProperty()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testNativeClientExplodedQueryParamWithArrayProperty" duration-ms="48" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNativeClientExplodedQueryParamWithArrayProperty -->
        <test-method status="PASS" signature="testNativeClientWhiteSpacePathParamEncoding()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testNativeClientWhiteSpacePathParamEncoding" duration-ms="60" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNativeClientWhiteSpacePathParamEncoding -->
        <test-method status="PASS" signature="testNotDuplicateOauth2FlowsScopes()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testNotDuplicateOauth2FlowsScopes" duration-ms="4" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotDuplicateOauth2FlowsScopes -->
        <test-method status="PASS" signature="testPackageNamesSetInvokerDerivedFromApi()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testPackageNamesSetInvokerDerivedFromApi" duration-ms="1" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPackageNamesSetInvokerDerivedFromApi -->
        <test-method status="PASS" signature="testParametersAreCorrectlyOrderedWhenUsingRetrofit()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testParametersAreCorrectlyOrderedWhenUsingRetrofit" duration-ms="1" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParametersAreCorrectlyOrderedWhenUsingRetrofit -->
        <test-method status="PASS" signature="testPackageNamesSetInvokerDerivedFromModel()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testPackageNamesSetInvokerDerivedFromModel" duration-ms="0" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPackageNamesSetInvokerDerivedFromModel -->
        <test-method status="PASS" signature="testReferencedHeader()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testReferencedHeader" duration-ms="2" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferencedHeader -->
        <test-method status="PASS" signature="testReferencedHeader2()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testReferencedHeader2" duration-ms="44" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferencedHeader2 -->
        <test-method status="PASS" signature="testRestTemplateResponseTypeWithUseAbstractionForFiles()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testRestTemplateResponseTypeWithUseAbstractionForFiles" duration-ms="47" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestTemplateResponseTypeWithUseAbstractionForFiles -->
        <test-method status="PASS" signature="testRestTemplateWithFreeFormInQueryParameters()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testRestTemplateWithFreeFormInQueryParameters" duration-ms="23" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestTemplateWithFreeFormInQueryParameters -->
        <test-method status="PASS" signature="testSchemaMapping()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testSchemaMapping" duration-ms="21" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSchemaMapping -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testSettersForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testWebClientJsonCreatorWithNullable_issue12790()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testWebClientJsonCreatorWithNullable_issue12790" duration-ms="45" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWebClientJsonCreatorWithNullable_issue12790 -->
        <test-method status="PASS" signature="testWebClientWithFreeFormInQueryParameters()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="testWebClientWithFreeFormInQueryParameters" duration-ms="52" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWebClientWithFreeFormInQueryParameters -->
        <test-method status="PASS" signature="updateCodegenPropertyEnum()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="updateCodegenPropertyEnum" duration-ms="0" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCodegenPropertyEnum -->
        <test-method status="PASS" signature="updateCodegenPropertyEnumWithCustomNames()[pri:0, instance:org.openapitools.codegen.java.JavaClientCodegenTest@1d12b024]" name="updateCodegenPropertyEnumWithCustomNames" duration-ms="1" started-at="2023-04-09T10:14:49 UTC" finished-at="2023-04-09T10:14:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCodegenPropertyEnumWithCustomNames -->
      </class> <!-- org.openapitools.codegen.java.JavaClientCodegenTest -->
      <class name="org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest">
        <test-method status="PASS" signature="testWithApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithApiVersion" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" description="tests if API version specification is used if no version is provided in additional properties" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithApiVersion -->
        <test-method status="PASS" signature="testWithNpmVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithNpmVersion" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" description="tests if npmVersion additional property is used" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNpmVersion -->
        <test-method status="PASS" signature="testWithoutApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest@398956e9]" name="testWithoutApiVersion" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" description="tests if default version is used when neither OpenAPI version nor npmVersion additional property has been provided" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutApiVersion -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptnestjs.TypescriptNestjsApiVersionTest -->
      <class name="org.openapitools.codegen.perl.PerlClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.perl.PerlClientOptionsTest@25c548d1]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.perl.PerlClientOptionsTest@25c548d1]" name="checkOptionsProcessing" duration-ms="3" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.perl.PerlClientOptionsTest -->
      <class name="org.openapitools.codegen.go.GoModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert an array model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListProperty()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="complexListProperty" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListProperty -->
        <test-method status="PASS" signature="complexMapProperty()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="complexMapProperty" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapProperty -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="filePropertyTest()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="filePropertyTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="convert file type and file schema models" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filePropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a map model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="mapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[/sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[\sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample__name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" description="convert a simple Go model" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.go.GoModelTest@3b3a3a92]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
      </class> <!-- org.openapitools.codegen.go.GoModelTest -->
      <class name="org.openapitools.codegen.perl.PerlClientCodegenTest">
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.perl.PerlClientCodegenTest@33891646]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.perl.PerlClientCodegenTest@33891646]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testIssue677()[pri:0, instance:org.openapitools.codegen.perl.PerlClientCodegenTest@33891646]" name="testIssue677" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue677 -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.perl.PerlClientCodegenTest@33891646]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.perl.PerlClientCodegenTest -->
      <class name="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert an array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="arrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="arrayOneOfModelTest" duration-ms="3" started-at="2023-04-09T10:14:42 UTC" description="convert an array oneof model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayOneOfModelTest -->
        <test-method status="PASS" signature="beginDecimalNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="beginDecimalNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a name starting with decimal" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beginDecimalNameTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="importTypeMappingModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="importTypeMappingModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="import a typemapping" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- importTypeMappingModelTest -->
        <test-method status="PASS" signature="inlineModelWithUnderscoreNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="inlineModelWithUnderscoreNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert an inline model that originally had a name prefixed with an underscore" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineModelWithUnderscoreNameTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="listPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="objectPropertyAnyOfWithArrayOneOfModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="objectPropertyAnyOfWithArrayOneOfModelTest" duration-ms="3" started-at="2023-04-09T10:14:42 UTC" description="convert an any of with array oneof model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectPropertyAnyOfWithArrayOneOfModelTest -->
        <test-method status="PASS" signature="simpleModelDefaultValuesTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="simpleModelDefaultValuesTest" duration-ms="2" started-at="2023-04-09T10:14:42 UTC" description="convert and check default values for a simple TypeScript Angular model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelDefaultValuesTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest@4ab08881]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a simple TypeScript Angular model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularModelTest -->
      <class name="org.openapitools.codegen.objc.ObjcClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.objc.ObjcClientOptionsTest@74fe5966]" name="checkOptionsHelp" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.objc.ObjcClientOptionsTest@74fe5966]" name="checkOptionsProcessing" duration-ms="5" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.objc.ObjcClientOptionsTest -->
      <class name="org.openapitools.codegen.templating.mustache.TrimWhitespaceLambdaTest">
        <test-method status="PASS" signature="testTrimWhitespace()[pri:0, instance:org.openapitools.codegen.templating.mustache.TrimWhitespaceLambdaTest@51ec2df1]" name="testTrimWhitespace" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimWhitespace -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.openapitools.codegen.templating.mustache.TrimWhitespaceLambdaTest@51ec2df1]" name="init" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="reset()[pri:0, instance:org.openapitools.codegen.templating.mustache.TrimWhitespaceLambdaTest@51ec2df1]" name="reset" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reset -->
      </class> <!-- org.openapitools.codegen.templating.mustache.TrimWhitespaceLambdaTest -->
      <class name="org.openapitools.codegen.scala.AbstractScalaCodegenTest">
        <test-method status="PASS" signature="checkTypeDeclarationWithByteString()[pri:0, instance:org.openapitools.codegen.scala.AbstractScalaCodegenTest@1dce481b]" name="checkTypeDeclarationWithByteString" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTypeDeclarationWithByteString -->
        <test-method status="PASS" signature="convertVarNameCamelCase()[pri:0, instance:org.openapitools.codegen.scala.AbstractScalaCodegenTest@1dce481b]" name="convertVarNameCamelCase" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarNameCamelCase -->
        <test-method status="PASS" signature="checkTypeDeclarationWithStringToArrayModelMapping()[pri:0, instance:org.openapitools.codegen.scala.AbstractScalaCodegenTest@1dce481b]" name="checkTypeDeclarationWithStringToArrayModelMapping" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTypeDeclarationWithStringToArrayModelMapping -->
        <test-method status="PASS" signature="checkScalaTypeImportMapping()[pri:0, instance:org.openapitools.codegen.scala.AbstractScalaCodegenTest@1dce481b]" name="checkScalaTypeImportMapping" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkScalaTypeImportMapping -->
        <test-method status="PASS" signature="convertVarNameOriginalCase()[pri:0, instance:org.openapitools.codegen.scala.AbstractScalaCodegenTest@1dce481b]" name="convertVarNameOriginalCase" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarNameOriginalCase -->
        <test-method status="PASS" signature="convertVarNameSnakeCase()[pri:0, instance:org.openapitools.codegen.scala.AbstractScalaCodegenTest@1dce481b]" name="convertVarNameSnakeCase" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarNameSnakeCase -->
        <test-method status="PASS" signature="convertVarNamePascalCase()[pri:0, instance:org.openapitools.codegen.scala.AbstractScalaCodegenTest@1dce481b]" name="convertVarNamePascalCase" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarNamePascalCase -->
      </class> <!-- org.openapitools.codegen.scala.AbstractScalaCodegenTest -->
      <class name="org.openapitools.codegen.templating.mustache.TitlecaseLambdaTest">
        <test-method status="PASS" signature="titlecaseEmptyStringTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.TitlecaseLambdaTest@7fab4be7]" name="titlecaseEmptyStringTest" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titlecaseEmptyStringTest -->
        <test-method status="PASS" signature="titlecaseSingleLetterTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.TitlecaseLambdaTest@7fab4be7]" name="titlecaseSingleLetterTest" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titlecaseSingleLetterTest -->
        <test-method status="PASS" signature="titlecaseWithDelimiterTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.TitlecaseLambdaTest@7fab4be7]" name="titlecaseWithDelimiterTest" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titlecaseWithDelimiterTest -->
        <test-method status="PASS" signature="titlecaseTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.TitlecaseLambdaTest@7fab4be7]" name="titlecaseTest" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titlecaseTest -->
      </class> <!-- org.openapitools.codegen.templating.mustache.TitlecaseLambdaTest -->
      <class name="org.openapitools.codegen.java.micronaut.JavaMicronautClientCodegenSerializationLibraryTest">
        <test-method status="PASS" signature="testSerializationLibraryJackson()[pri:0, instance:org.openapitools.codegen.java.micronaut.JavaMicronautClientCodegenSerializationLibraryTest@57c88764]" name="testSerializationLibraryJackson" duration-ms="50" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerializationLibraryJackson -->
        <test-method status="PASS" signature="testSerializationLibraryMicronautSerdeJackson()[pri:0, instance:org.openapitools.codegen.java.micronaut.JavaMicronautClientCodegenSerializationLibraryTest@57c88764]" name="testSerializationLibraryMicronautSerdeJackson" duration-ms="39" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerializationLibraryMicronautSerdeJackson -->
      </class> <!-- org.openapitools.codegen.java.micronaut.JavaMicronautClientCodegenSerializationLibraryTest -->
      <class name="org.openapitools.codegen.go.GoClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.go.GoClientOptionsTest@eaa07bb]" name="checkOptionsHelp" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.go.GoClientOptionsTest@eaa07bb]" name="checkOptionsProcessing" duration-ms="4" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.go.GoClientOptionsTest -->
      <class name="org.openapitools.codegen.cpptiny.CppTinyClientModelTest">
        <test-method status="PASS" signature="exampleOfATest()[pri:0, instance:org.openapitools.codegen.cpptiny.CppTinyClientModelTest@44513002]" name="exampleOfATest" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" description="An example of testing the code model before it is rendered" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleOfATest -->
      </class> <!-- org.openapitools.codegen.cpptiny.CppTinyClientModelTest -->
      <class name="org.openapitools.codegen.asciidoc.LinkMarkupFilterTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.asciidoc.LinkMarkupFilterTest@78cd1d5c]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testLinkMarkupFilterDoesNotLinkMissingFile()[pri:0, instance:org.openapitools.codegen.asciidoc.LinkMarkupFilterTest@78cd1d5c]" name="testLinkMarkupFilterDoesNotLinkMissingFile" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLinkMarkupFilterDoesNotLinkMissingFile -->
        <test-method status="PASS" signature="testLinkMarkupFilterLinksFoundFileOk()[pri:0, instance:org.openapitools.codegen.asciidoc.LinkMarkupFilterTest@78cd1d5c]" name="testLinkMarkupFilterLinksFoundFileOk" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLinkMarkupFilterLinksFoundFileOk -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.asciidoc.LinkMarkupFilterTest@78cd1d5c]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.openapitools.codegen.asciidoc.LinkMarkupFilterTest -->
      <class name="org.openapitools.codegen.scalahttpclient.ScalaHttpClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientOptionsTest@251ead09]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientOptionsTest@251ead09]" name="checkOptionsProcessing" duration-ms="4" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.scalahttpclient.ScalaHttpClientOptionsTest -->
      <class name="org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addDefaultValueDocumentationForNonContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="addDefaultValueDocumentationForNonContainers" duration-ms="60" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDefaultValueDocumentationForNonContainers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="doNotAddDefaultValueDocumentationForContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="doNotAddDefaultValueDocumentationForContainers" duration-ms="39" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotAddDefaultValueDocumentationForContainers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude" duration-ms="70" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="generateJsonAnnotationForPolymorphism()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="generateJsonAnnotationForPolymorphism" duration-ms="80" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateJsonAnnotationForPolymorphism -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsFalse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="testAddOperationToGroupUseTagsFalse" duration-ms="29" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsFalse -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsTrue()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="testAddOperationToGroupUseTagsTrue" duration-ms="35" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsTrue -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="testExtraAnnotations" duration-ms="223" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="testHandleDefaultValue_issue8535()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="testHandleDefaultValue_issue8535" duration-ms="91" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandleDefaultValue_issue8535 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest@4e4c3a38]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- org.openapitools.codegen.java.jaxrs.JavaJAXRSCXFCDIServerCodegenTest -->
      <class name="org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest">
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="before" is-config="true" duration-ms="2" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="addDefaultValueDocumentationForNonContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="addDefaultValueDocumentationForNonContainers" duration-ms="29" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDefaultValueDocumentationForNonContainers -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="doNotAddDefaultValueDocumentationForContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="doNotAddDefaultValueDocumentationForContainers" duration-ms="19" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotAddDefaultValueDocumentationForContainers -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude" duration-ms="49" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="generateJsonAnnotationForPolymorphism()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="generateJsonAnnotationForPolymorphism" duration-ms="45" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateJsonAnnotationForPolymorphism -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="mapModelTest" duration-ms="3" started-at="2023-04-09T10:14:28 UTC" description="convert a simple java model with java8 types" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsFalse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="testAddOperationToGroupUseTagsFalse" duration-ms="18" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsFalse -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsTrue()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="testAddOperationToGroupUseTagsTrue" duration-ms="23" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsTrue -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="testExtraAnnotations" duration-ms="171" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest@5ac7aa18]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
      </class> <!-- org.openapitools.codegen.java.jaxrs.JavaResteasyEapServerCodegenModelTest -->
      <class name="org.openapitools.codegen.validations.oas.OpenApiSchemaTypeTest">
        <test-method status="PASS" signature="testOas30DocumentWithNullType(io.swagger.v3.oas.models.OpenAPI,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaTypeTest@34b9eb03]" name="testOas30DocumentWithNullType" duration-ms="14" started-at="2023-04-09T10:15:20 UTC" description="Warn when 3.1 features are present in a OAS 3.0 document" data-provider="oas31RecommendationExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class OpenAPI {
    openapi: 3.0.2
    info: class Info {
        title: Example
        description: null
        summary: null
        termsOfService: null
        contact: null
        license: class License {
            name: MIT
            url: null
            identifier: null
        }
        version: 1.0.0
    }
    externalDocs: null
    servers: [class Server {
        url: http://api.example.xyz/v1
        description: null
        variables: null
    }]
    security: null
    tags: null
    paths: class Paths {
        {/person/display/{personId}=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: list
                parameters: [class PathParameter {
                    class Parameter {
                        name: personId
                        in: null
                        description: The id of the person to retrieve
                        required: null
                        deprecated: null
                        allowEmptyValue: null
                        style: simple
                        explode: false
                        allowReserved: null
                        schema: class StringSchema {
                            class Schema {
                                type: string
                                format: null
                                $ref: null
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                        }
                        examples: null
                        example: null
                        content: null
                        $ref: null
                    }
                    in: path
                    required: true
                }]
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: OK
                        headers: null
                        content: class Content {
                            {application/json=class MediaType {
                                schema: class Schema {
                                    type: null
                                    format: null
                                    $ref: #/components/schemas/Person
                                    description: null
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        extensions: null
                        $ref: null
                    }}
                    extensions: null
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }}
    }
    components: class Components {
        schemas: {Person=class ObjectSchema {
            class Schema {
                type: object
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: {$_type=class StringSchema {
                    class Schema {
                        type: string
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }, lastName=class StringSchema {
                    class Schema {
                        type: string
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }, firstName=class StringSchema {
                    class Schema {
                        type: string
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }, maidenName=class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/Person_maidenName
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }, address=class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/Person_address
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }, secondHomeAddress=class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/Nullable.Address
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }, skills=class ArraySchema {
                    class Schema {
                        type: array
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }, nullableSkillsVariant2=class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/Person_nullableSkillsVariant2
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }}
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: Discriminator{propertyName='$_type', mapping={a=#/components/schemas/Adult, c=Child}, extensions=null}
                xml: null
            }
        }, Adult=class ComposedSchema {
            class Schema {
                type: null
                format: null
                $ref: null
                description: A representation of an adult
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }, Child=class ComposedSchema {
            class Schema {
                type: null
                format: null
                $ref: null
                description: A representation of a child
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }, Nullable.Address=class ObjectSchema {
            class Schema {
                type: object
                format: null
                $ref: null
                description: A representation of an address whose value can be null.
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: {street=class StringSchema {
                    class Schema {
                        type: string
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }, city=class StringSchema {
                    class Schema {
                        type: string
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }}
                additionalProperties: null
                nullable: true
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }, Person_maidenName=class ComposedSchema {
            class Schema {
                type: null
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }, Person_address=class ObjectSchema {
            class Schema {
                type: object
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: {street=class StringSchema {
                    class Schema {
                        type: string
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }, city=class StringSchema {
                    class Schema {
                        type: string
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }}
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }, Person_skills_inner=class ObjectSchema {
            class Schema {
                type: object
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: {name=class StringSchema {
                    class Schema {
                        type: string
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                }}
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }, Person_nullableSkillsVariant2=class ComposedSchema {
            class Schema {
                type: null
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }, Adult_allOf_nullableChildrenVariant2=class ComposedSchema {
            class Schema {
                type: null
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }, Adult_allOf=class Schema {
            type: object
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: {children=class ArraySchema {
                class Schema {
                    type: array
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }, nullableChildrenVariant2=class Schema {
                type: null
                format: null
                $ref: #/components/schemas/Adult_allOf_nullableChildrenVariant2
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }}
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
        }, Child_allOf=class Schema {
            type: object
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: {age=class IntegerSchema {
                class Schema {
                    type: integer
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }}
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
        }}
        responses: null
        parameters: null
        examples: null
        requestBodies: null
        headers: null
        securitySchemes: null
        links: null
        callbacks: null
        pathItems: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOas30DocumentWithNullType -->
      </class> <!-- org.openapitools.codegen.validations.oas.OpenApiSchemaTypeTest -->
      <class name="org.openapitools.codegen.elixir.ElixirClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.elixir.ElixirClientOptionsTest@465d9cce]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.elixir.ElixirClientOptionsTest@465d9cce]" name="checkOptionsProcessing" duration-ms="3" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.elixir.ElixirClientOptionsTest -->
      <class name="org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest@2dc39a7c]" name="checkOptionsProcessing" duration-ms="4" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest@2dc39a7c]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptnode.TypeScriptNodeClientOptionsTest -->
      <class name="org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addDefaultValueDocumentationForNonContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="addDefaultValueDocumentationForNonContainers" duration-ms="26" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDefaultValueDocumentationForNonContainers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="doNotAddDefaultValueDocumentationForContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="doNotAddDefaultValueDocumentationForContainers" duration-ms="27" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotAddDefaultValueDocumentationForContainers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude" duration-ms="59" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="generateJsonAnnotationForPolymorphism()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="generateJsonAnnotationForPolymorphism" duration-ms="48" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateJsonAnnotationForPolymorphism -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="mapModelTest" duration-ms="2" started-at="2023-04-09T10:14:28 UTC" description="convert a simple java model with java8 types" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:28 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsFalse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="testAddOperationToGroupUseTagsFalse" duration-ms="15" started-at="2023-04-09T10:14:28 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsFalse -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsTrue()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="testAddOperationToGroupUseTagsTrue" duration-ms="15" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsTrue -->
        <test-method status="PASS" signature="testDefaultValuesFixed()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="testDefaultValuesFixed" duration-ms="13" started-at="2023-04-09T10:14:29 UTC" description="remove suffix for int64, float and double types" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultValuesFixed -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="testExtraAnnotations" duration-ms="118" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testHandleDefaultValue_issue8535()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest@4cdd2c73]" name="testHandleDefaultValue_issue8535" duration-ms="65" started-at="2023-04-09T10:14:29 UTC" finished-at="2023-04-09T10:14:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandleDefaultValue_issue8535 -->
      </class> <!-- org.openapitools.codegen.java.jaxrs.JavaJaxrsResteasyServerCodegenModelTest -->
      <class name="org.openapitools.codegen.slim4.PhpSlim4ServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerOptionsTest@78f9b1ec]" name="checkOptionsHelp" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerOptionsTest@78f9b1ec]" name="checkOptionsProcessing" duration-ms="4" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.slim4.PhpSlim4ServerOptionsTest -->
      <class name="org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest">
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="3" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBody(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBody" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBody -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRecommendations(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRecommendations -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[class Content {
    {a=class MediaType {
        schema: null
        examples: null
        example: null
        encoding: null
    }}
}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithoutRefOrContent]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
        <test-method status="PASS" signature="testGetOrHeadWithBodyWithDisabledRule(io.swagger.v3.oas.models.PathItem$HttpMethod,java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Content,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest@56399b9e]" name="testGetOrHeadWithBodyWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" data-provider="getOrHeadWithBodyExpectations" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[opWithRef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[#/components/schemas/Animal]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrHeadWithBodyWithDisabledRule -->
      </class> <!-- org.openapitools.codegen.validations.oas.OpenApiOperationValidationsTest -->
      <class name="org.openapitools.codegen.csharp.CSharpClientCodegenTest">
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.csharp.CSharpClientCodegenTest@7b88a2e2]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.csharp.CSharpClientCodegenTest@7b88a2e2]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.csharp.CSharpClientCodegenTest@7b88a2e2]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.csharp.CSharpClientCodegenTest -->
      <class name="org.openapitools.codegen.utils.JsonCacheTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="131" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddBigDecimal()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddBigDecimal" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBigDecimal -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddBigInteger()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddBigInteger" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBigInteger -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddDate()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddDate" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDate -->
        <test-method status="PASS" signature="testAddBoolean()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddBoolean" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddBoolean -->
        <test-method status="PASS" signature="testAddDateTimeJava8()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddDateTimeJava8" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDateTimeJava8 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddDateTimeJoda()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddDateTimeJoda" duration-ms="3" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDateTimeJoda -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddDateTimeThreeTen()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddDateTimeThreeTen" duration-ms="22" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDateTimeThreeTen -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddDouble()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddDouble" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDouble -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddFloat()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddFloat" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddFloat -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddLocalDateJava8()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddLocalDateJava8" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLocalDateJava8 -->
        <test-method status="PASS" signature="testAddInt()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddInt" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddInt -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddLocalDateJoda()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddLocalDateJoda" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLocalDateJoda -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddLocalDateThreeTen()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddLocalDateThreeTen" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLocalDateThreeTen -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddLong()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddLong" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLong -->
        <test-method status="PASS" signature="testAddShort()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddShort" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddShort -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddString()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testAddString" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddString -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testDelete" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFlushSaveLoad()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testFlushSaveLoad" duration-ms="2" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlushSaveLoad -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGet" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetBigDecimal()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetBigDecimal" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBigDecimal -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetBigDecimalWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetBigDecimalWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBigDecimalWithDefault -->
        <test-method status="PASS" signature="testGetBigIntegerWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetBigIntegerWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBigIntegerWithDefault -->
        <test-method status="PASS" signature="testGetBigInteger()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetBigInteger" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBigInteger -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetBoolean()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetBoolean" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBoolean -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetDate()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetDate" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDate -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetBooleanWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetBooleanWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBooleanWithDefault -->
        <test-method status="PASS" signature="testGetDateWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetDateWithDefault" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDateWithDefault -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetDouble()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetDouble" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDouble -->
        <test-method status="PASS" signature="testGetFloat()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetFloat" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFloat -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetDoubleWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetDoubleWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDoubleWithDefault -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetFloatWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetFloatWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFloatWithDefault -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetInt()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetInt" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetInt -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetIntWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetIntWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIntWithDefault -->
        <test-method status="PASS" signature="testGetLocalDate()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetLocalDate" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLocalDate -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetLong()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetLong" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLong -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetLongWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetLongWithDefault" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLongWithDefault -->
        <test-method status="PASS" signature="testGetNumber()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetNumber" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumber -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetNumberWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetNumberWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumberWithDefault -->
        <test-method status="PASS" signature="testGetObject()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetObject" duration-ms="3" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetObject -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetObjectWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetObjectWithDefault" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetObjectWithDefault -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetObjects()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetObjects" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetObjects -->
        <test-method status="PASS" signature="testGetObjectsWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetObjectsWithDefault" duration-ms="2" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetObjectsWithDefault -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetShort()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetShort" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetShort -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetShortWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetShortWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetShortWithDefault -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetString()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetString" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetString -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetStringWithDefault()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testGetStringWithDefault" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStringWithDefault -->
        <test-method status="PASS" signature="testMerge()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testMerge" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMerge -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPojoSerialization()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testPojoSerialization" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPojoSerialization -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSet" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetBigInteger()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetBigInteger" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBigInteger -->
        <test-method status="PASS" signature="testSetBigDecimal()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetBigDecimal" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBigDecimal -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetBoolean()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetBoolean" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoolean -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetDateTime310()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetDateTime310" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDateTime310 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetDate()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetDate" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDate -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetDateTimeJava8()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetDateTimeJava8" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDateTimeJava8 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetDateTimeJoda()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetDateTimeJoda" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDateTimeJoda -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetDouble()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetDouble" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDouble -->
        <test-method status="PASS" signature="testSetFloat()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetFloat" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFloat -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetLocalDate310()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetLocalDate310" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetLocalDate310 -->
        <test-method status="PASS" signature="testSetInt()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetInt" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetInt -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetLocalDateJava8()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetLocalDateJava8" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetLocalDateJava8 -->
        <test-method status="PASS" signature="testSetLocalDateJoda()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetLocalDateJoda" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetLocalDateJoda -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetLong()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetLong" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetLong -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetObject()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetObject" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetObject -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetNumber()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetNumber" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetNumber -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetObjects()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetObjects" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetObjects -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetShort()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetShort" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetShort -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetString()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetString" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetString -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="setUp" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSetWithMissingAncestors()[pri:0, instance:org.openapitools.codegen.utils.JsonCacheTest@4137d7a8]" name="testSetWithMissingAncestors" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetWithMissingAncestors -->
      </class> <!-- org.openapitools.codegen.utils.JsonCacheTest -->
      <class name="org.openapitools.codegen.lumen.PhpLumenServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.lumen.PhpLumenServerOptionsTest@6f222699]" name="checkOptionsHelp" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.lumen.PhpLumenServerOptionsTest@6f222699]" name="checkOptionsProcessing" duration-ms="3" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.lumen.PhpLumenServerOptionsTest -->
      <class name="org.openapitools.codegen.haskellyesod.HaskellYesodServerCodegenTest">
        <test-method status="PASS" signature="testHasOverlappedPath()[pri:0, instance:org.openapitools.codegen.haskellyesod.HaskellYesodServerCodegenTest@7e7f3cfd]" name="testHasOverlappedPath" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasOverlappedPath -->
        <test-method status="PASS" signature="testToApiTestFilename()[pri:0, instance:org.openapitools.codegen.haskellyesod.HaskellYesodServerCodegenTest@7e7f3cfd]" name="testToApiTestFilename" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToApiTestFilename -->
        <test-method status="PASS" signature="testIsOverlappedPath()[pri:0, instance:org.openapitools.codegen.haskellyesod.HaskellYesodServerCodegenTest@7e7f3cfd]" name="testIsOverlappedPath" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsOverlappedPath -->
      </class> <!-- org.openapitools.codegen.haskellyesod.HaskellYesodServerCodegenTest -->
      <class name="org.openapitools.codegen.kotlin.KotlinTestUtilsTest">
        <test-method status="PASS" signature="testBadCompile()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinTestUtilsTest@5cea18bc]" name="testBadCompile" duration-ms="145" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Compilation error. Details:
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:13: error: expecting '('
    fun void testFun(){
            ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:14: error: expecting member declaration
    fun void testFun(){
             ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:21: error: expecting member declaration
    fun void testFun(){
                    ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:22: error: expecting member declaration
    fun void testFun(){
                     ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:23: error: expecting member declaration
    fun void testFun(){
                      ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:23: error: function declaration must have a name
    fun void testFun(){
                      ^
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Compilation error. Details:
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:13: error: expecting '('
    fun void testFun(){
            ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:14: error: expecting member declaration
    fun void testFun(){
             ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:21: error: expecting member declaration
    fun void testFun(){
                    ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:22: error: expecting member declaration
    fun void testFun(){
                     ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:23: error: expecting member declaration
    fun void testFun(){
                      ^
/gen/modules/openapi-generator/target/test-classes/org/openapitools/codegen/kotlin/KotlinTestUtilsTest/badPack/com/example/SimpleClass.kt:5:23: error: function declaration must have a name
    fun void testFun(){
                      ^

at org.openapitools.codegen.kotlin.KotlinTestUtils.compileModule(KotlinTestUtils.java:86)
at org.openapitools.codegen.kotlin.KotlinTestUtils.buildModule(KotlinTestUtils.java:39)
at org.openapitools.codegen.kotlin.KotlinTestUtilsTest.testBadCompile(KotlinTestUtilsTest.java:23)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadCompile -->
        <test-method status="PASS" signature="testNormalCompile()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinTestUtilsTest@5cea18bc]" name="testNormalCompile" duration-ms="116" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNormalCompile -->
      </class> <!-- org.openapitools.codegen.kotlin.KotlinTestUtilsTest -->
      <class name="org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest">
        <test-method status="PASS" signature="executeShouldConvertToHttpStatusNotImplementedAnyOtherStatus()[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertToHttpStatusNotImplementedAnyOtherStatus" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertToHttpStatusNotImplementedAnyOtherStatus -->
        <test-method status="PASS" signature="executeShouldConvertEmptyHttpStatusTo200Ok()[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertEmptyHttpStatusTo200Ok" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertEmptyHttpStatusTo200Ok -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[ACCEPTED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[202]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAD_GATEWAY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[502]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[ALREADY_REPORTED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[208]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[BANDWIDTH_LIMIT_EXCEEDED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[509]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[CREATED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[CONFLICT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[409]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[CONTINUE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAD_REQUEST]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[EARLY_HINTS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[103]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GATEWAY_TIMEOUT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[504]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GONE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[410]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[FOUND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[302]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[HTTP_VERSION_NOT_SUPPORTED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[505]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[FORBIDDEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[EXPECTATION_FAILED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[417]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[FAILED_DEPENDENCY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[424]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[INSUFFICIENT_STORAGE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[507]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[I_AM_A_TEAPOT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[418]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[LENGTH_REQUIRED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[411]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[IM_USED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[226]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[LOOP_DETECTED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[508]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[INTERNAL_SERVER_ERROR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[METHOD_NOT_ALLOWED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[405]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[LOCKED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[423]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[NOT_ACCEPTABLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[406]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[NO_CONTENT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[204]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[NOT_EXTENDED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[510]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[MULTIPLE_CHOICES]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[NON_AUTHORITATIVE_INFORMATION]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[203]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[MULTI_STATUS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[207]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[NETWORK_AUTHENTICATION_REQUIRED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[MOVED_PERMANENTLY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[301]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[PERMANENT_REDIRECT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[OK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[NOT_IMPLEMENTED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[501]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[NOT_MODIFIED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[304]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[PAYLOAD_TOO_LARGE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[413]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[PAYMENT_REQUIRED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[402]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[PARTIAL_CONTENT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[206]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[NOT_FOUND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[PRECONDITION_REQUIRED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[428]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[SEE_OTHER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[303]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[REQUEST_HEADER_FIELDS_TOO_LARGE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[431]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[PRECONDITION_FAILED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[412]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[PROXY_AUTHENTICATION_REQUIRED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[407]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[REQUESTED_RANGE_NOT_SATISFIABLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[416]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[REQUEST_TIMEOUT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[408]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[RESET_CONTENT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[205]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[PROCESSING]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[SERVICE_UNAVAILABLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[503]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[TOO_EARLY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[425]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[UNPROCESSABLE_ENTITY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[422]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[UNSUPPORTED_MEDIA_TYPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[415]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[UPGRADE_REQUIRED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[426]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[UNAVAILABLE_FOR_LEGAL_REASONS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[451]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[TEMPORARY_REDIRECT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[307]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[UNAUTHORIZED]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[401]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[TOO_MANY_REQUESTS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[429]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[SWITCHING_PROTOCOLS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[101]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[VARIANT_ALSO_NEGOTIATES]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[506]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
        <test-method status="PASS" signature="executeShouldConvertValues(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest@15fa55a6]" name="executeShouldConvertValues" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" data-provider="springHttpStatusCodes" finished-at="2023-04-09T10:15:07 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[URI_TOO_LONG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[414]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeShouldConvertValues -->
      </class> <!-- org.openapitools.codegen.templating.mustache.SpringHttpStatusLambdaTest -->
      <class name="org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest">
        <test-method status="PASS" signature="test(java.lang.String,java.util.Map,java.lang.String,org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues)[pri:0, instance:org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest@48b920e8]" name="test" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" data-provider="data" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default setup]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestModel]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues@43f8a62d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String,java.util.Map,java.lang.String,org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues)[pri:0, instance:org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest@48b920e8]" name="test" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="data" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Default setup with Python src root]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{pythonSrcRoot=test_root}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestModel]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues@3a24c6bf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String,java.util.Map,java.lang.String,org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues)[pri:0, instance:org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest@48b920e8]" name="test" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="data" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Python src in import and tests under python src root]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{pythonSrcRoot=test_root, usePythonSrcRootInImports=true, testsUsePythonSrcRoot=true}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestModel]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues@3a5b436a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String,java.util.Map,java.lang.String,org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues)[pri:0, instance:org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest@48b920e8]" name="test" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="data" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Python src in import]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{pythonSrcRoot=test_root, usePythonSrcRootInImports=true}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestModel]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues@834cb9b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String,java.util.Map,java.lang.String,org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues)[pri:0, instance:org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest@48b920e8]" name="test" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="data" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Python src in import with specified package and tests under python src root]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{pythonSrcRoot=test_root, usePythonSrcRootInImports=true, packageName=test_package, testsUsePythonSrcRoot=true}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestModel]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues@3179f720]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String,java.util.Map,java.lang.String,org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues)[pri:0, instance:org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest@48b920e8]" name="test" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" data-provider="data" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Python src in import with specified package]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{pythonSrcRoot=test_root, usePythonSrcRootInImports=true, packageName=test_package}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestModel]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest$ExpectedValues@44db4138]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- org.openapitools.codegen.python.AbstractPythonConnexionServerCodegenTest -->
      <class name="org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest">
        <test-method status="PASS" signature="arrayPropertyTest()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="arrayPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="convert a model with array property to default kotlin.Array" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="listPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:43 UTC" description="convert a model with array property to a kotlin.collections.List" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="mapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="sanitizeModelNames(java.lang.String,org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="sanitizeModelNames" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="sanitize model names" data-provider="modelNames" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[TestNs.TestClass]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest@477ec014]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanitizeModelNames -->
        <test-method status="PASS" signature="sanitizeModelNames(java.lang.String,org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="sanitizeModelNames" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="sanitize model names" data-provider="modelNames" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[$]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest@746ffae6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanitizeModelNames -->
        <test-method status="PASS" signature="sanitizeModelNames(java.lang.String,org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="sanitizeModelNames" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="sanitize model names" data-provider="modelNames" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[One<Two]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest@7d456553]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanitizeModelNames -->
        <test-method status="PASS" signature="sanitizeModelNames(java.lang.String,org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="sanitizeModelNames" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" description="sanitize model names" data-provider="modelNames" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[for]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest@3ce37205]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanitizeModelNames -->
        <test-method status="PASS" signature="sanitizeModelNames(java.lang.String,org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="sanitizeModelNames" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="sanitize model names" data-provider="modelNames" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[this is a test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest$ModelNameTest@343d4ec0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanitizeModelNames -->
        <test-method status="PASS" signature="selectDateLibraryAsJava8()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="selectDateLibraryAsJava8" duration-ms="2" started-at="2023-04-09T10:14:43 UTC" description="convert a simple model: date java8" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDateLibraryAsJava8 -->
        <test-method status="PASS" signature="selectDateLibraryAsJava8LocalDateTime()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="selectDateLibraryAsJava8LocalDateTime" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="convert a simple model: date java8-localdatetime" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDateLibraryAsJava8LocalDateTime -->
        <test-method status="PASS" signature="selectDateLibraryAsString()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="selectDateLibraryAsString" duration-ms="2" started-at="2023-04-09T10:14:43 UTC" description="convert a simple model: date string" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDateLibraryAsString -->
        <test-method status="PASS" signature="selectDateLibraryAsThreetenbp()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="selectDateLibraryAsThreetenbp" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="convert a simple model: threetenbp" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDateLibraryAsThreetenbp -->
        <test-method status="PASS" signature="selectDateLibraryAsThreetenbpLocalDateTime()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="selectDateLibraryAsThreetenbpLocalDateTime" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="convert a simple model: threetenbp-localdatetime" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDateLibraryAsThreetenbpLocalDateTime -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" description="convert a simple model" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="testNativeClientExplodedQueryParamObject()[pri:0, instance:org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest@4a4ba9e9]" name="testNativeClientExplodedQueryParamObject" duration-ms="49" started-at="2023-04-09T10:14:43 UTC" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNativeClientExplodedQueryParamObject -->
      </class> <!-- org.openapitools.codegen.kotlin.KotlinClientCodegenModelTest -->
      <class name="org.openapitools.codegen.templating.mustache.LowercaseLambdaTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.LowercaseLambdaTest@4e628b52]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="lowercaseReservedWordTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.LowercaseLambdaTest@4e628b52]" name="lowercaseReservedWordTest" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lowercaseReservedWordTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.LowercaseLambdaTest@4e628b52]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="lowercaseTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.LowercaseLambdaTest@4e628b52]" name="lowercaseTest" duration-ms="0" started-at="2023-04-09T10:15:08 UTC" finished-at="2023-04-09T10:15:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lowercaseTest -->
      </class> <!-- org.openapitools.codegen.templating.mustache.LowercaseLambdaTest -->
      <class name="org.openapitools.codegen.swift5.Swift5ModelEnumTest">
        <test-method status="PASS" signature="convertIntegerDefaultValueTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ModelEnumTest@21a1b8b0]" name="convertIntegerDefaultValueTest" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" description="convert a java model with an integer enum and a default value" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertIntegerDefaultValueTest -->
        <test-method status="PASS" signature="convertNumberDefaultValueTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ModelEnumTest@21a1b8b0]" name="convertNumberDefaultValueTest" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" description="convert a java model with a number enum and a default value" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertNumberDefaultValueTest -->
        <test-method status="PASS" signature="convertStringDefaultValueTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ModelEnumTest@21a1b8b0]" name="convertStringDefaultValueTest" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" description="convert a java model with a string enum and a default value" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertStringDefaultValueTest -->
        <test-method status="PASS" signature="convertReservedWordStringDefaultValueTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ModelEnumTest@21a1b8b0]" name="convertReservedWordStringDefaultValueTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" description="convert a java model with a reserved word string enum and a default value" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertReservedWordStringDefaultValueTest -->
      </class> <!-- org.openapitools.codegen.swift5.Swift5ModelEnumTest -->
      <class name="org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest@398474a2]" name="setup" is-config="true" duration-ms="144" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testPetApi(java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest@398474a2]" name="testPetApi" duration-ms="2" started-at="2023-04-09T10:15:20 UTC" data-provider="fileSuffix" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPetApi -->
        <test-method status="PASS" signature="testPetApi(java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest@398474a2]" name="testPetApi" duration-ms="8" started-at="2023-04-09T10:15:20 UTC" data-provider="fileSuffix" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Impl]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPetApi -->
        <test-method status="PASS" signature="testPom()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest@398474a2]" name="testPom" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPom -->
        <test-method status="PASS" signature="testStoreApi(java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest@398474a2]" name="testStoreApi" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" data-provider="fileSuffix" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreApi -->
        <test-method status="PASS" signature="testStoreApi(java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest@398474a2]" name="testStoreApi" duration-ms="4" started-at="2023-04-09T10:15:20 UTC" data-provider="fileSuffix" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Impl]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreApi -->
        <test-method status="PASS" signature="testUserApi(java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest@398474a2]" name="testUserApi" duration-ms="2" started-at="2023-04-09T10:15:20 UTC" data-provider="fileSuffix" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserApi -->
        <test-method status="PASS" signature="testUserApi(java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest@398474a2]" name="testUserApi" duration-ms="8" started-at="2023-04-09T10:15:20 UTC" data-provider="fileSuffix" finished-at="2023-04-09T10:15:20 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Impl]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserApi -->
      </class> <!-- org.openapitools.codegen.java.helidon.JavaHelidonSeClientCodegenTest -->
      <class name="org.openapitools.codegen.php.PhpClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.php.PhpClientOptionsTest@6e4e7a62]" name="checkOptionsHelp" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.php.PhpClientOptionsTest@6e4e7a62]" name="checkOptionsProcessing" duration-ms="3" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.php.PhpClientOptionsTest -->
      <class name="org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="2" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAbstractClass()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="testAbstractClass" duration-ms="154" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbstractClass -->
        <test-method status="PASS" signature="testFullProject()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="testFullProject" duration-ms="133" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullProject -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGenerateGradleProject()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="testGenerateGradleProject" duration-ms="109" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateGradleProject -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testJackson()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="testJackson" duration-ms="100" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJackson -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testJsonb()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="testJsonb" duration-ms="89" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonb -->
        <test-method status="PASS" signature="testRestApiFilesOnly()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="testRestApiFilesOnly" duration-ms="90" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestApiFilesOnly -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testReturnResponse()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="testReturnResponse" duration-ms="85" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnResponse -->
        <test-method status="PASS" signature="testSupportAsync()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="testSupportAsync" duration-ms="100" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupportAsync -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="validatePetApi()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="validatePetApi" duration-ms="94" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePetApi -->
        <test-method status="PASS" signature="validateStoreApi()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="validateStoreApi" duration-ms="96" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStoreApi -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="validateUserApi()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest@1603dc2f]" name="validateUserApi" duration-ms="119" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUserApi -->
      </class> <!-- org.openapitools.codegen.java.helidon.JavaHelidonMpServerCodegenTest -->
      <class name="org.openapitools.codegen.java.AbstractJavaCodegenTest">
        <test-method status="PASS" signature="additionalPropertyArtifactSnapShotVersionTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="additionalPropertyArtifactSnapShotVersionTest" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if artifactVersion additional property is used with snapshot parameter" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- additionalPropertyArtifactSnapShotVersionTest -->
        <test-method status="PASS" signature="additionalPropertyArtifactVersionTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="additionalPropertyArtifactVersionTest" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if artifactVersion additional property is used" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- additionalPropertyArtifactVersionTest -->
        <test-method status="PASS" signature="allowsProgrammaticallySettingArtifactVersionWithNullOpenApiVersion()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="allowsProgrammaticallySettingArtifactVersionWithNullOpenApiVersion" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if setting an artifact version programmatically persists to additional properties, when openapi version is null" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allowsProgrammaticallySettingArtifactVersionWithNullOpenApiVersion -->
        <test-method status="PASS" signature="apiDocFileFolder()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="apiDocFileFolder" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiDocFileFolder -->
        <test-method status="PASS" signature="allowsProgrammaticallySettingArtifactVersionWithSpecifiedOpenApiVersion()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="allowsProgrammaticallySettingArtifactVersionWithSpecifiedOpenApiVersion" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if setting an artifact version programmatically persists to additional properties, even when openapi version is specified" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allowsProgrammaticallySettingArtifactVersionWithSpecifiedOpenApiVersion -->
        <test-method status="PASS" signature="apiFileFolder()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="apiFileFolder" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="apiTestFileFolder()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="apiTestFileFolder" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiTestFileFolder -->
        <test-method status="PASS" signature="apiTestFileFolderDirect()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="apiTestFileFolderDirect" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiTestFileFolderDirect -->
        <test-method status="PASS" signature="convertModelName()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="convertModelName" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertModelName -->
        <test-method status="PASS" signature="convertVarName()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="convertVarName" duration-ms="2" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="dateDefaultValueIsIsoDate()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="dateDefaultValueIsIsoDate" duration-ms="24" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateDefaultValueIsIsoDate -->
        <test-method status="PASS" signature="dateDefaultValueIsIsoDateTime()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="dateDefaultValueIsIsoDateTime" duration-ms="10" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateDefaultValueIsIsoDateTime -->
        <test-method status="PASS" signature="defaultVersionTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="defaultVersionTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" description="tests if default version is used when neither OpenAPI version nor artifactVersion additional property has been provided" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultVersionTest -->
        <test-method status="PASS" signature="getTypeDeclarationTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="getTypeDeclarationTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTypeDeclarationTest -->
        <test-method status="PASS" signature="getTypeDeclarationGivenSchemaMappingTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="getTypeDeclarationGivenSchemaMappingTest" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTypeDeclarationGivenSchemaMappingTest -->
        <test-method status="PASS" signature="maplikeDefaultValueForModelWithStringToModelMapping()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="maplikeDefaultValueForModelWithStringToModelMapping" duration-ms="7" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maplikeDefaultValueForModelWithStringToModelMapping -->
        <test-method status="PASS" signature="maplikeDefaultValueForModelWithStringToStringMapping()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="maplikeDefaultValueForModelWithStringToStringMapping" duration-ms="7" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maplikeDefaultValueForModelWithStringToStringMapping -->
        <test-method status="PASS" signature="modelTestFileFolderDirect()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="modelTestFileFolderDirect" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelTestFileFolderDirect -->
        <test-method status="PASS" signature="modelTestFileFolder()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="modelTestFileFolder" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelTestFileFolder -->
        <test-method status="PASS" signature="modelFileFolder()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="modelFileFolder" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
        <test-method status="PASS" signature="nullDefaultValueForModelWithDynamicProperties()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="nullDefaultValueForModelWithDynamicProperties" duration-ms="6" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullDefaultValueForModelWithDynamicProperties -->
        <test-method status="PASS" signature="openApiSnapShotVersionTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="openApiSnapShotVersionTest" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if API version specification is used if no version is provided in additional properties with snapshot version" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApiSnapShotVersionTest -->
        <test-method status="PASS" signature="openApiVersionTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="openApiVersionTest" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if API version specification is used if no version is provided in additional properties" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApiVersionTest -->
        <test-method status="PASS" signature="processOptsBooleanFalseFromBoolean()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="processOptsBooleanFalseFromBoolean" duration-ms="46" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanFalseFromBoolean -->
        <test-method status="PASS" signature="processOptsBooleanFalseFromGarbage()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="processOptsBooleanFalseFromGarbage" duration-ms="33" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanFalseFromGarbage -->
        <test-method status="PASS" signature="processOptsBooleanFalseFromNumeric()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="processOptsBooleanFalseFromNumeric" duration-ms="31" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanFalseFromNumeric -->
        <test-method status="PASS" signature="processOptsBooleanFalseFromString()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="processOptsBooleanFalseFromString" duration-ms="31" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanFalseFromString -->
        <test-method status="PASS" signature="processOptsBooleanTrueFromBoolean()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="processOptsBooleanTrueFromBoolean" duration-ms="27" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanTrueFromBoolean -->
        <test-method status="PASS" signature="processOptsBooleanTrueFromString()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="processOptsBooleanTrueFromString" duration-ms="26" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanTrueFromString -->
        <test-method status="PASS" signature="snapshotVersionAlreadySnapshotTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="snapshotVersionAlreadySnapshotTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" description="tests if default version with snapshot is used when setArtifactVersion is used" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- snapshotVersionAlreadySnapshotTest -->
        <test-method status="PASS" signature="snapshotVersionOpenAPITest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="snapshotVersionOpenAPITest" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if default version with snapshot is used when OpenAPI version has been provided" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- snapshotVersionOpenAPITest -->
        <test-method status="PASS" signature="srcMainFolderShouldNotBeOperatingSystemSpecificPaths()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="srcMainFolderShouldNotBeOperatingSystemSpecificPaths" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- srcMainFolderShouldNotBeOperatingSystemSpecificPaths -->
        <test-method status="PASS" signature="snapshotVersionTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="snapshotVersionTest" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if default version with snapshot is used when neither OpenAPI version nor artifactVersion additional property has been provided" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- snapshotVersionTest -->
        <test-method status="PASS" signature="testAdditionalModelTypeAnnotationsMixed()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testAdditionalModelTypeAnnotationsMixed" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalModelTypeAnnotationsMixed -->
        <test-method status="PASS" signature="srcTestFolderShouldNotBeOperatingSystemSpecificPaths()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="srcTestFolderShouldNotBeOperatingSystemSpecificPaths" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- srcTestFolderShouldNotBeOperatingSystemSpecificPaths -->
        <test-method status="PASS" signature="testAdditionalModelTypeAnnotationsNewLineWindows()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testAdditionalModelTypeAnnotationsNewLineWindows" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalModelTypeAnnotationsNewLineWindows -->
        <test-method status="PASS" signature="testAdditionalModelTypeAnnotationsNewLineLinux()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testAdditionalModelTypeAnnotationsNewLineLinux" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalModelTypeAnnotationsNewLineLinux -->
        <test-method status="PASS" signature="testAdditionalModelTypeAnnotationsSemiColon()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testAdditionalModelTypeAnnotationsSemiColon" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalModelTypeAnnotationsSemiColon -->
        <test-method status="PASS" signature="testAdditionalModelTypeAnnotationsNoDuplicate()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testAdditionalModelTypeAnnotationsNoDuplicate" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalModelTypeAnnotationsNoDuplicate -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testOneOfModelImports()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testOneOfModelImports" duration-ms="6" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfModelImports -->
        <test-method status="PASS" signature="testPreprocessOpenAPI()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testPreprocessOpenAPI" duration-ms="25" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreprocessOpenAPI -->
        <test-method status="PASS" signature="testPreprocessOpenAPINumVersion()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testPreprocessOpenAPINumVersion" duration-ms="32" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreprocessOpenAPINumVersion -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="toDefaultValueDateTimeLegacyTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="toDefaultValueDateTimeLegacyTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toDefaultValueDateTimeLegacyTest -->
        <test-method status="PASS" signature="toDefaultValueTest()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="toDefaultValueTest" duration-ms="2" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toDefaultValueTest -->
        <test-method status="PASS" signature="toEnumValue()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="toEnumValue" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toEnumValue -->
        <test-method status="PASS" signature="toEnumVarNameShouldNotResultInSingleUnderscore()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="toEnumVarNameShouldNotResultInSingleUnderscore" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toEnumVarNameShouldNotResultInSingleUnderscore -->
        <test-method status="PASS" signature="toModelNameUsesPascalCase()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="toModelNameUsesPascalCase" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toModelNameUsesPascalCase -->
        <test-method status="PASS" signature="toEnumVarNameShouldNotShortenUnderScore()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="toEnumVarNameShouldNotShortenUnderScore" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toEnumVarNameShouldNotShortenUnderScore -->
        <test-method status="PASS" signature="toModelNameShouldNotUseProvidedMapping()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="toModelNameShouldNotUseProvidedMapping" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toModelNameShouldNotUseProvidedMapping -->
        <test-method status="PASS" signature="usesDefaultVersionWhenAdditionalPropertiesVersionIsNull()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="usesDefaultVersionWhenAdditionalPropertiesVersionIsNull" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="tests if a null in addition properties artifactVersion results in default version" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usesDefaultVersionWhenAdditionalPropertiesVersionIsNull -->
        <test-method status="PASS" signature="toVarNameShouldAvoidOverloadingGetClassMethod()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenTest@3766c667]" name="toVarNameShouldAvoidOverloadingGetClassMethod" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVarNameShouldAvoidOverloadingGetClassMethod -->
      </class> <!-- org.openapitools.codegen.java.AbstractJavaCodegenTest -->
      <class name="org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest">
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="25" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="25" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="26" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="26" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="33" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="31" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="28" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="24" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkInvalidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkInvalidCombinations" duration-ms="25" started-at="2023-04-09T10:14:56 UTC" data-provider="invalid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInvalidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="106" started-at="2023-04-09T10:14:56 UTC" data-provider="valid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="115" started-at="2023-04-09T10:14:56 UTC" data-provider="valid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="115" started-at="2023-04-09T10:14:56 UTC" data-provider="valid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="112" started-at="2023-04-09T10:14:56 UTC" data-provider="valid" finished-at="2023-04-09T10:14:56 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="114" started-at="2023-04-09T10:14:56 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="119" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-client]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="65" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="81" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="74" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="80" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="84" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="74" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[se]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="121" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="104" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="97" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:57 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:57 UTC" finished-at="2023-04-09T10:14:57 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="102" started-at="2023-04-09T10:14:57 UTC" data-provider="valid" finished-at="2023-04-09T10:14:58 UTC">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="96" started-at="2023-04-09T10:14:58 UTC" data-provider="valid" finished-at="2023-04-09T10:14:58 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jakarta]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkValidCombinations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="checkValidCombinations" duration-ms="97" started-at="2023-04-09T10:14:58 UTC" data-provider="valid" finished-at="2023-04-09T10:14:58 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[javax]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[java-helidon-server]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[mp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidCombinations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest@78c1a023]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.openapitools.codegen.java.helidon.JavaHelidonCommonCodegenPackagePrefixTest -->
      <class name="org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert an array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="beginDecimalNameTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="beginDecimalNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a name starting with decimal" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beginDecimalNameTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="complexListPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="complexPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="listPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest@a8a1822]" name="simpleModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a simple TypeScript Nestjs model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptnestjs.TypeScriptNestjsModelTest -->
      <class name="org.openapitools.codegen.dart.dio.DartDioClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioClientOptionsTest@63cb1a9a]" name="checkOptionsProcessing" duration-ms="5" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioClientOptionsTest@63cb1a9a]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
      </class> <!-- org.openapitools.codegen.dart.dio.DartDioClientOptionsTest -->
      <class name="org.openapitools.codegen.ruby.AbstractRubyCodegenTest">
        <test-method status="PASS" signature="testEscapeUnsafeCharacters()[pri:0, instance:org.openapitools.codegen.ruby.AbstractRubyCodegenTest@64f3ca6]" name="testEscapeUnsafeCharacters" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeUnsafeCharacters -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.ruby.AbstractRubyCodegenTest@64f3ca6]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.openapitools.codegen.ruby.AbstractRubyCodegenTest -->
      <class name="org.openapitools.codegen.languages.features.DocumentationProviderFeaturesTest">
        <test-method status="PASS" signature="generateDocumentationProviderTable()[pri:0, instance:org.openapitools.codegen.languages.features.DocumentationProviderFeaturesTest@7a7bd9a8]" name="generateDocumentationProviderTable" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateDocumentationProviderTable -->
        <test-method status="PASS" signature="generateAnnotationLibraryTable()[pri:1, instance:org.openapitools.codegen.languages.features.DocumentationProviderFeaturesTest@7a7bd9a8]" name="generateAnnotationLibraryTable" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateAnnotationLibraryTable -->
      </class> <!-- org.openapitools.codegen.languages.features.DocumentationProviderFeaturesTest -->
      <class name="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest@286fcc09]" name="checkOptionsHelp" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest@286fcc09]" name="checkOptionsProcessing" duration-ms="5" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientOptionsTest -->
      <class name="org.openapitools.codegen.mysql.MysqlSchemaOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaOptionsTest@424632a]" name="checkOptionsHelp" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.mysql.MysqlSchemaOptionsTest@424632a]" name="checkOptionsProcessing" duration-ms="2" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.mysql.MysqlSchemaOptionsTest -->
      <class name="org.openapitools.codegen.protobuf.ProtobufSchemaCodegenTest">
        <test-method status="PASS" signature="testCodeGenWithAllOf()[pri:0, instance:org.openapitools.codegen.protobuf.ProtobufSchemaCodegenTest@5655d64]" name="testCodeGenWithAllOf" duration-ms="58" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCodeGenWithAllOf -->
        <test-method status="PASS" signature="testFeatureSet()[pri:0, instance:org.openapitools.codegen.protobuf.ProtobufSchemaCodegenTest@5655d64]" name="testFeatureSet" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeatureSet -->
      </class> <!-- org.openapitools.codegen.protobuf.ProtobufSchemaCodegenTest -->
      <class name="org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest">
        <test-method status="PASS" signature="arrayAsSetModelTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="arrayAsSetModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert an array model with unique items to set" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayAsSetModelTest -->
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert an array model" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="complexMapPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:39 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" description="convert a model with complex properties" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="complexSetPropertyTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="complexSetPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" description="convert a model with set (unique array) property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexSetPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a map model" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="mapPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest@5f77b570]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" description="convert a simple scala model" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- org.openapitools.codegen.scalahttpclient.ScalaHttpClientModelTest -->
      <class name="org.openapitools.codegen.eiffel.EiffelClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.eiffel.EiffelClientCodegenTest@53a7a60c]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.eiffel.EiffelClientCodegenTest@53a7a60c]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.eiffel.EiffelClientCodegenTest@53a7a60c]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.eiffel.EiffelClientCodegenTest -->
      <class name="org.openapitools.codegen.kotlin.jvm_volley.KotlinJvmVolleyModelCodegenTest">
        <test-method status="PASS" signature="modelsWithRoomModels()[pri:0, instance:org.openapitools.codegen.kotlin.jvm_volley.KotlinJvmVolleyModelCodegenTest@5e5b49df]" name="modelsWithRoomModels" duration-ms="65" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsWithRoomModels -->
        <test-method status="PASS" signature="modelsWithoutRoomModels()[pri:0, instance:org.openapitools.codegen.kotlin.jvm_volley.KotlinJvmVolleyModelCodegenTest@5e5b49df]" name="modelsWithoutRoomModels" duration-ms="45" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsWithoutRoomModels -->
      </class> <!-- org.openapitools.codegen.kotlin.jvm_volley.KotlinJvmVolleyModelCodegenTest -->
      <class name="org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest">
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRecommendations" duration-ms="7" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRecommendations" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRule" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testDefaultRecommendationApacheNginx" duration-ms="4" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testDefaultRecommendationApacheNginx" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(java.lang.String,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest@43fda8d9]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
      </class> <!-- org.openapitools.codegen.validations.oas.OpenApiParameterValidationsTest -->
      <class name="org.openapitools.codegen.dart.DartClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.dart.DartClientCodegenTest@4968bd4e]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testKeywords()[pri:0, instance:org.openapitools.codegen.dart.DartClientCodegenTest@4968bd4e]" name="testKeywords" duration-ms="2" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKeywords -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.dart.DartClientCodegenTest@4968bd4e]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.dart.DartClientCodegenTest@4968bd4e]" name="testSettersForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.dart.DartClientCodegenTest -->
      <class name="org.openapitools.codegen.templating.mustache.SnakecaseLambdaTest">
        <test-method status="PASS" signature="snakecaseTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.SnakecaseLambdaTest@4f186450]" name="snakecaseTest" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- snakecaseTest -->
      </class> <!-- org.openapitools.codegen.templating.mustache.SnakecaseLambdaTest -->
      <class name="org.openapitools.codegen.DefaultCodegenTest">
        <test-method status="PASS" signature="arrayInnerReferencedSchemaMarkedAsModel_20()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="arrayInnerReferencedSchemaMarkedAsModel_20" duration-ms="6" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayInnerReferencedSchemaMarkedAsModel_20 -->
        <test-method status="PASS" signature="arrayInnerReferencedSchemaMarkedAsModel_30()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="arrayInnerReferencedSchemaMarkedAsModel_30" duration-ms="3" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayInnerReferencedSchemaMarkedAsModel_30 -->
        <test-method status="PASS" signature="arrayModelHasValidation()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="arrayModelHasValidation" duration-ms="4" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelHasValidation -->
        <test-method status="PASS" signature="importMapping()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="importMapping" duration-ms="3" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- importMapping -->
        <test-method status="PASS" signature="convertApiNameWithSuffix()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="convertApiNameWithSuffix" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertApiNameWithSuffix -->
        <test-method status="PASS" signature="convertApiNameWithEmptySuffix()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="convertApiNameWithEmptySuffix" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertApiNameWithEmptySuffix -->
        <test-method status="PASS" signature="commonLambdasRegistrationTest()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="commonLambdasRegistrationTest" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commonLambdasRegistrationTest -->
        <test-method status="PASS" signature="inlineAllOfSchemaDoesNotThrowException()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="inlineAllOfSchemaDoesNotThrowException" duration-ms="5" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineAllOfSchemaDoesNotThrowException -->
        <test-method status="PASS" signature="integerSchemaPropertyAndModelTest()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="integerSchemaPropertyAndModelTest" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerSchemaPropertyAndModelTest -->
        <test-method status="PASS" signature="longSchemaPropertyAndModelTest()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="longSchemaPropertyAndModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSchemaPropertyAndModelTest -->
        <test-method status="PASS" signature="mapParamImportInnerObject()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="mapParamImportInnerObject" duration-ms="13" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapParamImportInnerObject -->
        <test-method status="PASS" signature="modelDoNotContainInheritedVars()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="modelDoNotContainInheritedVars" duration-ms="6" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelDoNotContainInheritedVars -->
        <test-method status="PASS" signature="modelWithPrefixDoNotContainInheritedVars()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="modelWithPrefixDoNotContainInheritedVars" duration-ms="5" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelWithPrefixDoNotContainInheritedVars -->
        <test-method status="PASS" signature="modelWithSuffixDoNotContainInheritedVars()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="modelWithSuffixDoNotContainInheritedVars" duration-ms="5" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelWithSuffixDoNotContainInheritedVars -->
        <test-method status="PASS" signature="numberDoubleSchemaPropertyAndModelTest()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="numberDoubleSchemaPropertyAndModelTest" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numberDoubleSchemaPropertyAndModelTest -->
        <test-method status="PASS" signature="numberFloatSchemaPropertyAndModelTest()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="numberFloatSchemaPropertyAndModelTest" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numberFloatSchemaPropertyAndModelTest -->
        <test-method status="PASS" signature="objectQueryParamIdentifyAsObject()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="objectQueryParamIdentifyAsObject" duration-ms="5" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectQueryParamIdentifyAsObject -->
        <test-method status="PASS" signature="numberSchemaPropertyAndModelTest()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="numberSchemaPropertyAndModelTest" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numberSchemaPropertyAndModelTest -->
        <test-method status="PASS" signature="postProcessModelsEnumWithExtension()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="postProcessModelsEnumWithExtension" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProcessModelsEnumWithExtension -->
        <test-method status="PASS" signature="postProcessModelsEnumWithPrefixRemoved()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="postProcessModelsEnumWithPrefixRemoved" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProcessModelsEnumWithPrefixRemoved -->
        <test-method status="PASS" signature="schemaMapping()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="schemaMapping" duration-ms="2" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- schemaMapping -->
        <test-method status="PASS" signature="postProcessModelsEnumWithoutPrefixRemoved()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="postProcessModelsEnumWithoutPrefixRemoved" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProcessModelsEnumWithoutPrefixRemoved -->
        <test-method status="PASS" signature="testAdditionalPropertiesAnyType()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesAnyType" duration-ms="3" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesAnyType -->
        <test-method status="PASS" signature="testAdditionalPropertiesPresentInModelProperties()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesPresentInModelProperties" duration-ms="20" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPresentInModelProperties -->
        <test-method status="PASS" signature="testAdditionalPropertiesPresentInModels()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesPresentInModels" duration-ms="32" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPresentInModels -->
        <test-method status="PASS" signature="testAdditionalPropertiesPresentInParameters()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesPresentInParameters" duration-ms="27" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPresentInParameters -->
        <test-method status="PASS" signature="testAdditionalPropertiesPresentInResponses()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesPresentInResponses" duration-ms="23" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPresentInResponses -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testAdditionalPropertiesV2SpecDisallowAdditionalPropertiesIfNotPresentFalse()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesV2SpecDisallowAdditionalPropertiesIfNotPresentFalse" duration-ms="5" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesV2SpecDisallowAdditionalPropertiesIfNotPresentFalse -->
        <test-method status="PASS" signature="testAdditionalPropertiesV2SpecDisallowAdditionalPropertiesIfNotPresentTrue()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesV2SpecDisallowAdditionalPropertiesIfNotPresentTrue" duration-ms="5" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesV2SpecDisallowAdditionalPropertiesIfNotPresentTrue -->
        <test-method status="PASS" signature="testAdditionalPropertiesV3SpecDisallowAdditionalPropertiesIfNotPresentFalse()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesV3SpecDisallowAdditionalPropertiesIfNotPresentFalse" duration-ms="125" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesV3SpecDisallowAdditionalPropertiesIfNotPresentFalse -->
        <test-method status="PASS" signature="testAdditionalPropertiesV3SpecDisallowAdditionalPropertiesIfNotPresentTrue()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAdditionalPropertiesV3SpecDisallowAdditionalPropertiesIfNotPresentTrue" duration-ms="75" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesV3SpecDisallowAdditionalPropertiesIfNotPresentTrue -->
        <test-method status="PASS" signature="testAlias()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAlias" duration-ms="6" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlias -->
        <test-method status="PASS" signature="testAllOfDefaultEnumType()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAllOfDefaultEnumType" duration-ms="15" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllOfDefaultEnumType -->
        <test-method status="PASS" signature="testAllOfParent()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAllOfParent" duration-ms="8" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllOfParent -->
        <test-method status="PASS" signature="testAllOfRequired()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAllOfRequired" duration-ms="4" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllOfRequired -->
        <test-method status="PASS" signature="testAllOfSingleAndDoubleRefWithOwnPropsNoDiscriminator()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAllOfSingleAndDoubleRefWithOwnPropsNoDiscriminator" duration-ms="8" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllOfSingleAndDoubleRefWithOwnPropsNoDiscriminator -->
        <test-method status="PASS" signature="testAllOfSingleRefNoOwnProps()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAllOfSingleRefNoOwnProps" duration-ms="5" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllOfSingleRefNoOwnProps -->
        <test-method status="PASS" signature="testAllParents()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAllParents" duration-ms="8" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllParents -->
        <test-method status="PASS" signature="testAnySchemaWithIneffectiveConstraints()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAnySchemaWithIneffectiveConstraints" duration-ms="8" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnySchemaWithIneffectiveConstraints -->
        <test-method status="PASS" signature="testArraySchemaIsNotIncludedInAliases()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testArraySchemaIsNotIncludedInAliases" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArraySchemaIsNotIncludedInAliases -->
        <test-method status="PASS" signature="testArraySchemaWithIneffectiveConstraints()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testArraySchemaWithIneffectiveConstraints" duration-ms="9" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArraySchemaWithIneffectiveConstraints -->
        <test-method status="PASS" signature="testAssigning310SpecWorks()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testAssigning310SpecWorks" duration-ms="27" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAssigning310SpecWorks -->
        <test-method status="PASS" signature="testBodyAndResponseGetHasValidation()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testBodyAndResponseGetHasValidation" duration-ms="117" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBodyAndResponseGetHasValidation -->
        <test-method status="PASS" signature="testBooleanSchemaWithIneffectiveConstraints()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testBooleanSchemaWithIneffectiveConstraints" duration-ms="5" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanSchemaWithIneffectiveConstraints -->
        <test-method status="PASS" signature="testBooleansSetForIntSchemas()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testBooleansSetForIntSchemas" duration-ms="9" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleansSetForIntSchemas -->
        <test-method status="PASS" signature="testByteArrayTypeInSchemas()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testByteArrayTypeInSchemas" duration-ms="4" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testByteArrayTypeInSchemas -->
        <test-method status="PASS" signature="testCallbacks()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testCallbacks" duration-ms="11" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCallbacks -->
        <test-method status="PASS" signature="testCircularReferencesDetection()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testCircularReferencesDetection" duration-ms="1" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircularReferencesDetection -->
        <test-method status="PASS" signature="testComposedModelTypes()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedModelTypes" duration-ms="17" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedModelTypes -->
        <test-method status="PASS" signature="testComposedRequestBodyTypes()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedRequestBodyTypes" duration-ms="21" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedRequestBodyTypes -->
        <test-method status="PASS" signature="testComposedRequestQueryParamTypes()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedRequestQueryParamTypes" duration-ms="19" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedRequestQueryParamTypes -->
        <test-method status="PASS" signature="testComposedResponseTypes()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedResponseTypes" duration-ms="21" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedResponseTypes -->
        <test-method status="PASS" signature="testComposedSchemaAllOfDiscriminatorMap()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaAllOfDiscriminatorMap" duration-ms="11" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaAllOfDiscriminatorMap -->
        <test-method status="PASS" signature="testComposedSchemaAllOfDiscriminatorMapLegacy()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaAllOfDiscriminatorMapLegacy" duration-ms="9" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaAllOfDiscriminatorMapLegacy -->
        <test-method status="PASS" signature="testComposedSchemaAllOfHierarchy()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaAllOfHierarchy" duration-ms="9" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaAllOfHierarchy -->
        <test-method status="PASS" signature="testComposedSchemaAnyOfDiscriminatorMap()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaAnyOfDiscriminatorMap" duration-ms="18" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaAnyOfDiscriminatorMap -->
        <test-method status="PASS" signature="testComposedSchemaAnyOfDiscriminatorsInvalid()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaAnyOfDiscriminatorsInvalid" duration-ms="15" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaAnyOfDiscriminatorsInvalid -->
        <test-method status="PASS" signature="testComposedSchemaMyPetsOneOfDiscriminatorMap()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaMyPetsOneOfDiscriminatorMap" duration-ms="10" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaMyPetsOneOfDiscriminatorMap -->
        <test-method status="PASS" signature="testComposedSchemaOneOfDiscriminatorMap()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaOneOfDiscriminatorMap" duration-ms="21" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaOneOfDiscriminatorMap -->
        <test-method status="PASS" signature="testComposedSchemaOneOfDiscriminatorsInvalid()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaOneOfDiscriminatorsInvalid" duration-ms="16" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaOneOfDiscriminatorsInvalid -->
        <test-method status="PASS" signature="testComposedSchemaOneOfWithProperties()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testComposedSchemaOneOfWithProperties" duration-ms="4" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemaOneOfWithProperties -->
        <test-method status="PASS" signature="testConsistentParameterNameAfterUniquenessRename()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testConsistentParameterNameAfterUniquenessRename" duration-ms="1" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConsistentParameterNameAfterUniquenessRename -->
        <test-method status="PASS" signature="testCookieParametersGetHasValidation()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testCookieParametersGetHasValidation" duration-ms="97" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCookieParametersGetHasValidation -->
        <test-method status="PASS" signature="testDateTimeFormParameterHasDefaultValue()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testDateTimeFormParameterHasDefaultValue" duration-ms="7" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateTimeFormParameterHasDefaultValue -->
        <test-method status="PASS" signature="testDeeplyNestedAdditionalPropertiesImports()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testDeeplyNestedAdditionalPropertiesImports" duration-ms="4" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeeplyNestedAdditionalPropertiesImports -->
        <test-method status="PASS" signature="testDefaultResponseShouldBeLast()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testDefaultResponseShouldBeLast" duration-ms="1" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultResponseShouldBeLast -->
        <test-method status="PASS" signature="testDeprecatedModel()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testDeprecatedModel" duration-ms="3" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeprecatedModel -->
        <test-method status="PASS" signature="testDeprecatedProperty()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testDeprecatedProperty" duration-ms="4" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeprecatedProperty -->
        <test-method status="PASS" signature="testDeprecatedRef()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testDeprecatedRef" duration-ms="3" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeprecatedRef -->
        <test-method status="PASS" signature="testDiscriminator()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testDiscriminator" duration-ms="48" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiscriminator -->
        <test-method status="PASS" signature="testDiscriminatorWithCustomMapping()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testDiscriminatorWithCustomMapping" duration-ms="6" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiscriminatorWithCustomMapping -->
        <test-method status="PASS" signature="testEnsureNoDuplicateProduces()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testEnsureNoDuplicateProduces" duration-ms="3" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnsureNoDuplicateProduces -->
        <test-method status="PASS" signature="testEnumImports()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testEnumImports" duration-ms="5" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumImports -->
        <test-method status="PASS" signature="testEscapeText()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testEscapeText" duration-ms="1" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeText -->
        <test-method status="PASS" signature="testExample1()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testExample1" duration-ms="5" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExample1 -->
        <test-method status="PASS" signature="testEscapeTextWhileAllowingNewLines()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testEscapeTextWhileAllowingNewLines" duration-ms="0" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeTextWhileAllowingNewLines -->
        <test-method status="PASS" signature="testExample2()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testExample2" duration-ms="5" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExample2 -->
        <test-method status="PASS" signature="testExample3()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testExample3" duration-ms="5" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExample3 -->
        <test-method status="PASS" signature="testExample4()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testExample4" duration-ms="5" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExample4 -->
        <test-method status="PASS" signature="testFormComposedSchema()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testFormComposedSchema" duration-ms="9" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFormComposedSchema -->
        <test-method status="PASS" signature="testFormParameterHasDefaultValue()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testFormParameterHasDefaultValue" duration-ms="48" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFormParameterHasDefaultValue -->
        <test-method status="PASS" signature="testFreeFormSchemas()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testFreeFormSchemas" duration-ms="62" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFreeFormSchemas -->
        <test-method status="PASS" signature="testFromPropertyRequiredAndOptional()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testFromPropertyRequiredAndOptional" duration-ms="4" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromPropertyRequiredAndOptional -->
        <test-method status="PASS" signature="testGetConsumesInfoAndGetProducesInfo()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testGetConsumesInfoAndGetProducesInfo" duration-ms="2" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConsumesInfoAndGetProducesInfo -->
        <test-method status="PASS" signature="testGetProducesInfo()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testGetProducesInfo" duration-ms="5" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProducesInfo -->
        <test-method status="PASS" signature="testGetSchemaTypeWithComposedSchemaWithOneOf()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testGetSchemaTypeWithComposedSchemaWithOneOf" duration-ms="8" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSchemaTypeWithComposedSchemaWithOneOf -->
        <test-method status="PASS" signature="testHasBodyParameter()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasBodyParameter" duration-ms="0" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasBodyParameter -->
        <test-method status="PASS" signature="testHasRequiredInModel()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasRequiredInModel" duration-ms="32" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasRequiredInModel -->
        <test-method status="PASS" signature="testHasRequiredInParameters()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasRequiredInParameters" duration-ms="43" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasRequiredInParameters -->
        <test-method status="PASS" signature="testHasRequiredInProperties()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasRequiredInProperties" duration-ms="36" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasRequiredInProperties -->
        <test-method status="PASS" signature="testHasRequiredInResponses()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasRequiredInResponses" duration-ms="42" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasRequiredInResponses -->
        <test-method status="PASS" signature="testHasVarsInModel()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasVarsInModel" duration-ms="20" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasVarsInModel -->
        <test-method status="PASS" signature="testHasVarsInParameter()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasVarsInParameter" duration-ms="21" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasVarsInParameter -->
        <test-method status="PASS" signature="testHasVarsInProperty()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasVarsInProperty" duration-ms="20" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasVarsInProperty -->
        <test-method status="PASS" signature="testHasVarsInResponse()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHasVarsInResponse" duration-ms="21" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasVarsInResponse -->
        <test-method status="PASS" signature="testHeaderParametersGetHasValidation()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testHeaderParametersGetHasValidation" duration-ms="112" started-at="2023-04-09T10:14:40 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeaderParametersGetHasValidation -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testInlineEnumType()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testInlineEnumType" duration-ms="10" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineEnumType -->
        <test-method status="PASS" signature="testIntegerSchemaWithIneffectiveConstraints()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testIntegerSchemaWithIneffectiveConstraints" duration-ms="4" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntegerSchemaWithIneffectiveConstraints -->
        <test-method status="PASS" signature="testIsXPresence()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testIsXPresence" duration-ms="97" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsXPresence -->
        <test-method status="PASS" signature="testItemsPresent()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testItemsPresent" duration-ms="20" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItemsPresent -->
        <test-method status="PASS" signature="testLeadingSlashIsAddedIfMissing()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testLeadingSlashIsAddedIfMissing" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeadingSlashIsAddedIfMissing -->
        <test-method status="PASS" signature="testModelGetHasValidation()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testModelGetHasValidation" duration-ms="92" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelGetHasValidation -->
        <test-method status="PASS" signature="testMultipleSecuritySchemes()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testMultipleSecuritySchemes" duration-ms="15" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleSecuritySchemes -->
        <test-method status="PASS" signature="testNullSchemaWithIneffectiveConstraints()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testNullSchemaWithIneffectiveConstraints" duration-ms="4" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullSchemaWithIneffectiveConstraints -->
        <test-method status="PASS" signature="testNullableProperty()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testNullableProperty" duration-ms="5" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullableProperty -->
        <test-method status="PASS" signature="testOauthMultipleFlows()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testOauthMultipleFlows" duration-ms="3" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOauthMultipleFlows -->
        <test-method status="PASS" signature="testObjectSchemaWithIneffectiveConstraints()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testObjectSchemaWithIneffectiveConstraints" duration-ms="5" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testObjectSchemaWithIneffectiveConstraints -->
        <test-method status="PASS" signature="testOriginalOpenApiDocumentVersion()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testOriginalOpenApiDocumentVersion" duration-ms="154" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOriginalOpenApiDocumentVersion -->
        <test-method status="PASS" signature="testParameterEmptyDescription()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testParameterEmptyDescription" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[body in fromRequestBody cannot be null!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: body in fromRequestBody cannot be null!
at org.openapitools.codegen.DefaultCodegen.fromRequestBody(DefaultCodegen.java:7341)
at org.openapitools.codegen.DefaultCodegenTest.testParameterEmptyDescription(DefaultCodegenTest.java:112)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParameterEmptyDescription -->
        <test-method status="PASS" signature="testParentName()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testParentName" duration-ms="5" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParentName -->
        <test-method status="PASS" signature="testPathParametersGetHasValidation()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testPathParametersGetHasValidation" duration-ms="73" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPathParametersGetHasValidation -->
        <test-method status="PASS" signature="testPropertyGetHasValidation()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testPropertyGetHasValidation" duration-ms="69" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropertyGetHasValidation -->
        <test-method status="PASS" signature="testQueryParametersGetHasValidation()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testQueryParametersGetHasValidation" duration-ms="73" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQueryParametersGetHasValidation -->
        <test-method status="PASS" signature="testReferencedEnumType()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testReferencedEnumType" duration-ms="9" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferencedEnumType -->
        <test-method status="PASS" signature="testRemoveOperationIdPrefix()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testRemoveOperationIdPrefix" duration-ms="4" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveOperationIdPrefix -->
        <test-method status="PASS" signature="testRequestBodyContent()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testRequestBodyContent" duration-ms="14" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestBodyContent -->
        <test-method status="PASS" signature="testRequestParameterContent()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testRequestParameterContent" duration-ms="11" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestParameterContent -->
        <test-method status="PASS" signature="testResponseContentAndHeader()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testResponseContentAndHeader" duration-ms="11" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseContentAndHeader -->
        <test-method status="PASS" signature="testResponseWithNoSchemaInHeaders()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testResponseWithNoSchemaInHeaders" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseWithNoSchemaInHeaders -->
        <test-method status="PASS" signature="testResponses()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testResponses" duration-ms="23" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponses -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testStringSchemaWithIneffectiveConstraints()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testStringSchemaWithIneffectiveConstraints" duration-ms="5" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStringSchemaWithIneffectiveConstraints -->
        <test-method status="PASS" signature="testUnalias()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testUnalias" duration-ms="4" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnalias -->
        <test-method status="PASS" signature="testUniquenessRenameOfFormParameters()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testUniquenessRenameOfFormParameters" duration-ms="4" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUniquenessRenameOfFormParameters -->
        <test-method status="PASS" signature="testUseOneOfInterfaces()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testUseOneOfInterfaces" duration-ms="8" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseOneOfInterfaces -->
        <test-method status="PASS" signature="testVarsAndRequiredVarsPresent()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="testVarsAndRequiredVarsPresent" duration-ms="18" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVarsAndRequiredVarsPresent -->
        <test-method status="PASS" signature="updateCodegenPropertyEnum()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="updateCodegenPropertyEnum" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCodegenPropertyEnum -->
        <test-method status="PASS" signature="updateCodegenPropertyEnumWithPrefixRemoved()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="updateCodegenPropertyEnumWithPrefixRemoved" duration-ms="1" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCodegenPropertyEnumWithPrefixRemoved -->
        <test-method status="PASS" signature="updateCodegenPropertyEnumWithExtension()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="updateCodegenPropertyEnumWithExtension" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCodegenPropertyEnumWithExtension -->
        <test-method status="PASS" signature="updateCodegenPropertyEnumWithoutPrefixRemoved()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="updateCodegenPropertyEnumWithoutPrefixRemoved" duration-ms="0" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCodegenPropertyEnumWithoutPrefixRemoved -->
        <test-method status="PASS" signature="verifyXDiscriminatorValue()[pri:0, instance:org.openapitools.codegen.DefaultCodegenTest@669a46ae]" name="verifyXDiscriminatorValue" duration-ms="8" started-at="2023-04-09T10:14:41 UTC" finished-at="2023-04-09T10:14:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyXDiscriminatorValue -->
      </class> <!-- org.openapitools.codegen.DefaultCodegenTest -->
      <class name="org.openapitools.codegen.dart.DartModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="arrayModelTest" duration-ms="2" started-at="2023-04-09T10:14:42 UTC" description="convert an array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListProperty()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="complexListProperty" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListProperty -->
        <test-method status="PASS" signature="complexMapSchema()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="complexMapSchema" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapSchema -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@40936ad2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@1799554e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@201d7b90]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@642dbc1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@1a16a28f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@64d479ba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@7b85d47d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@6b5e58c4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@236e6335]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@75fb711]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@23dec7b9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@5f1d5fca]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@636a800c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@2a8f8237]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@23edf7ce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@43bc67f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@2691ee6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@48245c0e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@766364f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@3762c65f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@782cdf74]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@3953d471]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@1b7bab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@70cf3708]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@5052e992]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@351dada5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@a4b08f6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@3da10995]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertEnumVarNames(org.openapitools.codegen.dart.DartModelTest$EnumVarName)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertEnumVarNames" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test enum names are correctly escaped" data-provider="enumVarNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.dart.DartModelTest$EnumVarName@30c0eb3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertEnumVarNames -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[double_]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[double_]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[string]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[string]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[dynamic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dynamic_]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[FOO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FOO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[FOO_BAR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FOO_BAR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[FOO_BAR_BAZ_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FOO_BAR_BAZ_]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[double_]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_hello]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[123hello]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[n123hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_5FOO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[n5fOO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_FOO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FOO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_123hello]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[n123hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_$foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dollarFoo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[$special[property.name]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dollarSpecialLeftSquareBracketPropertyPeriodNameRightSquareBracket]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_$_foo_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dollarFoo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="convertVarName(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="convertVarName" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="test variable names are correctly escaped" data-provider="varNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo bar]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fooBar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="dateTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="dateTest" duration-ms="3" started-at="2023-04-09T10:14:42 UTC" description="returns DateTime when using `--model-name-prefix`" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="mapPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[/sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample__name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[\sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[\Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ModelList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[List]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ModelList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[File]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestModelFile]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Client]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestModelClient]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly generate model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ModelString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelPrefixSuffixTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="modelPrefixSuffixTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="model names support `--model-name-prefix` and `--model-name-suffix`" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelPrefixSuffixTest -->
        <test-method status="PASS" signature="setPropertyTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="setPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with set property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPropertyTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="simpleModelTest" duration-ms="2" started-at="2023-04-09T10:14:42 UTC" description="convert a simple php model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="testEnumValues()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="testEnumValues" duration-ms="3" started-at="2023-04-09T10:14:42 UTC" description="support normal enum values" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumValues -->
        <test-method status="PASS" signature="testXEnumValuesExtension()[pri:0, instance:org.openapitools.codegen.dart.DartModelTest@11efc5da]" name="testXEnumValuesExtension" duration-ms="3" started-at="2023-04-09T10:14:42 UTC" description="support for x-enum-values extension" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXEnumValuesExtension -->
      </class> <!-- org.openapitools.codegen.dart.DartModelTest -->
      <class name="org.openapitools.codegen.utils.OnceLoggerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="setUp" is-config="true" duration-ms="23" started-at="2023-04-09T10:14:25 UTC" finished-at="2023-04-09T10:14:25 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="onceLogsMessagesOnceWithinTimeLimit()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="onceLogsMessagesOnceWithinTimeLimit" duration-ms="8" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onceLogsMessagesOnceWithinTimeLimit -->
        <test-method status="PASS" signature="beforeEach()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="beforeEach" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEach -->
        <test-method status="PASS" signature="afterEach()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="afterEach" is-config="true" duration-ms="3" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method status="PASS" signature="onceLogsOneMessageByDefault()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="onceLogsOneMessageByDefault" duration-ms="2" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onceLogsOneMessageByDefault -->
        <test-method status="PASS" signature="beforeEach()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="beforeEach" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEach -->
        <test-method status="PASS" signature="beforeEach()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="beforeEach" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEach -->
        <test-method status="PASS" signature="afterEach()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="afterEach" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method status="PASS" signature="afterEach()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="afterEach" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method status="PASS" signature="beforeEach()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="beforeEach" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEach -->
        <test-method status="PASS" signature="onceReturnsDecoratedLogger()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="onceReturnsDecoratedLogger" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onceReturnsDecoratedLogger -->
        <test-method status="PASS" signature="afterEach()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="afterEach" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method status="PASS" signature="onceReturnsOriginalLoggerWhenDisabled()[pri:0, instance:org.openapitools.codegen.utils.OnceLoggerTest@68b565ae]" name="onceReturnsOriginalLoggerWhenDisabled" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onceReturnsOriginalLoggerWhenDisabled -->
      </class> <!-- org.openapitools.codegen.utils.OnceLoggerTest -->
      <class name="org.openapitools.codegen.DefaultGeneratorTest">
        <test-method status="PASS" signature="dryRunWithApisOnly()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="dryRunWithApisOnly" duration-ms="14" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dryRunWithApisOnly -->
        <test-method status="PASS" signature="dryRunWithModelsOnly()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="dryRunWithModelsOnly" duration-ms="15" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dryRunWithModelsOnly -->
        <test-method status="PASS" signature="dryRunWithSupportFilesSelections()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="dryRunWithSupportFilesSelections" duration-ms="17" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dryRunWithSupportFilesSelections -->
        <test-method status="PASS" signature="supportCustomTemplateEngine()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="supportCustomTemplateEngine" duration-ms="38" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supportCustomTemplateEngine -->
        <test-method status="PASS" signature="testBuiltinLibraryTemplates()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testBuiltinLibraryTemplates" duration-ms="36" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuiltinLibraryTemplates -->
        <test-method status="PASS" signature="testBuiltinNonLibraryTemplates()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testBuiltinNonLibraryTemplates" duration-ms="36" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuiltinNonLibraryTemplates -->
        <test-method status="PASS" signature="testCustomLibraryTemplates()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testCustomLibraryTemplates" duration-ms="49" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomLibraryTemplates -->
        <test-method status="PASS" signature="testCustomNonLibraryTemplates()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testCustomNonLibraryTemplates" duration-ms="43" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomNonLibraryTemplates -->
        <test-method status="PASS" signature="testFilesAreNeverOverwritten()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testFilesAreNeverOverwritten" duration-ms="117" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilesAreNeverOverwritten -->
        <test-method status="PASS" signature="testHandlesRelativeUrlsInServers()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testHandlesRelativeUrlsInServers" duration-ms="2" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandlesRelativeUrlsInServers -->
        <test-method status="PASS" signature="testHandlesTrailingSlashInServers()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testHandlesTrailingSlashInServers" duration-ms="2" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandlesTrailingSlashInServers -->
        <test-method status="PASS" signature="testIgnoreFileProcessing()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testIgnoreFileProcessing" duration-ms="167" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIgnoreFileProcessing -->
        <test-method status="PASS" signature="testNonStrictProcessPaths()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testNonStrictProcessPaths" duration-ms="1" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonStrictProcessPaths -->
        <test-method status="PASS" signature="testProcessPaths()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testProcessPaths" duration-ms="1" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:01 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessPaths -->
        <test-method status="PASS" signature="testProcessUserDefinedTemplatesWithConfig()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testProcessUserDefinedTemplatesWithConfig" duration-ms="6030" started-at="2023-04-09T10:15:01 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessUserDefinedTemplatesWithConfig -->
        <test-method status="PASS" signature="testRecursionBug4650()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testRecursionBug4650" duration-ms="5" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecursionBug4650 -->
        <test-method status="PASS" signature="testRefModelValidationProperties()[pri:0, instance:org.openapitools.codegen.DefaultGeneratorTest@3ae126d1]" name="testRefModelValidationProperties" duration-ms="3" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefModelValidationProperties -->
      </class> <!-- org.openapitools.codegen.DefaultGeneratorTest -->
      <class name="org.openapitools.codegen.haskellservant.HaskellModelTest">
        <test-method status="PASS" signature="modelTest()[pri:0, instance:org.openapitools.codegen.haskellservant.HaskellModelTest@ef60710]" name="modelTest" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" description="convert a haskell model with dots" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelTest -->
      </class> <!-- org.openapitools.codegen.haskellservant.HaskellModelTest -->
      <class name="org.openapitools.codegen.scala.SttpCodegenTest">
        <test-method status="PASS" signature="encodePath()[pri:0, instance:org.openapitools.codegen.scala.SttpCodegenTest@31a4db4f]" name="encodePath" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encodePath -->
        <test-method status="PASS" signature="typeByteArray()[pri:0, instance:org.openapitools.codegen.scala.SttpCodegenTest@31a4db4f]" name="typeByteArray" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeByteArray -->
        <test-method status="PASS" signature="verifyOperatorName()[pri:0, instance:org.openapitools.codegen.scala.SttpCodegenTest@31a4db4f]" name="verifyOperatorName" duration-ms="8" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOperatorName -->
      </class> <!-- org.openapitools.codegen.scala.SttpCodegenTest -->
      <class name="org.openapitools.codegen.html.StaticHtmlGeneratorTest">
        <test-method status="PASS" signature="testAdditionalPropertiesFalse()[pri:0, instance:org.openapitools.codegen.html.StaticHtmlGeneratorTest@41b92ef5]" name="testAdditionalPropertiesFalse" duration-ms="11" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesFalse -->
        <test-method status="PASS" signature="testFromPropertyWithUnderscores()[pri:0, instance:org.openapitools.codegen.html.StaticHtmlGeneratorTest@41b92ef5]" name="testFromPropertyWithUnderscores" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" description="ensure that snake_case property names wont be converted to snakeUnderscorecase" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromPropertyWithUnderscores -->
        <test-method status="PASS" signature="testSpecWithoutSchema()[pri:0, instance:org.openapitools.codegen.html.StaticHtmlGeneratorTest@41b92ef5]" name="testSpecWithoutSchema" duration-ms="9" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSpecWithoutSchema -->
      </class> <!-- org.openapitools.codegen.html.StaticHtmlGeneratorTest -->
      <class name="org.openapitools.codegen.asciidoc.IncludeMarkupFilterTest">
        <test-method status="PASS" signature="testIncludeMarkupFilterDoesNotIncludeMissingFile()[pri:0, instance:org.openapitools.codegen.asciidoc.IncludeMarkupFilterTest@28eb8bad]" name="testIncludeMarkupFilterDoesNotIncludeMissingFile" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncludeMarkupFilterDoesNotIncludeMissingFile -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.asciidoc.IncludeMarkupFilterTest@28eb8bad]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.asciidoc.IncludeMarkupFilterTest@28eb8bad]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testIncludeMarkupFilterEscapeCurlyBracketsInOrderToBeParsedByAsciidoc()[pri:0, instance:org.openapitools.codegen.asciidoc.IncludeMarkupFilterTest@28eb8bad]" name="testIncludeMarkupFilterEscapeCurlyBracketsInOrderToBeParsedByAsciidoc" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncludeMarkupFilterEscapeCurlyBracketsInOrderToBeParsedByAsciidoc -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.asciidoc.IncludeMarkupFilterTest@28eb8bad]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testIncludeMarkupFilterFoundFileOk()[pri:0, instance:org.openapitools.codegen.asciidoc.IncludeMarkupFilterTest@28eb8bad]" name="testIncludeMarkupFilterFoundFileOk" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncludeMarkupFilterFoundFileOk -->
      </class> <!-- org.openapitools.codegen.asciidoc.IncludeMarkupFilterTest -->
      <class name="org.openapitools.codegen.nim.NimClientCodegenTest">
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.nim.NimClientCodegenTest@65f36591]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.nim.NimClientCodegenTest@65f36591]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.nim.NimClientCodegenTest@65f36591]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
      </class> <!-- org.openapitools.codegen.nim.NimClientCodegenTest -->
      <class name="org.openapitools.codegen.javascript.JavascriptClosureAngularClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClosureAngularClientCodegenTest@4a9486c0]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClosureAngularClientCodegenTest@4a9486c0]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClosureAngularClientCodegenTest@4a9486c0]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
      </class> <!-- org.openapitools.codegen.javascript.JavascriptClosureAngularClientCodegenTest -->
      <class name="org.openapitools.codegen.templating.mustache.OnChangeLambdaTest">
        <test-method status="PASS" signature="firstValueIsReturnedTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.OnChangeLambdaTest@f8f56b9]" name="firstValueIsReturnedTest" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstValueIsReturnedTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.OnChangeLambdaTest@f8f56b9]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.OnChangeLambdaTest@f8f56b9]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="repeatingValueReturnedOnFirstOccurrenceTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.OnChangeLambdaTest@f8f56b9]" name="repeatingValueReturnedOnFirstOccurrenceTest" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeatingValueReturnedOnFirstOccurrenceTest -->
      </class> <!-- org.openapitools.codegen.templating.mustache.OnChangeLambdaTest -->
      <class name="org.openapitools.codegen.csharp.CsharpModelEnumTest">
        <test-method status="PASS" signature="useCustomEnumSuffixes()[pri:0, instance:org.openapitools.codegen.csharp.CsharpModelEnumTest@664217a8]" name="useCustomEnumSuffixes" duration-ms="23" started-at="2023-04-09T10:15:20 UTC" description="use custom suffixes for enums" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useCustomEnumSuffixes -->
        <test-method status="PASS" signature="useDefaultEnumSuffixes()[pri:0, instance:org.openapitools.codegen.csharp.CsharpModelEnumTest@664217a8]" name="useDefaultEnumSuffixes" duration-ms="20" started-at="2023-04-09T10:15:20 UTC" description="use default suffixes for enums" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useDefaultEnumSuffixes -->
        <test-method status="PASS" signature="useEmptyEnumSuffixes()[pri:0, instance:org.openapitools.codegen.csharp.CsharpModelEnumTest@664217a8]" name="useEmptyEnumSuffixes" duration-ms="23" started-at="2023-04-09T10:15:20 UTC" description="support empty suffixes for enums" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useEmptyEnumSuffixes -->
      </class> <!-- org.openapitools.codegen.csharp.CsharpModelEnumTest -->
      <class name="org.openapitools.codegen.templating.handlebars.StringHelpersTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="endsWithSectionalTest()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="endsWithSectionalTest" duration-ms="5" started-at="2023-04-09T10:15:07 UTC" description="Handlebars StringHelpers.endsWith, section" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endsWithSectionalTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="endsWithTest()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="endsWithTest" duration-ms="4" started-at="2023-04-09T10:15:07 UTC" description="Handlebars StringHelpers.endsWith" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endsWithTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="endsWithYesOverrideTest()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="endsWithYesOverrideTest" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" description="Handlebars StringHelpers.endsWith, yes/no override" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endsWithYesOverrideTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="startsWithSectionalTest()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="startsWithSectionalTest" duration-ms="2" started-at="2023-04-09T10:15:07 UTC" description="Handlebars StringHelpers.startsWith, section" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startsWithSectionalTest -->
        <test-method status="PASS" signature="startsWithTest()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="startsWithTest" duration-ms="3" started-at="2023-04-09T10:15:07 UTC" description="Handlebars StringHelpers.startsWith" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startsWithTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="startsWithYesOverrideTest()[pri:0, instance:org.openapitools.codegen.templating.handlebars.StringHelpersTest@41c204a0]" name="startsWithYesOverrideTest" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" description="Handlebars StringHelpers.startsWith, yes/no override" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startsWithYesOverrideTest -->
      </class> <!-- org.openapitools.codegen.templating.handlebars.StringHelpersTest -->
      <class name="org.openapitools.codegen.templating.mustache.SplitStringLambdaTest">
        <test-method status="PASS" signature="init()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="init" is-config="true" duration-ms="15" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testShortString()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="testShortString" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShortString -->
        <test-method status="PASS" signature="reset()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="reset" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reset -->
        <test-method status="PASS" signature="testSplitGroupsOf2()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="testSplitGroupsOf2" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSplitGroupsOf2 -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="init" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testSplitGroupsOf3()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="testSplitGroupsOf3" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSplitGroupsOf3 -->
        <test-method status="PASS" signature="reset()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="reset" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reset -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="init" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="reset()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="reset" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reset -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="init" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testSplitQuotedString()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="testSplitQuotedString" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSplitQuotedString -->
        <test-method status="PASS" signature="reset()[pri:0, instance:org.openapitools.codegen.templating.mustache.SplitStringLambdaTest@1e9804b9]" name="reset" is-config="true" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reset -->
      </class> <!-- org.openapitools.codegen.templating.mustache.SplitStringLambdaTest -->
      <class name="org.openapitools.codegen.php.PhpLaravelServerCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpLaravelServerCodegenTest@6e8627e6]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpLaravelServerCodegenTest@6e8627e6]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpLaravelServerCodegenTest@6e8627e6]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.php.PhpLaravelServerCodegenTest -->
      <class name="org.openapitools.codegen.android.AndroidClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.android.AndroidClientCodegenTest@46a488c2]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.android.AndroidClientCodegenTest@46a488c2]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.android.AndroidClientCodegenTest@46a488c2]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
      </class> <!-- org.openapitools.codegen.android.AndroidClientCodegenTest -->
      <class name="org.openapitools.codegen.typescript.aurelia.TypeScriptAureliaClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.aurelia.TypeScriptAureliaClientOptionsTest@2889a7ae]" name="checkOptionsHelp" duration-ms="1" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.aurelia.TypeScriptAureliaClientOptionsTest@2889a7ae]" name="checkOptionsProcessing" duration-ms="3" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.typescript.aurelia.TypeScriptAureliaClientOptionsTest -->
      <class name="org.openapitools.codegen.yaml.YamlGeneratorTest">
        <test-method status="PASS" signature="testGeneratePing()[pri:0, instance:org.openapitools.codegen.yaml.YamlGeneratorTest@22d9c961]" name="testGeneratePing" duration-ms="18" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePing -->
        <test-method status="PASS" signature="testGeneratePingOtherOutputFile()[pri:0, instance:org.openapitools.codegen.yaml.YamlGeneratorTest@22d9c961]" name="testGeneratePingOtherOutputFile" duration-ms="18" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePingOtherOutputFile -->
        <test-method status="PASS" signature="testIssue9086()[pri:0, instance:org.openapitools.codegen.yaml.YamlGeneratorTest@22d9c961]" name="testIssue9086" duration-ms="35" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue9086 -->
      </class> <!-- org.openapitools.codegen.yaml.YamlGeneratorTest -->
      <class name="org.openapitools.codegen.go.GoClientCodegenTest">
        <test-method status="PASS" signature="bodyParameterTest()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="bodyParameterTest" duration-ms="63" started-at="2023-04-09T10:14:54 UTC" description="test example value for body parameter" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bodyParameterTest -->
        <test-method status="PASS" signature="ensureParameterNameUniqueTest()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="ensureParameterNameUniqueTest" duration-ms="5" started-at="2023-04-09T10:14:54 UTC" description="test to ensure the parameter names are unique" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureParameterNameUniqueTest -->
        <test-method status="PASS" signature="testAdditionalPropertiesModelFileFolder()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testAdditionalPropertiesModelFileFolder" duration-ms="1" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesModelFileFolder -->
        <test-method status="PASS" signature="testAnyOfArraysAndMaps()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testAnyOfArraysAndMaps" duration-ms="46" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnyOfArraysAndMaps -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testFilenames()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testFilenames" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilenames -->
        <test-method status="PASS" signature="testMultipleRequiredPropertiesHasSameOneOfObject()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testMultipleRequiredPropertiesHasSameOneOfObject" duration-ms="49" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleRequiredPropertiesHasSameOneOfObject -->
        <test-method status="PASS" signature="testNullableComposition()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testNullableComposition" duration-ms="42" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullableComposition -->
        <test-method status="PASS" signature="testPrimitiveTypeInOneOf()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testPrimitiveTypeInOneOf" duration-ms="49" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimitiveTypeInOneOf -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testStructPrefix()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="testStructPrefix" duration-ms="100" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStructPrefix -->
        <test-method status="PASS" signature="verifyApiTestWithNullResponse()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="verifyApiTestWithNullResponse" duration-ms="14" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApiTestWithNullResponse -->
        <test-method status="PASS" signature="verifyFormatErrorMessageInUse()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="verifyFormatErrorMessageInUse" duration-ms="26" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFormatErrorMessageInUse -->
        <test-method status="PASS" signature="verifyReadOnlyAttributes()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="verifyReadOnlyAttributes" duration-ms="30" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyReadOnlyAttributes -->
        <test-method status="PASS" signature="verifyTestFile()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="verifyTestFile" duration-ms="102" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestFile -->
        <test-method status="PASS" signature="verifyTestImport()[pri:0, instance:org.openapitools.codegen.go.GoClientCodegenTest@42095996]" name="verifyTestImport" duration-ms="91" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestImport -->
      </class> <!-- org.openapitools.codegen.go.GoClientCodegenTest -->
      <class name="org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest">
        <test-method status="PASS" signature="uuidGivenExample()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="uuidGivenExample" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uuidGivenExample -->
        <test-method status="PASS" signature="inlineEnumArray()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="inlineEnumArray" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineEnumArray -->
        <test-method status="PASS" signature="uuidDefault()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="uuidDefault" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uuidDefault -->
        <test-method status="PASS" signature="inlineEnum()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="inlineEnum" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inlineEnum -->
        <test-method status="PASS" signature="dateTimeDefault()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="dateTimeDefault" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateTimeDefault -->
        <test-method status="PASS" signature="dateGivenExample()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="dateGivenExample" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateGivenExample -->
        <test-method status="PASS" signature="dateTimeGivenExample()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="dateTimeGivenExample" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateTimeGivenExample -->
        <test-method status="PASS" signature="dateDefault()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="dateDefault" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateDefault -->
        <test-method status="PASS" signature="referencedEnumTakeFirstName()[pri:0, instance:org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest@773c0293]" name="referencedEnumTakeFirstName" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- referencedEnumTakeFirstName -->
      </class> <!-- org.openapitools.codegen.java.AbstractJavaCodegenExampleValuesTest -->
      <class name="org.openapitools.codegen.objc.ObjcClientCodegenTest">
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.objc.ObjcClientCodegenTest@5876a9af]" name="testSettersForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.objc.ObjcClientCodegenTest@5876a9af]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.objc.ObjcClientCodegenTest@5876a9af]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
      </class> <!-- org.openapitools.codegen.objc.ObjcClientCodegenTest -->
      <class name="org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest">
        <test-method status="PASS" signature="apiFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="apiFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="apiFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Petstore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Petstore]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim4/lib]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="apiFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="apiFileFolder" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" data-provider="apiFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Package\SubPackage\Api]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Package\SubPackage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim4/lib/Api]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="apiFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="apiFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="apiFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Api]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invoker]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim4/lib/Api]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="modelFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="modelFileFolder" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" data-provider="modelFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Model]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invoker]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim4/lib/Model]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
        <test-method status="PASS" signature="apiFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="apiFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="apiFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Websupport\InvoiceValidation\Api]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Websupport\InvoiceValidation]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim4/lib/Api]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="modelFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="modelFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="modelFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Petstore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Petstore]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim4/lib]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
        <test-method status="PASS" signature="modelFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="modelFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="modelFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Package\SubPackage\Model]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Package\SubPackage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim4/lib/Model]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
        <test-method status="PASS" signature="testEncodePath()[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="testEncodePath" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEncodePath -->
        <test-method status="PASS" signature="modelFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest@10e7192]" name="modelFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="modelFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Websupport\InvoiceValidation\Model]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Websupport\InvoiceValidation]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim4/lib/Model]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
      </class> <!-- org.openapitools.codegen.slim4.PhpSlim4ServerCodegenTest -->
      <class name="org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest">
        <test-method status="PASS" signature="apIFileFolder()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="apIFileFolder" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apIFileFolder -->
        <test-method status="PASS" signature="camlCaseEnumConverter()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="camlCaseEnumConverter" duration-ms="3" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- camlCaseEnumConverter -->
        <test-method status="PASS" signature="apiTestFileFolder()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="apiTestFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiTestFileFolder -->
        <test-method status="PASS" signature="convertApiNameWithSuffix()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="convertApiNameWithSuffix" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertApiNameWithSuffix -->
        <test-method status="PASS" signature="convertApiNameWithEmptySuffix()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="convertApiNameWithEmptySuffix" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertApiNameWithEmptySuffix -->
        <test-method status="PASS" signature="convertModelName()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="convertModelName" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertModelName -->
        <test-method status="PASS" signature="convertModelNameTitleCase()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="convertModelNameTitleCase" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertModelNameTitleCase -->
        <test-method status="PASS" signature="convertVarName()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="convertVarName" duration-ms="4" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertVarName -->
        <test-method status="PASS" signature="handleInheritance()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="handleInheritance" duration-ms="12" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleInheritance -->
        <test-method status="PASS" signature="handleInheritanceWithObjectTypeShouldNotBeAMap()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="handleInheritanceWithObjectTypeShouldNotBeAMap" duration-ms="5" started-at="2023-04-09T10:14:34 UTC" description="Issue #10792" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleInheritanceWithObjectTypeShouldNotBeAMap -->
        <test-method status="PASS" signature="isDataTypeString()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="isDataTypeString" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isDataTypeString -->
        <test-method status="PASS" signature="originalEnumConverter()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="originalEnumConverter" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- originalEnumConverter -->
        <test-method status="PASS" signature="pascalCaseEnumConverter()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="pascalCaseEnumConverter" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pascalCaseEnumConverter -->
        <test-method status="PASS" signature="processOptsBooleanFalseFromBoolean()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="processOptsBooleanFalseFromBoolean" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanFalseFromBoolean -->
        <test-method status="PASS" signature="processOptsBooleanFalseFromGarbage()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="processOptsBooleanFalseFromGarbage" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanFalseFromGarbage -->
        <test-method status="PASS" signature="processOptsBooleanTrueFromBoolean()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="processOptsBooleanTrueFromBoolean" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanTrueFromBoolean -->
        <test-method status="PASS" signature="processOptsBooleanFalseFromString()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="processOptsBooleanFalseFromString" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanFalseFromString -->
        <test-method status="PASS" signature="processOptsBooleanFalseFromNumeric()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="processOptsBooleanFalseFromNumeric" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanFalseFromNumeric -->
        <test-method status="PASS" signature="snake_caseEnumConverter()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="snake_caseEnumConverter" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- snake_caseEnumConverter -->
        <test-method status="PASS" signature="processOptsBooleanTrueFromString()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="processOptsBooleanTrueFromString" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processOptsBooleanTrueFromString -->
        <test-method status="PASS" signature="testEnumPropertyWithDefaultValue()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="testEnumPropertyWithDefaultValue" duration-ms="6" started-at="2023-04-09T10:14:34 UTC" description="Issue #10591" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumPropertyWithDefaultValue -->
        <test-method status="PASS" signature="toEnumValue()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="toEnumValue" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toEnumValue -->
        <test-method status="PASS" signature="uppercaseEnumConverter()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="uppercaseEnumConverter" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uppercaseEnumConverter -->
        <test-method status="PASS" signature="toModelNameShouldUseProvideSchemaMapping()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="toModelNameShouldUseProvideSchemaMapping" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toModelNameShouldUseProvideSchemaMapping -->
        <test-method status="PASS" signature="toModelNameShouldUseProvideImportMapping()[pri:0, instance:org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest@53a95258]" name="toModelNameShouldUseProvideImportMapping" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toModelNameShouldUseProvideImportMapping -->
      </class> <!-- org.openapitools.codegen.kotlin.AbstractKotlinCodegenTest -->
      <class name="org.openapitools.codegen.java.JavaModelTest">
        <test-method status="PASS" signature="allUpperCaseOneNonLetterNamesTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="allUpperCaseOneNonLetterNamesTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="convert a model with an all upper-case letter and one non letter property names" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allUpperCaseOneNonLetterNamesTest -->
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="convert an array model" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="arrayModelWithItemNameTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="arrayModelWithItemNameTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="convert a model with an array property with item name" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelWithItemNameTest -->
        <test-method status="PASS" signature="arrayOfArraySchemaTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="arrayOfArraySchemaTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="convert an array of array schema" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayOfArraySchemaTest -->
        <test-method status="PASS" signature="arrayOfArraySchemaTestInOperationResponse()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="arrayOfArraySchemaTestInOperationResponse" duration-ms="2" started-at="2023-04-09T10:14:33 UTC" description="convert an array schema in an ApiResponse" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayOfArraySchemaTestInOperationResponse -->
        <test-method status="PASS" signature="arrayOfArraySchemaTestInRequestBody()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="arrayOfArraySchemaTestInRequestBody" duration-ms="5" started-at="2023-04-09T10:14:33 UTC" description="convert an array of array schema in a RequestBody" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayOfArraySchemaTestInRequestBody -->
        <test-method status="PASS" signature="arraySchemaTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="arraySchemaTest" duration-ms="0" started-at="2023-04-09T10:14:33 UTC" description="convert an array schema" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arraySchemaTest -->
        <test-method status="PASS" signature="arraySchemaTestInOperationResponse()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="arraySchemaTestInOperationResponse" duration-ms="7" started-at="2023-04-09T10:14:33 UTC" description="convert an array schema in an ApiResponse" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arraySchemaTestInOperationResponse -->
        <test-method status="PASS" signature="arraySchemaTestInRequestBody()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="arraySchemaTestInRequestBody" duration-ms="2" started-at="2023-04-09T10:14:33 UTC" description="convert an array schema in a RequestBody" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arraySchemaTestInRequestBody -->
        <test-method status="PASS" signature="binaryDataTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="binaryDataTest" duration-ms="6" started-at="2023-04-09T10:14:33 UTC" description="convert a model with binary data" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- binaryDataTest -->
        <test-method status="PASS" signature="booleanPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="booleanPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:33 UTC" description="convert a boolean parameter" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booleanPropertyTest -->
        <test-method status="PASS" signature="classPropertyTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="classPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:33 UTC" description="handle &#039;class&#039; properties" data-provider="classProperties" finished-at="2023-04-09T10:14:33 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getPropertyClass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[setPropertyClass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[propertyClass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classPropertyTest -->
        <test-method status="PASS" signature="classPropertyTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="classPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="handle &#039;class&#039; properties" data-provider="classProperties" finished-at="2023-04-09T10:14:33 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_class]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getPropertyClass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[setPropertyClass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[propertyClass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classPropertyTest -->
        <test-method status="PASS" signature="classPropertyTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="classPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="handle &#039;class&#039; properties" data-provider="classProperties" finished-at="2023-04-09T10:14:33 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[__class]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getPropertyClass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[setPropertyClass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[propertyClass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classPropertyTest -->
        <test-method status="PASS" signature="complexArrayPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="complexArrayPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:33 UTC" description="convert a model with complex array property" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexArrayPropertyTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="complexMapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertiesTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="complexPropertiesTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="convert a model with complex properties" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertiesTest -->
        <test-method status="PASS" signature="complexSetPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="complexSetPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:33 UTC" description="convert a model with complex set property" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexSetPropertyTest -->
        <test-method status="PASS" signature="convertParameterTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="convertParameterTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="convert a parameter" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertParameterTest -->
        <test-method status="PASS" signature="escapeNamesTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="escapeNamesTest" duration-ms="1" started-at="2023-04-09T10:14:33 UTC" description="properly escape names per 567" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escapeNamesTest -->
        <test-method status="PASS" signature="firstTwoUpperCaseLetterNamesTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="firstTwoUpperCaseLetterNamesTest" duration-ms="0" started-at="2023-04-09T10:14:33 UTC" description="convert a model starting with two upper-case letter property names" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstTwoUpperCaseLetterNamesTest -->
        <test-method status="PASS" signature="generateEmpty()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="generateEmpty" duration-ms="71" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateEmpty -->
        <test-method status="PASS" signature="generateModel()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="generateModel" duration-ms="252" started-at="2023-04-09T10:14:33 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateModel -->
        <test-method status="PASS" signature="hyphensTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="hyphensTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert hyphens per issue 503" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hyphensTest -->
        <test-method status="PASS" signature="integerPropertyInReferencedSchemaTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="integerPropertyInReferencedSchemaTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert an integer property in a referenced schema" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerPropertyInReferencedSchemaTest -->
        <test-method status="PASS" signature="integerPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="integerPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="convert an integer property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerPropertyTest -->
        <test-method status="PASS" signature="list2DPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="list2DPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with a 2D list property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- list2DPropertyTest -->
        <test-method status="PASS" signature="invalidParamNameTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="invalidParamNameTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="translate an invalid param name" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidParamNameTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="longPropertyInReferencedSchemaTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="longPropertyInReferencedSchemaTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a long property in a referenced schema" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longPropertyInReferencedSchemaTest -->
        <test-method status="PASS" signature="longPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="longPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="convert a long property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a map model" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="mapPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:34 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="mapWithAnListOfBigDecimalTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="mapWithAnListOfBigDecimalTest" duration-ms="3" started-at="2023-04-09T10:14:34 UTC" description="types used by inner properties should be imported" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapWithAnListOfBigDecimalTest -->
        <test-method status="PASS" signature="mapWithListPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="mapWithListPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:34 UTC" description="convert a model with a map with complex list property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapWithListPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample__name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[\sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[/sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[sample.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SampleName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[_sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="avoid inner class" data-provider="modelNames" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelWithWrappedXmlTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelWithWrappedXmlTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="test models with wrapped xml" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelWithWrappedXmlTest -->
        <test-method status="PASS" signature="modelWithXmlTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="modelWithXmlTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="test models with xml" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelWithXmlTest -->
        <test-method status="PASS" signature="restrictedCharactersPropertiesTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="restrictedCharactersPropertiesTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with restricted characters" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restrictedCharactersPropertiesTest -->
        <test-method status="PASS" signature="secondCharUpperCaseNamesTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="secondCharUpperCaseNamesTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with a 2nd char upper-case property names" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondCharUpperCaseNamesTest -->
        <test-method status="PASS" signature="setModelTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="setModelTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="convert a set model" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setModelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a simple java model" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="setPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="setPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="convert a model with set property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPropertyTest -->
        <test-method status="PASS" signature="squareBracketsTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="squareBracketsTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert query[password] to queryPassword" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- squareBracketsTest -->
        <test-method status="PASS" signature="stringPropertyInObjectTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="stringPropertyInObjectTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert string property in an object" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringPropertyInObjectTest -->
        <test-method status="PASS" signature="stringPropertyPasswordFormatTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="stringPropertyPasswordFormatTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert string property with password format" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringPropertyPasswordFormatTest -->
        <test-method status="PASS" signature="stringPropertyTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="stringPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert string property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringPropertyTest -->
        <test-method status="PASS" signature="stringPropertyReferencedInObjectTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="stringPropertyReferencedInObjectTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="convert referenced string property in an object" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringPropertyReferencedInObjectTest -->
        <test-method status="PASS" signature="upperCaseNamesTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="upperCaseNamesTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with upper-case property names" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upperCaseNamesTest -->
        <test-method status="PASS" signature="upperCaseNamesNumbersTest()[pri:0, instance:org.openapitools.codegen.java.JavaModelTest@43effd89]" name="upperCaseNamesNumbersTest" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="convert a model with upper-case property names and Numbers" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upperCaseNamesNumbersTest -->
      </class> <!-- org.openapitools.codegen.java.JavaModelTest -->
      <class name="org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest">
        <test-method status="PASS" signature="clientOptsUnicity()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="clientOptsUnicity" duration-ms="1" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clientOptsUnicity -->
        <test-method status="PASS" signature="doGenerateForGradle()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateForGradle" duration-ms="8" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateForGradle -->
        <test-method status="PASS" signature="doGenerateForMaven()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateForMaven" duration-ms="21" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateForMaven -->
        <test-method status="PASS" signature="doGenerateForTestJUnit()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateForTestJUnit" duration-ms="121" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateForTestJUnit -->
        <test-method status="PASS" signature="doGenerateForTestSpock()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateForTestSpock" duration-ms="126" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateForTestSpock -->
        <test-method status="PASS" signature="doGenerateMono()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateMono" duration-ms="107" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateMono -->
        <test-method status="PASS" signature="doGenerateMonoWrapHttpResponse()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateMonoWrapHttpResponse" duration-ms="94" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateMonoWrapHttpResponse -->
        <test-method status="PASS" signature="doGenerateNoMonoNoWrapHttpResponse()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateNoMonoNoWrapHttpResponse" duration-ms="70" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateNoMonoNoWrapHttpResponse -->
        <test-method status="PASS" signature="doGenerateOperationOnlyForFirstTag()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateOperationOnlyForFirstTag" duration-ms="56" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:14:59 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateOperationOnlyForFirstTag -->
        <test-method status="PASS" signature="doGenerateRequiredPropertiesInConstructor()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateRequiredPropertiesInConstructor" duration-ms="77" started-at="2023-04-09T10:14:59 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateRequiredPropertiesInConstructor -->
        <test-method status="PASS" signature="doGenerateWrapHttpResponse()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doGenerateWrapHttpResponse" duration-ms="71" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGenerateWrapHttpResponse -->
        <test-method status="PASS" signature="doNotGenerateAuthRolesWithExtensionWhenNotUseAuth()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doNotGenerateAuthRolesWithExtensionWhenNotUseAuth" duration-ms="46" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateAuthRolesWithExtensionWhenNotUseAuth -->
        <test-method status="PASS" signature="doNotGenerateRequiredPropertiesInConstructor()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doNotGenerateRequiredPropertiesInConstructor" duration-ms="66" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateRequiredPropertiesInConstructor -->
        <test-method status="PASS" signature="doNotUseValidationParam()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doNotUseValidationParam" duration-ms="30" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotUseValidationParam -->
        <test-method status="PASS" signature="doRepeatOperationForAllTags()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doRepeatOperationForAllTags" duration-ms="73" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRepeatOperationForAllTags -->
        <test-method status="PASS" signature="doUseValidationParam()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="doUseValidationParam" duration-ms="33" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doUseValidationParam -->
        <test-method status="PASS" signature="generateAuthRolesWithExtension()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="generateAuthRolesWithExtension" duration-ms="43" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateAuthRolesWithExtension -->
        <test-method status="PASS" signature="testApiAndModelFilesPresent()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="testApiAndModelFilesPresent" duration-ms="72" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApiAndModelFilesPresent -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="testExtraAnnotations" duration-ms="94" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest@78faea5f]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
      </class> <!-- org.openapitools.codegen.java.micronaut.MicronautServerCodegenTest -->
      <class name="org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest@3e158f3b]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest@3e158f3b]" name="checkOptionsProcessing" duration-ms="5" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptangular.TypeScriptAngularClientOptionsTest -->
      <class name="org.openapitools.codegen.fsharp.FSharpServerCodegenTest">
        <test-method status="PASS" signature="testModelImportsSpecifyNamespaceAndPackageName()[pri:0, instance:org.openapitools.codegen.fsharp.FSharpServerCodegenTest@5aa461]" name="testModelImportsSpecifyNamespaceAndPackageName" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" description="modify model imports to explicit set namespace and package name" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelImportsSpecifyNamespaceAndPackageName -->
        <test-method status="PASS" signature="testModelsAreSortedAccordingToDependencyOrder()[pri:0, instance:org.openapitools.codegen.fsharp.FSharpServerCodegenTest@5aa461]" name="testModelsAreSortedAccordingToDependencyOrder" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" description="sort models according to dependency order" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelsAreSortedAccordingToDependencyOrder -->
      </class> <!-- org.openapitools.codegen.fsharp.FSharpServerCodegenTest -->
      <class name="org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest">
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="addDefaultValueDocumentationForNonContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="addDefaultValueDocumentationForNonContainers" duration-ms="25" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDefaultValueDocumentationForNonContainers -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="doNotAddDefaultValueDocumentationForContainers()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="doNotAddDefaultValueDocumentationForContainers" duration-ms="31" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotAddDefaultValueDocumentationForContainers -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude" duration-ms="62" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude -->
        <test-method status="PASS" signature="generateJsonAnnotationForPolymorphism()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="generateJsonAnnotationForPolymorphism" duration-ms="67" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateJsonAnnotationForPolymorphism -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsFalse()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testAddOperationToGroupUseTagsFalse" duration-ms="10" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsFalse -->
        <test-method status="PASS" signature="testAddOperationToGroupUseTagsTrue()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testAddOperationToGroupUseTagsTrue" duration-ms="11" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOperationToGroupUseTagsTrue -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testExtraAnnotations()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testExtraAnnotations" duration-ms="113" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraAnnotations -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testHandleDefaultValue_issue8535()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testHandleDefaultValue_issue8535" duration-ms="51" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandleDefaultValue_issue8535 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testMultipartJerseyServer(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testMultipartJerseyServer" duration-ms="317" started-at="2023-04-09T10:14:31 UTC" data-provider="codegenParameterMatrix" finished-at="2023-04-09T10:14:31 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[jersey1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[joda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipartJerseyServer -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testMultipartJerseyServer(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testMultipartJerseyServer" duration-ms="89" started-at="2023-04-09T10:14:31 UTC" data-provider="codegenParameterMatrix" finished-at="2023-04-09T10:14:31 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[jersey1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[java8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipartJerseyServer -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:31 UTC" finished-at="2023-04-09T10:14:31 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testMultipartJerseyServer(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testMultipartJerseyServer" duration-ms="92" started-at="2023-04-09T10:14:31 UTC" data-provider="codegenParameterMatrix" finished-at="2023-04-09T10:14:32 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[jersey2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[joda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipartJerseyServer -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testMultipartJerseyServer(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testMultipartJerseyServer" duration-ms="96" started-at="2023-04-09T10:14:32 UTC" data-provider="codegenParameterMatrix" finished-at="2023-04-09T10:14:32 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[jersey2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[java8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipartJerseyServer -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="before" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest@4abf3f0]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.java.jaxrs.JavaJerseyServerCodegenTest -->
      <class name="org.openapitools.codegen.eiffel.AbstractEiffelCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.eiffel.AbstractEiffelCodegenTest@28bdbe88]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.eiffel.AbstractEiffelCodegenTest@28bdbe88]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.eiffel.AbstractEiffelCodegenTest@28bdbe88]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.eiffel.AbstractEiffelCodegenTest -->
      <class name="org.openapitools.codegen.haskellhttpclient.HaskellHttpClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.haskellhttpclient.HaskellHttpClientCodegenTest@5b9b31e0]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.haskellhttpclient.HaskellHttpClientCodegenTest@5b9b31e0]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.haskellhttpclient.HaskellHttpClientCodegenTest@5b9b31e0]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
      </class> <!-- org.openapitools.codegen.haskellhttpclient.HaskellHttpClientCodegenTest -->
      <class name="org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest@543e593]" name="setup" is-config="true" duration-ms="50" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="camelCaseEscapeParamTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest@543e593]" name="camelCaseEscapeParamTest" duration-ms="24" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- camelCaseEscapeParamTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest@543e593]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="camelCaseReservedWordTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest@543e593]" name="camelCaseReservedWordTest" duration-ms="1" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- camelCaseReservedWordTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest@543e593]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest@543e593]" name="setup" is-config="true" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="camelCaseSpaceTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest@543e593]" name="camelCaseSpaceTest" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- camelCaseSpaceTest -->
        <test-method status="PASS" signature="camelCaseTest()[pri:0, instance:org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest@543e593]" name="camelCaseTest" duration-ms="0" started-at="2023-04-09T10:14:56 UTC" finished-at="2023-04-09T10:14:56 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- camelCaseTest -->
      </class> <!-- org.openapitools.codegen.templating.mustache.CamelCaseLambdaTest -->
      <class name="org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest@6a10b263]" name="setup" is-config="true" duration-ms="1" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="buildFullProject()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest@6a10b263]" name="buildFullProject" duration-ms="44" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest.buildFullProject(FunctionalHelidonMPServerTest.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildFullProject -->
        <test-method status="SKIP" signature="buildJacksonProject()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest@6a10b263]" name="buildJacksonProject" duration-ms="33" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest.buildJacksonProject(FunctionalHelidonMPServerTest.java:94)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildJacksonProject -->
        <test-method status="SKIP" signature="buildJsonbProject()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest@6a10b263]" name="buildJsonbProject" duration-ms="26" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest.buildJsonbProject(FunctionalHelidonMPServerTest.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildJsonbProject -->
        <test-method status="SKIP" signature="buildProjectAbstractClasses()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest@6a10b263]" name="buildProjectAbstractClasses" duration-ms="28" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest.buildProjectAbstractClasses(FunctionalHelidonMPServerTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildProjectAbstractClasses -->
        <test-method status="SKIP" signature="buildProjectDefaultOptions()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest@6a10b263]" name="buildProjectDefaultOptions" duration-ms="27" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:124)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest.buildProjectDefaultOptions(FunctionalHelidonMPServerTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildProjectDefaultOptions -->
        <test-method status="SKIP" signature="verifyFullProjectSemantics()[pri:0, instance:org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest@6a10b263]" name="verifyFullProjectSemantics" duration-ms="29" started-at="2023-04-09T10:14:55 UTC" finished-at="2023-04-09T10:14:55 UTC">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Unable to infer Helidon version from current Java major version 8 using mapping [11=2.5.3, 13=3.0.1]
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.inferredHelidonVersion(FunctionalBase.java:270)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.chooseHelidonVersion(FunctionalBase.java:231)
at org.openapitools.codegen.java.helidon.functional.FunctionalBase.generate(FunctionalBase.java:116)
at org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest.verifyFullProjectSemantics(FunctionalHelidonMPServerTest.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFullProjectSemantics -->
      </class> <!-- org.openapitools.codegen.java.helidon.functional.FunctionalHelidonMPServerTest -->
      <class name="org.openapitools.codegen.utils.URLPathUtilsTest">
        <test-method status="PASS" signature="testGetServerURLWithVariables()[pri:0, instance:org.openapitools.codegen.utils.URLPathUtilsTest@3a6ff4b4]" name="testGetServerURLWithVariables" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetServerURLWithVariables -->
        <test-method status="PASS" signature="testDefaultValues()[pri:0, instance:org.openapitools.codegen.utils.URLPathUtilsTest@3a6ff4b4]" name="testDefaultValues" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultValues -->
        <test-method status="PASS" signature="testGetServerURLWithVariablesAndUserOverrides()[pri:0, instance:org.openapitools.codegen.utils.URLPathUtilsTest@3a6ff4b4]" name="testGetServerURLWithVariablesAndUserOverrides" duration-ms="2" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetServerURLWithVariablesAndUserOverrides -->
        <test-method status="PASS" signature="testSanitizeUrl()[pri:0, instance:org.openapitools.codegen.utils.URLPathUtilsTest@3a6ff4b4]" name="testSanitizeUrl" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSanitizeUrl -->
        <test-method status="PASS" signature="testUrl()[pri:0, instance:org.openapitools.codegen.utils.URLPathUtilsTest@3a6ff4b4]" name="testUrl" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrl -->
        <test-method status="PASS" signature="useDefaultUrlWhenServerUrlIsNull()[pri:0, instance:org.openapitools.codegen.utils.URLPathUtilsTest@3a6ff4b4]" name="useDefaultUrlWhenServerUrlIsNull" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" finished-at="2023-04-09T10:15:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useDefaultUrlWhenServerUrlIsNull -->
      </class> <!-- org.openapitools.codegen.utils.URLPathUtilsTest -->
      <class name="org.openapitools.codegen.slim.PhpSlimServerOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerOptionsTest@3545bfea]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerOptionsTest@3545bfea]" name="checkOptionsProcessing" duration-ms="3" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.slim.PhpSlimServerOptionsTest -->
      <class name="org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest">
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRecommendations" duration-ms="2" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRule" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRecommendations(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRecommendations -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRule" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testApacheNginxWithDisabledRule(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testApacheNginxWithDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="disable apache nginx via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheNginxWithDisabledRule -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testDefaultRecommendationApacheNginx" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[header]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[query]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[api_key]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
        <test-method status="PASS" signature="testDefaultRecommendationApacheNginx(io.swagger.v3.oas.models.security.SecurityScheme$In,java.lang.String,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest@65ddee5a]" name="testDefaultRecommendationApacheNginx" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="default apache nginx recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[cookie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apikey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationApacheNginx -->
      </class> <!-- org.openapitools.codegen.validations.oas.OpenApiSecuritySchemeValidationsTest -->
      <class name="org.openapitools.codegen.typescript.TypeScriptClientCodegenTest">
        <test-method status="PASS" signature="defaultModelImportTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="defaultModelImportTest" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultModelImportTest -->
        <test-method status="PASS" signature="modelImportWithMappingTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="modelImportWithMappingTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelImportWithMappingTest -->
        <test-method status="PASS" signature="testArrayWithUniqueItems()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="testArrayWithUniqueItems" duration-ms="1" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayWithUniqueItems -->
        <test-method status="PASS" signature="getTypeDeclarationTest()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="getTypeDeclarationTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTypeDeclarationTest -->
        <test-method status="PASS" signature="testCompilePattern()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="testCompilePattern" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompilePattern -->
        <test-method status="PASS" signature="testComposedSchemasImportTypesIndividually()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="testComposedSchemasImportTypesIndividually" duration-ms="7" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComposedSchemasImportTypesIndividually -->
        <test-method status="PASS" signature="testWithAdditionalProperties()[pri:0, instance:org.openapitools.codegen.typescript.TypeScriptClientCodegenTest@433cec3b]" name="testWithAdditionalProperties" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithAdditionalProperties -->
      </class> <!-- org.openapitools.codegen.typescript.TypeScriptClientCodegenTest -->
      <class name="org.openapitools.codegen.python.PythonPriorClientTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert an array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="complexMapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="complexPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="defaultSettingInPrimitiveModelWithValidations()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="defaultSettingInPrimitiveModelWithValidations" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="format imports of models containing special characters" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultSettingInPrimitiveModelWithValidations -->
        <test-method status="PASS" signature="importSpecialModelNameTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="importSpecialModelNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="format imports of models containing special characters" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- importSpecialModelNameTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="listPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="mapPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="mapModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="modelTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="modelTest" duration-ms="14" started-at="2023-04-09T10:14:42 UTC" description="convert a python model with dots" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelTest -->
        <test-method status="PASS" signature="parseDateAndDateTimeExamplesTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="parseDateAndDateTimeExamplesTest" duration-ms="78" started-at="2023-04-09T10:14:42 UTC" description="parse date and date-time example value" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseDateAndDateTimeExamplesTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="simpleModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a simple java model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="testFreeFormSchemas()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testFreeFormSchemas" duration-ms="63" started-at="2023-04-09T10:14:42 UTC" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFreeFormSchemas -->
        <test-method status="PASS" signature="testNoProxyPyClient()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testNoProxyPyClient" duration-ms="152" started-at="2023-04-09T10:14:42 UTC" description="tests NoProxyPyClient" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoProxyPyClient -->
        <test-method status="PASS" signature="testObjectModelWithRefedAdditionalPropertiesIsGenerated()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testObjectModelWithRefedAdditionalPropertiesIsGenerated" duration-ms="866" started-at="2023-04-09T10:14:42 UTC" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testObjectModelWithRefedAdditionalPropertiesIsGenerated -->
        <test-method status="PASS" signature="testObjectWithValidations()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testObjectWithValidations" duration-ms="3" started-at="2023-04-09T10:14:43 UTC" description="tests ObjectWithValidations" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testObjectWithValidations -->
        <test-method status="PASS" signature="testRecursiveToExample()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testRecursiveToExample" duration-ms="5" started-at="2023-04-09T10:14:43 UTC" description="tests RecursiveToExample" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecursiveToExample -->
        <test-method status="PASS" signature="testRegexObjects()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testRegexObjects" duration-ms="2" started-at="2023-04-09T10:14:43 UTC" description="tests RegexObjects" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegexObjects -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FooAbc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Foo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[AbcFoo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Xyz]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[AbcFooXyz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Abc1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Model1Abc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Model1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[and]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ModelAnd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="1" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[and]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[AndAbc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[and]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[AbcAnd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Xyz]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Abc1Xyz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
        <test-method status="PASS" signature="testUuidExampleWorksEvenIfPatternIsDefined()[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testUuidExampleWorksEvenIfPatternIsDefined" duration-ms="3" started-at="2023-04-09T10:14:43 UTC" description="tests uuid example works even if a pattern is provided" finished-at="2023-04-09T10:14:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUuidExampleWorksEvenIfPatternIsDefined -->
        <test-method status="PASS" signature="testToModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.python.PythonPriorClientTest@2a5a2cbc]" name="testToModel" duration-ms="0" started-at="2023-04-09T10:14:43 UTC" data-provider="testToModelData" finished-at="2023-04-09T10:14:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Xyz]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[and]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[AbcAndXyz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToModel -->
      </class> <!-- org.openapitools.codegen.python.PythonPriorClientTest -->
      <class name="org.openapitools.codegen.java.apachehttpclient.ApacheHttpClientCodegenTest">
        <test-method status="PASS" signature="testApacheHttpClientExplodedQueryParamObject()[pri:0, instance:org.openapitools.codegen.java.apachehttpclient.ApacheHttpClientCodegenTest@2c16fadb]" name="testApacheHttpClientExplodedQueryParamObject" duration-ms="98" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheHttpClientExplodedQueryParamObject -->
        <test-method status="PASS" signature="testApacheHttpClientExplodedQueryParamWithArrayProperty()[pri:0, instance:org.openapitools.codegen.java.apachehttpclient.ApacheHttpClientCodegenTest@2c16fadb]" name="testApacheHttpClientExplodedQueryParamWithArrayProperty" duration-ms="76" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApacheHttpClientExplodedQueryParamWithArrayProperty -->
      </class> <!-- org.openapitools.codegen.java.apachehttpclient.ApacheHttpClientCodegenTest -->
      <class name="org.openapitools.codegen.javascript.JavascriptClientCodegenTest">
        <test-method status="PASS" signature="bodyParameterTest()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClientCodegenTest@677b8e13]" name="bodyParameterTest" duration-ms="24" started-at="2023-04-09T10:14:54 UTC" description="test defaultValueWithParam for model&#039;s properties" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bodyParameterTest -->
        <test-method status="PASS" signature="testMultipleFileUpload()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClientCodegenTest@677b8e13]" name="testMultipleFileUpload" duration-ms="5" started-at="2023-04-09T10:14:54 UTC" description="test multiple file upload collection is correct" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleFileUpload -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClientCodegenTest@677b8e13]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClientCodegenTest@677b8e13]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testResponseIsDefault()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClientCodegenTest@677b8e13]" name="testResponseIsDefault" duration-ms="25" started-at="2023-04-09T10:14:54 UTC" description="test isDefault in the response" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseIsDefault -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.javascript.JavascriptClientCodegenTest@677b8e13]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:54 UTC" finished-at="2023-04-09T10:14:54 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.javascript.JavascriptClientCodegenTest -->
      <class name="org.openapitools.codegen.dart.dio.DartDioModelTest">
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert an array model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="collectionDefaultValues()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="collectionDefaultValues" duration-ms="2" started-at="2023-04-09T10:14:42 UTC" description="correctly generate collection default values" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- collectionDefaultValues -->
        <test-method status="PASS" signature="complexListProperty()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="complexListProperty" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListProperty -->
        <test-method status="PASS" signature="complexMapSchema()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="complexMapSchema" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapSchema -->
        <test-method status="PASS" signature="dateDefaultValues()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="dateDefaultValues" duration-ms="2" started-at="2023-04-09T10:14:42 UTC" description="correctly generate date/datetime default values, currently null" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateDefaultValues -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a map model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="mapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="modelNameTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly prefix reserved model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[EnumClass]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestModelEnumClass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTest(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="modelNameTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="correctly prefix reserved model names" data-provider="modelNames" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[JsonObject]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestModelJsonObject]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTest -->
        <test-method status="PASS" signature="modelNameTestTimemachine(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="modelNameTestTimemachine" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="correctly prefix reserved model names" data-provider="modelNamesTimemachine" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[EnumClass]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestModelEnumClass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTestTimemachine -->
        <test-method status="PASS" signature="modelNameTestTimemachine(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="modelNameTestTimemachine" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="correctly prefix reserved model names" data-provider="modelNamesTimemachine" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[JsonObject]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestModelJsonObject]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTestTimemachine -->
        <test-method status="PASS" signature="modelNameTestTimemachine(java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="modelNameTestTimemachine" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="correctly prefix reserved model names" data-provider="modelNamesTimemachine" finished-at="2023-04-09T10:14:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[OffsetDate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestModelOffsetDate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelNameTestTimemachine -->
        <test-method status="PASS" signature="setPropertyTest()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="setPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:42 UTC" description="convert a model with set property" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPropertyTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="simpleModelTest" duration-ms="0" started-at="2023-04-09T10:14:42 UTC" description="convert a simple model" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="simpleModelWithTimeMachineTest()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioModelTest@6379f341]" name="simpleModelWithTimeMachineTest" duration-ms="2" started-at="2023-04-09T10:14:42 UTC" description="convert a simple dart-dit model with datelibrary" finished-at="2023-04-09T10:14:42 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelWithTimeMachineTest -->
      </class> <!-- org.openapitools.codegen.dart.dio.DartDioModelTest -->
      <class name="org.openapitools.codegen.slim.PhpSlimServerCodegenTest">
        <test-method status="PASS" signature="apiFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="apiFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="apiFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Api]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invoker]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim/lib/Api]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="apiFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="apiFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="apiFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Package\SubPackage\Api]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Package\SubPackage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim/lib/Api]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="apiFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="apiFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="apiFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Petstore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Petstore]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim/lib]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="apiFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="apiFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="apiFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Websupport\InvoiceValidation\Api]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Websupport\InvoiceValidation]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim/lib/Api]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiFileFolder -->
        <test-method status="PASS" signature="modelFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="modelFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="modelFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Petstore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Petstore]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim/lib]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
        <test-method status="PASS" signature="modelFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="modelFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="modelFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Package\SubPackage\Model]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Package\SubPackage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim/lib/Model]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
        <test-method status="PASS" signature="modelFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="modelFileFolder" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" data-provider="modelFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Model]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invoker]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim/lib/Model]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
        <test-method status="PASS" signature="modelFileFolder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="modelFileFolder" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" data-provider="modelFileFolderProvider" finished-at="2023-04-09T10:14:34 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Websupport\InvoiceValidation\Model]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Websupport\InvoiceValidation]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[generated-code/slim/lib/Model]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelFileFolder -->
        <test-method status="PASS" signature="testEncodePath()[pri:0, instance:org.openapitools.codegen.slim.PhpSlimServerCodegenTest@55a8f92d]" name="testEncodePath" duration-ms="2" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEncodePath -->
      </class> <!-- org.openapitools.codegen.slim.PhpSlimServerCodegenTest -->
      <class name="org.openapitools.codegen.kotlin.KotlinModelCodegenTest">
        <test-method status="PASS" signature="modelAsValues(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="modelAsValues" duration-ms="55" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinClientCodegen@bc40e1b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelAsValues -->
        <test-method status="PASS" signature="modelAsValues(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="modelAsValues" duration-ms="20" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinServerCodegen@1625513e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelAsValues -->
        <test-method status="PASS" signature="modelAsValues(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="modelAsValues" duration-ms="45" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinSpringServerCodegen@5826f373]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelAsValues -->
        <test-method status="PASS" signature="modelAsValues(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="modelAsValues" duration-ms="17" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinVertxServerCodegen@7b4a6622]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelAsValues -->
        <test-method status="PASS" signature="modelMutable(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="modelMutable" duration-ms="51" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinClientCodegen@3720da17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelMutable -->
        <test-method status="PASS" signature="modelMutable(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="modelMutable" duration-ms="22" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinServerCodegen@2a710a9f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelMutable -->
        <test-method status="PASS" signature="modelMutable(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="modelMutable" duration-ms="43" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinSpringServerCodegen@18b788c0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelMutable -->
        <test-method status="PASS" signature="modelMutable(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="modelMutable" duration-ms="17" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinVertxServerCodegen@51b1fbb9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelMutable -->
        <test-method status="PASS" signature="mutableArrayWithUniqueItems(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="mutableArrayWithUniqueItems" duration-ms="25" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinClientCodegen@7cf70ae6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mutableArrayWithUniqueItems -->
        <test-method status="PASS" signature="mutableArrayWithUniqueItems(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="mutableArrayWithUniqueItems" duration-ms="11" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinServerCodegen@3630bf14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mutableArrayWithUniqueItems -->
        <test-method status="PASS" signature="mutableArrayWithUniqueItems(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="mutableArrayWithUniqueItems" duration-ms="21" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinSpringServerCodegen@3499eb49]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mutableArrayWithUniqueItems -->
        <test-method status="PASS" signature="mutableArrayWithUniqueItems(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="mutableArrayWithUniqueItems" duration-ms="9" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:08 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinVertxServerCodegen@614c3f0e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mutableArrayWithUniqueItems -->
        <test-method status="PASS" signature="valuesArrayWithUniqueItems(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="valuesArrayWithUniqueItems" duration-ms="19" started-at="2023-04-09T10:15:08 UTC" data-provider="generators" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinClientCodegen@6f7a88c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valuesArrayWithUniqueItems -->
        <test-method status="PASS" signature="valuesArrayWithUniqueItems(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="valuesArrayWithUniqueItems" duration-ms="13" started-at="2023-04-09T10:15:09 UTC" data-provider="generators" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinServerCodegen@2ea06106]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valuesArrayWithUniqueItems -->
        <test-method status="PASS" signature="valuesArrayWithUniqueItems(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="valuesArrayWithUniqueItems" duration-ms="19" started-at="2023-04-09T10:15:09 UTC" data-provider="generators" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinSpringServerCodegen@1eb90ec5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valuesArrayWithUniqueItems -->
        <test-method status="PASS" signature="valuesArrayWithUniqueItems(org.openapitools.codegen.languages.AbstractKotlinCodegen)[pri:0, instance:org.openapitools.codegen.kotlin.KotlinModelCodegenTest@5738ec43]" name="valuesArrayWithUniqueItems" duration-ms="5" started-at="2023-04-09T10:15:09 UTC" data-provider="generators" finished-at="2023-04-09T10:15:09 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.openapitools.codegen.languages.KotlinVertxServerCodegen@3946a06f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valuesArrayWithUniqueItems -->
      </class> <!-- org.openapitools.codegen.kotlin.KotlinModelCodegenTest -->
      <class name="org.openapitools.codegen.lua.LuaClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.lua.LuaClientCodegenTest@6242ae3b]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.lua.LuaClientCodegenTest@6242ae3b]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.lua.LuaClientCodegenTest@6242ae3b]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.lua.LuaClientCodegenTest -->
      <class name="org.openapitools.codegen.InlineModelResolverTest">
        <test-method status="PASS" signature="arbitraryObjectModelInline()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectModelInline" duration-ms="27" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectModelInline -->
        <test-method status="PASS" signature="arbitraryObjectModelWithArrayInlineWithTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectModelWithArrayInlineWithTitle" duration-ms="20" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectModelWithArrayInlineWithTitle -->
        <test-method status="PASS" signature="arbitraryObjectModelWithArrayInlineWithoutTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectModelWithArrayInlineWithoutTitle" duration-ms="24" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectModelWithArrayInlineWithoutTitle -->
        <test-method status="PASS" signature="arbitraryObjectRequestBody()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectRequestBody" duration-ms="18" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectRequestBody -->
        <test-method status="PASS" signature="arbitraryObjectRequestBodyProperty()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectRequestBodyProperty" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectRequestBodyProperty -->
        <test-method status="PASS" signature="arbitraryObjectResponse()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectResponse" duration-ms="36" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectResponse -->
        <test-method status="PASS" signature="arbitraryObjectResponseArray()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectResponseArray" duration-ms="24" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectResponseArray -->
        <test-method status="PASS" signature="arbitraryObjectResponseArrayInline()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectResponseArrayInline" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectResponseArrayInline -->
        <test-method status="PASS" signature="arbitraryObjectResponseWithAdditionalProperty()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryObjectResponseWithAdditionalProperty" duration-ms="20" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryObjectResponseWithAdditionalProperty -->
        <test-method status="PASS" signature="arbitraryRequestBodyArray()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryRequestBodyArray" duration-ms="23" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryRequestBodyArray -->
        <test-method status="PASS" signature="arbitraryRequestBodyArrayProperty()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="arbitraryRequestBodyArrayProperty" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arbitraryRequestBodyArrayProperty -->
        <test-method status="PASS" signature="callbacks()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="callbacks" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callbacks -->
        <test-method status="PASS" signature="emptyExampleOnStringTypeModels()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="emptyExampleOnStringTypeModels" duration-ms="22" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyExampleOnStringTypeModels -->
        <test-method status="PASS" signature="inheritanceWithInlineDiscriminator()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="inheritanceWithInlineDiscriminator" duration-ms="8" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inheritanceWithInlineDiscriminator -->
        <test-method status="PASS" signature="nonModelRequestBody()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="nonModelRequestBody" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonModelRequestBody -->
        <test-method status="PASS" signature="nullable()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="nullable" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullable -->
        <test-method status="PASS" signature="objectComposedWithInline()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="objectComposedWithInline" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectComposedWithInline -->
        <test-method status="PASS" signature="resolveInlineArrayRequestBody()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineArrayRequestBody" duration-ms="23" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayRequestBody -->
        <test-method status="PASS" signature="resolveInlineArrayRequestBodyWithTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineArrayRequestBodyWithTitle" duration-ms="23" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayRequestBodyWithTitle -->
        <test-method status="PASS" signature="resolveInlineArrayResponse()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineArrayResponse" duration-ms="23" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayResponse -->
        <test-method status="PASS" signature="resolveInlineArrayResponseWithTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineArrayResponseWithTitle" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArrayResponseWithTitle -->
        <test-method status="PASS" signature="resolveInlineArraySchemaWithTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineArraySchemaWithTitle" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineArraySchemaWithTitle -->
        <test-method status="PASS" signature="resolveInlineMapSchemaInResponse()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineMapSchemaInResponse" duration-ms="19" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineMapSchemaInResponse -->
        <test-method status="PASS" signature="resolveInlineModel2DifferentInnerModelsWithSameTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineModel2DifferentInnerModelsWithSameTitle" duration-ms="1" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModel2DifferentInnerModelsWithSameTitle -->
        <test-method status="PASS" signature="resolveInlineModel2EqualInnerModels()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineModel2EqualInnerModels" duration-ms="0" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModel2EqualInnerModels -->
        <test-method status="PASS" signature="resolveInlineModelTestWithTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineModelTestWithTitle" duration-ms="0" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModelTestWithTitle -->
        <test-method status="PASS" signature="resolveInlineObjectResponseWithAdditionalProperties()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineObjectResponseWithAdditionalProperties" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineObjectResponseWithAdditionalProperties -->
        <test-method status="PASS" signature="resolveInlineModelTestWithTitleWithSpaces()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineModelTestWithTitleWithSpaces" duration-ms="0" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModelTestWithTitleWithSpaces -->
        <test-method status="PASS" signature="resolveInlineModelTestWithoutTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineModelTestWithoutTitle" duration-ms="0" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineModelTestWithoutTitle -->
        <test-method status="PASS" signature="resolveInlineRequestBody()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineRequestBody" duration-ms="21" started-at="2023-04-09T10:14:38 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineRequestBody -->
        <test-method status="PASS" signature="resolveInlineRequestBodyAllOf()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineRequestBodyAllOf" duration-ms="21" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineRequestBodyAllOf -->
        <test-method status="PASS" signature="resolveInlineRequestBodyWhenNoComponents()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineRequestBodyWhenNoComponents" duration-ms="3" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineRequestBodyWhenNoComponents -->
        <test-method status="PASS" signature="resolveInlineRequestBodyWithRequired()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineRequestBodyWithRequired" duration-ms="21" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineRequestBodyWithRequired -->
        <test-method status="PASS" signature="resolveInlineRequestBodyWithTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveInlineRequestBodyWithTitle" duration-ms="22" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveInlineRequestBodyWithTitle -->
        <test-method status="PASS" signature="resolveRequestBodyInvalidRef()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="resolveRequestBodyInvalidRef" duration-ms="22" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resolveRequestBodyInvalidRef -->
        <test-method status="PASS" signature="testInlineResponseModel()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testInlineResponseModel" duration-ms="0" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineResponseModel -->
        <test-method status="PASS" signature="testInlineResponseModelType()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testInlineResponseModelType" duration-ms="6" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineResponseModelType -->
        <test-method status="PASS" signature="testInlineResponseModelWithTitle()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testInlineResponseModelWithTitle" duration-ms="1" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineResponseModelWithTitle -->
        <test-method status="PASS" signature="testInlineSchemaAllOfPropertyOfOneOf()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testInlineSchemaAllOfPropertyOfOneOf" duration-ms="5" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineSchemaAllOfPropertyOfOneOf -->
        <test-method status="PASS" signature="testInlineSchemaNameDefault()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testInlineSchemaNameDefault" duration-ms="24" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineSchemaNameDefault -->
        <test-method status="PASS" signature="testInlineSchemaNameMapping()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testInlineSchemaNameMapping" duration-ms="22" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineSchemaNameMapping -->
        <test-method status="PASS" signature="testInlineSchemaSkipReuseSetToFalse()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testInlineSchemaSkipReuseSetToFalse" duration-ms="21" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineSchemaSkipReuseSetToFalse -->
        <test-method status="PASS" signature="testInlineSchemaSkipReuseSetToTrue()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testInlineSchemaSkipReuseSetToTrue" duration-ms="23" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineSchemaSkipReuseSetToTrue -->
        <test-method status="PASS" signature="testNestedAnyOf()[pri:0, instance:org.openapitools.codegen.InlineModelResolverTest@4af5c14c]" name="testNestedAnyOf" duration-ms="3" started-at="2023-04-09T10:14:39 UTC" finished-at="2023-04-09T10:14:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedAnyOf -->
      </class> <!-- org.openapitools.codegen.InlineModelResolverTest -->
      <class name="org.openapitools.codegen.OpenAPINormalizerTest">
        <test-method status="PASS" signature="testAddUnsignedToIntegerWithInvalidMaxValue()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testAddUnsignedToIntegerWithInvalidMaxValue" duration-ms="12" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUnsignedToIntegerWithInvalidMaxValue -->
        <test-method status="PASS" signature="testOpenAPINormalizerConvertEnumNullToNullable_test()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerConvertEnumNullToNullable_test" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerConvertEnumNullToNullable_test -->
        <test-method status="PASS" signature="testOpenAPINormalizerEnableKeepOnlyFirstTagInOperation()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerEnableKeepOnlyFirstTagInOperation" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerEnableKeepOnlyFirstTagInOperation -->
        <test-method status="PASS" signature="testOpenAPINormalizerRefAsParentInAllOf()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerRefAsParentInAllOf" duration-ms="7" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerRefAsParentInAllOf -->
        <test-method status="PASS" signature="testOpenAPINormalizerRefactorAllOfWithPropertiesOnly()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerRefactorAllOfWithPropertiesOnly" duration-ms="7" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerRefactorAllOfWithPropertiesOnly -->
        <test-method status="PASS" signature="testOpenAPINormalizerRemoveAnyOfOneOfAndKeepPropertiesOnly()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerRemoveAnyOfOneOfAndKeepPropertiesOnly" duration-ms="4" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerRemoveAnyOfOneOfAndKeepPropertiesOnly -->
        <test-method status="PASS" signature="testOpenAPINormalizerSetTagsInAllOperations()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerSetTagsInAllOperations" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerSetTagsInAllOperations -->
        <test-method status="PASS" signature="testOpenAPINormalizerSimplifyBooleanEnum()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerSimplifyBooleanEnum" duration-ms="4" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerSimplifyBooleanEnum -->
        <test-method status="PASS" signature="testOpenAPINormalizerSimplifyBooleanEnumWithComposedSchema()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerSimplifyBooleanEnumWithComposedSchema" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerSimplifyBooleanEnumWithComposedSchema -->
        <test-method status="PASS" signature="testOpenAPINormalizerSimplifyOneOfAnyOf()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerSimplifyOneOfAnyOf" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerSimplifyOneOfAnyOf -->
        <test-method status="PASS" signature="testOpenAPINormalizerSimplifyOneOfAnyOfStringAndEnumString()[pri:0, instance:org.openapitools.codegen.OpenAPINormalizerTest@51a4feef]" name="testOpenAPINormalizerSimplifyOneOfAnyOfStringAndEnumString" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAPINormalizerSimplifyOneOfAnyOfStringAndEnumString -->
      </class> <!-- org.openapitools.codegen.OpenAPINormalizerTest -->
      <class name="org.openapitools.codegen.csharpnetcorefunctions.CsharpNetcoreFunctionsServerCodegenTest">
        <test-method status="PASS" signature="testToEnumVarName()[pri:0, instance:org.openapitools.codegen.csharpnetcorefunctions.CsharpNetcoreFunctionsServerCodegenTest@6184047b]" name="testToEnumVarName" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumVarName -->
      </class> <!-- org.openapitools.codegen.csharpnetcorefunctions.CsharpNetcoreFunctionsServerCodegenTest -->
      <class name="org.openapitools.codegen.haskellservant.HaskellServantOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.haskellservant.HaskellServantOptionsTest@510689af]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.haskellservant.HaskellServantOptionsTest@510689af]" name="checkOptionsProcessing" duration-ms="2" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.haskellservant.HaskellServantOptionsTest -->
      <class name="org.openapitools.codegen.objc.ObjcModelTest">
        <test-method status="PASS" signature="advancedMapPropertyTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="advancedMapPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:32 UTC" description="convert a model with an advanced map property" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- advancedMapPropertyTest -->
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="arrayModelTest" duration-ms="5" started-at="2023-04-09T10:14:32 UTC" description="convert an array model" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="binaryDataModelTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="binaryDataModelTest" duration-ms="42" started-at="2023-04-09T10:14:32 UTC" description="test binary data" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- binaryDataModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="complexMapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="complexPropertyTest" duration-ms="0" started-at="2023-04-09T10:14:32 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="isArrayModelTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="isArrayModelTest" duration-ms="263" started-at="2023-04-09T10:14:32 UTC" description="test isArray" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isArrayModelTest -->
        <test-method status="PASS" signature="issue316Test()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="issue316Test" duration-ms="10" started-at="2023-04-09T10:14:32 UTC" description="create proper imports per #316" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- issue316Test -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="listPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:32 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="mapModelTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" description="convert a map model" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="mapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="mixedPropertiesDataModelTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="mixedPropertiesDataModelTest" duration-ms="84" started-at="2023-04-09T10:14:32 UTC" description="test mixedProperties" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mixedPropertiesDataModelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:32 UTC" description="convert a simple java model" finished-at="2023-04-09T10:14:32 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="uuidAndPasswordDataModelTest()[pri:0, instance:org.openapitools.codegen.objc.ObjcModelTest@4fe875be]" name="uuidAndPasswordDataModelTest" duration-ms="79" started-at="2023-04-09T10:14:32 UTC" description="test uuid" finished-at="2023-04-09T10:14:33 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uuidAndPasswordDataModelTest -->
      </class> <!-- org.openapitools.codegen.objc.ObjcModelTest -->
      <class name="org.openapitools.codegen.haskellservant.HaskellServantCodegenTest">
        <test-method status="PASS" signature="testGenerateRootEndpoint()[pri:0, instance:org.openapitools.codegen.haskellservant.HaskellServantCodegenTest@600f5704]" name="testGenerateRootEndpoint" duration-ms="8" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateRootEndpoint -->
      </class> <!-- org.openapitools.codegen.haskellservant.HaskellServantCodegenTest -->
      <class name="org.openapitools.codegen.jetbrains.http.client.JetbrainsHttpClientClientCodegenModelTest">
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.jetbrains.http.client.JetbrainsHttpClientClientCodegenModelTest@5f5559]" name="simpleModelTest" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" description="convert a simple java model" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
      </class> <!-- org.openapitools.codegen.jetbrains.http.client.JetbrainsHttpClientClientCodegenModelTest -->
      <class name="org.openapitools.codegen.php.PhpClientCodegenTest">
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpClientCodegenTest@2fdbd353]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpClientCodegenTest@2fdbd353]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpClientCodegenTest@2fdbd353]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
      </class> <!-- org.openapitools.codegen.php.PhpClientCodegenTest -->
      <class name="org.openapitools.codegen.php.PhpSymfonyServerCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpSymfonyServerCodegenTest@4127dcdb]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testGeneratePing()[pri:0, instance:org.openapitools.codegen.php.PhpSymfonyServerCodegenTest@4127dcdb]" name="testGeneratePing" duration-ms="33" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePing -->
        <test-method status="PASS" signature="testGeneratePingWithDifferentSourceDirectory()[pri:0, instance:org.openapitools.codegen.php.PhpSymfonyServerCodegenTest@4127dcdb]" name="testGeneratePingWithDifferentSourceDirectory" duration-ms="35" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratePingWithDifferentSourceDirectory -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpSymfonyServerCodegenTest@4127dcdb]" name="testInitialConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.php.PhpSymfonyServerCodegenTest@4127dcdb]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.php.PhpSymfonyServerCodegenTest -->
      <class name="org.openapitools.codegen.dart.dio.DartDioClientCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioClientCodegenTest@37cb41fa]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioClientCodegenTest@37cb41fa]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testKeywords()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioClientCodegenTest@37cb41fa]" name="testKeywords" duration-ms="2" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKeywords -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.dart.dio.DartDioClientCodegenTest@37cb41fa]" name="testSettersForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.dart.dio.DartDioClientCodegenTest -->
      <class name="org.openapitools.codegen.config.MergedSpecBuilderTest">
        <test-method status="PASS" signature="shouldMergeJsonSpecs()[pri:0, instance:org.openapitools.codegen.config.MergedSpecBuilderTest@3e58a80e]" name="shouldMergeJsonSpecs" duration-ms="96" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldMergeJsonSpecs -->
        <test-method status="PASS" signature="shouldMergeYamlSpecs()[pri:0, instance:org.openapitools.codegen.config.MergedSpecBuilderTest@3e58a80e]" name="shouldMergeYamlSpecs" duration-ms="61" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldMergeYamlSpecs -->
      </class> <!-- org.openapitools.codegen.config.MergedSpecBuilderTest -->
      <class name="org.openapitools.codegen.php.PhpClientExampleTest">
        <test-method status="PASS" signature="exampleValueTest()[pri:0, instance:org.openapitools.codegen.php.PhpClientExampleTest@22ff53d1]" name="exampleValueTest" duration-ms="0" started-at="2023-04-09T10:15:07 UTC" description="sets example value" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleValueTest -->
      </class> <!-- org.openapitools.codegen.php.PhpClientExampleTest -->
      <class name="org.openapitools.codegen.cpptiny.CppTinyBaseTest">
        <test-method status="PASS" signature="exampleOfATest()[pri:0, instance:org.openapitools.codegen.cpptiny.CppTinyBaseTest@1af72d44]" name="exampleOfATest" duration-ms="1" started-at="2023-04-09T10:15:07 UTC" description="An example of testing the code model before it is rendered" finished-at="2023-04-09T10:15:07 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleOfATest -->
      </class> <!-- org.openapitools.codegen.cpptiny.CppTinyBaseTest -->
      <class name="org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest">
        <test-method status="PASS" signature="doesNotContainESMTSConfigFileInCaseOfES5AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="doesNotContainESMTSConfigFileInCaseOfES5AndNPM" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doesNotContainESMTSConfigFileInCaseOfES5AndNPM -->
        <test-method status="PASS" signature="containsESMTSConfigFileInCaseOfES6AndNPM()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="containsESMTSConfigFileInCaseOfES6AndNPM" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containsESMTSConfigFileInCaseOfES6AndNPM -->
        <test-method status="PASS" signature="testSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="testSnapshotVersion" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSnapshotVersion -->
        <test-method status="PASS" signature="getTypeDeclarationTest()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="getTypeDeclarationTest" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTypeDeclarationTest -->
        <test-method status="PASS" signature="testWithoutSnapshotVersion()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="testWithoutSnapshotVersion" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutSnapshotVersion -->
        <test-method status="PASS" signature="toVarName()[pri:0, instance:org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest@7a58b77b]" name="toVarName" duration-ms="0" started-at="2023-04-09T10:15:00 UTC" finished-at="2023-04-09T10:15:00 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVarName -->
      </class> <!-- org.openapitools.codegen.typescript.fetch.TypeScriptFetchClientCodegenTest -->
      <class name="org.openapitools.codegen.python.PythonNextgenClientCodegenTest">
        <test-method status="PASS" signature="apiExampleDocTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="apiExampleDocTest" duration-ms="75" started-at="2023-04-09T10:14:34 UTC" description="check API example has input param(configuration) when it creates api_client" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiExampleDocTest -->
        <test-method status="PASS" signature="arrayModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="arrayModelTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert an array model" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayModelTest -->
        <test-method status="PASS" signature="complexListPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="complexListPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with complex list property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexListPropertyTest -->
        <test-method status="PASS" signature="complexMapPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="complexMapPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with complex map property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexMapPropertyTest -->
        <test-method status="PASS" signature="complexPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="complexPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with complex property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complexPropertyTest -->
        <test-method status="PASS" signature="listPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="listPropertyTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a model with list property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listPropertyTest -->
        <test-method status="PASS" signature="mapModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="mapModelTest" duration-ms="5" started-at="2023-04-09T10:14:34 UTC" description="convert a map model" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapModelTest -->
        <test-method status="PASS" signature="mapPropertyTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="mapPropertyTest" duration-ms="2" started-at="2023-04-09T10:14:34 UTC" description="convert a model with a map property" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapPropertyTest -->
        <test-method status="PASS" signature="modelTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="modelTest" duration-ms="17" started-at="2023-04-09T10:14:34 UTC" description="convert a python model with dots" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelTest -->
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" description="convert a simple java model" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testEnumNull()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="testEnumNull" duration-ms="3" started-at="2023-04-09T10:14:34 UTC" description="test enum null/nullable patterns" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumNull -->
        <test-method status="PASS" signature="testGeneratedExampleValues()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="testGeneratedExampleValues" duration-ms="26" started-at="2023-04-09T10:14:34 UTC" description="test generated example values for string properties" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedExampleValues -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testRegularExpressionOpenAPISchemaVersion3()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="testRegularExpressionOpenAPISchemaVersion3" duration-ms="8" started-at="2023-04-09T10:14:34 UTC" description="test regex patterns" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegularExpressionOpenAPISchemaVersion3 -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="testSettersForConfigValues" duration-ms="1" started-at="2023-04-09T10:14:34 UTC" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
        <test-method status="PASS" signature="testSingleQuotes()[pri:0, instance:org.openapitools.codegen.python.PythonNextgenClientCodegenTest@71c37190]" name="testSingleQuotes" duration-ms="0" started-at="2023-04-09T10:14:34 UTC" description="test single quotes escape" finished-at="2023-04-09T10:14:34 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleQuotes -->
      </class> <!-- org.openapitools.codegen.python.PythonNextgenClientCodegenTest -->
      <class name="org.openapitools.codegen.swift5.Swift5ModelTest">
        <test-method status="PASS" signature="simpleModelTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ModelTest@1d3a0154]" name="simpleModelTest" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" description="convert a simple java model" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleModelTest -->
        <test-method status="PASS" signature="useCustomDateTimeTest()[pri:0, instance:org.openapitools.codegen.swift5.Swift5ModelTest@1d3a0154]" name="useCustomDateTimeTest" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" description="convert a simple java model" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useCustomDateTimeTest -->
      </class> <!-- org.openapitools.codegen.swift5.Swift5ModelTest -->
      <class name="org.openapitools.codegen.php.AbstractPhpCodegenTest">
        <test-method status="PASS" signature="testAdditionalPropertiesPutForConfigValues()[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testAdditionalPropertiesPutForConfigValues" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionalPropertiesPutForConfigValues -->
        <test-method status="PASS" signature="testArrayOfArrays()[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testArrayOfArrays" duration-ms="6" started-at="2023-04-09T10:15:11 UTC" description="Issue #8945" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayOfArrays -->
        <test-method status="PASS" signature="testEnumPropertyWithDefaultValue()[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testEnumPropertyWithDefaultValue" duration-ms="3" started-at="2023-04-09T10:15:11 UTC" description="Issue #10244" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumPropertyWithDefaultValue -->
        <test-method status="PASS" signature="testGetComposerPackageName(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testGetComposerPackageName" duration-ms="1" started-at="2023-04-09T10:15:11 UTC" description="Issue #9998" data-provider="composerNames" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComposerPackageName -->
        <test-method status="PASS" signature="testEscapeMediaType()[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testEscapeMediaType" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeMediaType -->
        <test-method status="PASS" signature="testGetComposerPackageName(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testGetComposerPackageName" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="Issue #9998" data-provider="composerNames" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComposerPackageName -->
        <test-method status="PASS" signature="testGetComposerPackageName(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testGetComposerPackageName" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="Issue #9998" data-provider="composerNames" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[GIT_REPO_ID]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GIT_USER_ID]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComposerPackageName -->
        <test-method status="PASS" signature="testInitialConfigValues()[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testInitialConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialConfigValues -->
        <test-method status="PASS" signature="testGetComposerPackageName(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testGetComposerPackageName" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="Issue #9998" data-provider="composerNames" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo/bar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComposerPackageName -->
        <test-method status="PASS" signature="testGetComposerPackageName(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testGetComposerPackageName" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" description="Issue #9998" data-provider="composerNames" finished-at="2023-04-09T10:15:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[git_repo_id]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[git_user_id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[git_repo_id/git_user_id]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComposerPackageName -->
        <test-method status="PASS" signature="testSettersForConfigValues()[pri:0, instance:org.openapitools.codegen.php.AbstractPhpCodegenTest@36bf903c]" name="testSettersForConfigValues" duration-ms="0" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSettersForConfigValues -->
      </class> <!-- org.openapitools.codegen.php.AbstractPhpCodegenTest -->
      <class name="org.openapitools.codegen.ktorm.KtormSchemaCodegenTest">
        <test-method status="PASS" signature="testAddSurrogateKey()[pri:0, instance:org.openapitools.codegen.ktorm.KtormSchemaCodegenTest@6a87026]" name="testAddSurrogateKey" duration-ms="3" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddSurrogateKey -->
        <test-method status="PASS" signature="testDefinePrimaryKey()[pri:0, instance:org.openapitools.codegen.ktorm.KtormSchemaCodegenTest@6a87026]" name="testDefinePrimaryKey" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinePrimaryKey -->
        <test-method status="PASS" signature="testMatchedColKotlinType()[pri:0, instance:org.openapitools.codegen.ktorm.KtormSchemaCodegenTest@6a87026]" name="testMatchedColKotlinType" duration-ms="17" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchedColKotlinType -->
        <test-method status="PASS" signature="testDontAddSurrogateKey()[pri:0, instance:org.openapitools.codegen.ktorm.KtormSchemaCodegenTest@6a87026]" name="testDontAddSurrogateKey" duration-ms="0" started-at="2023-04-09T10:15:10 UTC" finished-at="2023-04-09T10:15:10 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDontAddSurrogateKey -->
        <test-method status="PASS" signature="testMatchedColType()[pri:0, instance:org.openapitools.codegen.ktorm.KtormSchemaCodegenTest@6a87026]" name="testMatchedColType" duration-ms="18" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchedColType -->
        <test-method status="PASS" signature="testMatchedRelation()[pri:0, instance:org.openapitools.codegen.ktorm.KtormSchemaCodegenTest@6a87026]" name="testMatchedRelation" duration-ms="6" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchedRelation -->
        <test-method status="PASS" signature="testNonMatchedRelation()[pri:0, instance:org.openapitools.codegen.ktorm.KtormSchemaCodegenTest@6a87026]" name="testNonMatchedRelation" duration-ms="12" started-at="2023-04-09T10:15:11 UTC" finished-at="2023-04-09T10:15:11 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonMatchedRelation -->
      </class> <!-- org.openapitools.codegen.ktorm.KtormSchemaCodegenTest -->
      <class name="org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest">
        <test-method status="PASS" signature="testWithApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithApiVersion" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" description="tests if API version specification is used if no version is provided in additional properties" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithApiVersion -->
        <test-method status="PASS" signature="testWithNpmVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithNpmVersion" duration-ms="1" started-at="2023-04-09T10:15:20 UTC" description="tests if npmVersion additional property is used" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNpmVersion -->
        <test-method status="PASS" signature="testWithoutApiVersion()[pri:0, instance:org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest@1564d5de]" name="testWithoutApiVersion" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" description="tests if default version is used when neither OpenAPI version nor npmVersion additional property has been provided" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutApiVersion -->
      </class> <!-- org.openapitools.codegen.typescript.typescriptangular.TypescriptAngularApiVersionTest -->
      <class name="org.openapitools.codegen.scalaakka.ScalaAkkaClientOptionsTest">
        <test-method status="PASS" signature="checkOptionsHelp()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientOptionsTest@5339cdc6]" name="checkOptionsHelp" duration-ms="0" started-at="2023-04-09T10:14:58 UTC" description="check if all options described in documentation are presented in test case" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsHelp -->
        <test-method status="PASS" signature="checkOptionsProcessing()[pri:0, instance:org.openapitools.codegen.scalaakka.ScalaAkkaClientOptionsTest@5339cdc6]" name="checkOptionsProcessing" duration-ms="2" started-at="2023-04-09T10:14:58 UTC" finished-at="2023-04-09T10:14:58 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionsProcessing -->
      </class> <!-- org.openapitools.codegen.scalaakka.ScalaAkkaClientOptionsTest -->
      <class name="org.openapitools.codegen.csharpnetcore.CSharpNetCoreClientCodegenTest">
        <test-method status="PASS" signature="testToEnumVarName()[pri:0, instance:org.openapitools.codegen.csharpnetcore.CSharpNetCoreClientCodegenTest@30bac2a0]" name="testToEnumVarName" duration-ms="0" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEnumVarName -->
        <test-method status="PASS" signature="testUnsigned()[pri:0, instance:org.openapitools.codegen.csharpnetcore.CSharpNetCoreClientCodegenTest@30bac2a0]" name="testUnsigned" duration-ms="9" started-at="2023-04-09T10:15:20 UTC" finished-at="2023-04-09T10:15:20 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnsigned -->
      </class> <!-- org.openapitools.codegen.csharpnetcore.CSharpNetCoreClientCodegenTest -->
      <class name="org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest">
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="3" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ArraySchema {
    class Schema {
        type: array
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class StringSchema {
    class Schema {
        type: string
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ObjectSchema {
    class Schema {
        type: object
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testDefaultRecommendationOneOfWithSiblingProperties(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testDefaultRecommendationOneOfWithSiblingProperties" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="default oneOf with sibling properties recommendation" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class MapSchema {
    class Schema {
        type: object
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultRecommendationOneOfWithSiblingProperties -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ObjectSchema {
    class Schema {
        type: object
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class StringSchema {
    class Schema {
        type: string
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class MapSchema {
    class Schema {
        type: object
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRecommendations(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRecommendations" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off recommendations" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ArraySchema {
    class Schema {
        type: array
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRecommendations -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: {other=class ArraySchema {
            class Schema {
                type: array
                format: null
                $ref: null
                description: null
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                not: null
                properties: null
                additionalProperties: null
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }
        }}
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="1" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class StringSchema {
    class Schema {
        type: string
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ComposedSchema {
    class Schema {
        type: null
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ObjectSchema {
    class Schema {
        type: object
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class MapSchema {
    class Schema {
        type: object
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
        <test-method status="PASS" signature="testOneOfWithSiblingPropertiesDisabledRule(io.swagger.v3.oas.models.media.Schema,boolean)[pri:0, instance:org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest@49d831c2]" name="testOneOfWithSiblingPropertiesDisabledRule" duration-ms="0" started-at="2023-04-09T10:15:18 UTC" description="disable oneOf with sibling properties recommendation via turning off rule" data-provider="apacheNginxRecommendationExpectations" finished-at="2023-04-09T10:15:18 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[class ArraySchema {
    class Schema {
        type: array
        format: null
        $ref: null
        description: null
        title: null
        multipleOf: null
        maximum: null
        exclusiveMaximum: null
        minimum: null
        exclusiveMinimum: null
        maxLength: null
        minLength: null
        pattern: null
        maxItems: null
        minItems: null
        uniqueItems: null
        maxProperties: null
        minProperties: null
        required: null
        not: null
        properties: null
        additionalProperties: null
        nullable: null
        readOnly: null
        writeOnly: null
        example: null
        externalDocs: null
        deprecated: null
        discriminator: null
        xml: null
    }
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneOfWithSiblingPropertiesDisabledRule -->
      </class> <!-- org.openapitools.codegen.validations.oas.OpenApiSchemaValidationsTest -->
      <class name="org.openapitools.codegen.config.DynamicSettingsTest">
        <test-method status="PASS" signature="tesDynamicSettingsWithDynamicProperties()[pri:0, instance:org.openapitools.codegen.config.DynamicSettingsTest@59309333]" name="tesDynamicSettingsWithDynamicProperties" duration-ms="35" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesDynamicSettingsWithDynamicProperties -->
        <test-method status="PASS" signature="testDynamicSettingsSetsConstructorDefaultsOnDeserialization()[pri:0, instance:org.openapitools.codegen.config.DynamicSettingsTest@59309333]" name="testDynamicSettingsSetsConstructorDefaultsOnDeserialization" duration-ms="1" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicSettingsSetsConstructorDefaultsOnDeserialization -->
        <test-method status="PASS" signature="testDynamicSettingsWithBuilderSideEffects()[pri:0, instance:org.openapitools.codegen.config.DynamicSettingsTest@59309333]" name="testDynamicSettingsWithBuilderSideEffects" duration-ms="0" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicSettingsWithBuilderSideEffects -->
        <test-method status="PASS" signature="testFullConfigWithFilesMap()[pri:0, instance:org.openapitools.codegen.config.DynamicSettingsTest@59309333]" name="testFullConfigWithFilesMap" duration-ms="2" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullConfigWithFilesMap -->
      </class> <!-- org.openapitools.codegen.config.DynamicSettingsTest -->
      <class name="org.openapitools.codegen.config.CodegenConfiguratorTest">
        <test-method status="PASS" signature="shouldSetConfigProperties()[pri:0, instance:org.openapitools.codegen.config.CodegenConfiguratorTest@1aa7ecca]" name="shouldSetConfigProperties" duration-ms="11" started-at="2023-04-09T10:15:09 UTC" finished-at="2023-04-09T10:15:09 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetConfigProperties -->
      </class> <!-- org.openapitools.codegen.config.CodegenConfiguratorTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
